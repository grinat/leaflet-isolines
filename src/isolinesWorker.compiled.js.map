{"version":3,"file":"isolinesWorker.compiled.js","sources":["../node_modules/@turf/helpers/main.es.js","../node_modules/@turf/meta/main.es.js","../node_modules/@turf/bbox/main.es.js","../node_modules/@turf/invariant/main.es.js","../node_modules/@turf/distance/main.es.js","../node_modules/turf-jsts/jsts.mjs","../node_modules/@turf/truncate/main.es.js","../node_modules/@turf/clean-coords/main.es.js","../node_modules/@turf/intersect/main.es.js","../node_modules/@turf/hex-grid/main.es.js","../node_modules/@turf/boolean-point-on-line/main.es.js","../node_modules/@turf/boolean-point-in-polygon/main.es.js","../node_modules/@turf/boolean-within/main.es.js","../node_modules/@turf/point-grid/main.es.js","../node_modules/@turf/centroid/main.es.js","../node_modules/@turf/square-grid/main.es.js","../node_modules/@turf/triangle-grid/main.es.js","../node_modules/@turf/clone/main.es.js","../node_modules/@turf/interpolate/main.es.js","../node_modules/@turf/area/main.es.js","../node_modules/@turf/explode/main.es.js","../node_modules/@turf/isobands/main.es.js","../node_modules/@turf/isolines/main.es.js","IsolineCalc.js","isolinesWorker.js"],"sourcesContent":["/**\n * Earth Radius used with the Harvesine formula and approximates using a spherical (non-ellipsoid) Earth.\n */\nvar earthRadius = 6371008.8;\n\n/**\n * Unit of measurement factors using a spherical (non-ellipsoid) earth radius.\n */\nvar factors = {\n    meters: earthRadius,\n    metres: earthRadius,\n    millimeters: earthRadius * 1000,\n    millimetres: earthRadius * 1000,\n    centimeters: earthRadius * 100,\n    centimetres: earthRadius * 100,\n    kilometers: earthRadius / 1000,\n    kilometres: earthRadius / 1000,\n    miles: earthRadius / 1609.344,\n    nauticalmiles: earthRadius / 1852,\n    inches: earthRadius * 39.370,\n    yards: earthRadius / 1.0936,\n    feet: earthRadius * 3.28084,\n    radians: 1,\n    degrees: earthRadius / 111325,\n};\n\n/**\n * Units of measurement factors based on 1 meter.\n */\nvar unitsFactors = {\n    meters: 1,\n    metres: 1,\n    millimeters: 1000,\n    millimetres: 1000,\n    centimeters: 100,\n    centimetres: 100,\n    kilometers: 1 / 1000,\n    kilometres: 1 / 1000,\n    miles: 1 / 1609.344,\n    nauticalmiles: 1 / 1852,\n    inches: 39.370,\n    yards: 1 / 1.0936,\n    feet: 3.28084,\n    radians: 1 / earthRadius,\n    degrees: 1 / 111325,\n};\n\n/**\n * Area of measurement factors based on 1 square meter.\n */\nvar areaFactors = {\n    meters: 1,\n    metres: 1,\n    millimeters: 1000000,\n    millimetres: 1000000,\n    centimeters: 10000,\n    centimetres: 10000,\n    kilometers: 0.000001,\n    kilometres: 0.000001,\n    acres: 0.000247105,\n    miles: 3.86e-7,\n    yards: 1.195990046,\n    feet: 10.763910417,\n    inches: 1550.003100006\n};\n\n/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature} a GeoJSON Feature\n * @example\n * var geometry = {\n *   \"type\": \"Point\",\n *   \"coordinates\": [110, 50]\n * };\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nfunction feature(geometry, properties, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var id = options.id;\n\n    // Validation\n    if (geometry === undefined) throw new Error('geometry is required');\n    if (properties && properties.constructor !== Object) throw new Error('properties must be an Object');\n    if (bbox) validateBBox(bbox);\n    if (id) validateId(id);\n\n    // Main\n    var feat = {type: 'Feature'};\n    if (id) feat.id = id;\n    if (bbox) feat.bbox = bbox;\n    feat.properties = properties || {};\n    feat.geometry = geometry;\n    return feat;\n}\n\n/**\n * Creates a GeoJSON {@link Geometry} from a Geometry string type & coordinates.\n * For GeometryCollection type use `helpers.geometryCollection`\n *\n * @name geometry\n * @param {string} type Geometry Type\n * @param {Array<number>} coordinates Coordinates\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Geometry\n * @returns {Geometry} a GeoJSON Geometry\n * @example\n * var type = 'Point';\n * var coordinates = [110, 50];\n *\n * var geometry = turf.geometry(type, coordinates);\n *\n * //=geometry\n */\nfunction geometry(type, coordinates, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n\n    // Validation\n    if (!type) throw new Error('type is required');\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n    if (bbox) validateBBox(bbox);\n\n    // Main\n    var geom;\n    switch (type) {\n    case 'Point': geom = point(coordinates).geometry; break;\n    case 'LineString': geom = lineString(coordinates).geometry; break;\n    case 'Polygon': geom = polygon(coordinates).geometry; break;\n    case 'MultiPoint': geom = multiPoint(coordinates).geometry; break;\n    case 'MultiLineString': geom = multiLineString(coordinates).geometry; break;\n    case 'MultiPolygon': geom = multiPolygon(coordinates).geometry; break;\n    default: throw new Error(type + ' is invalid');\n    }\n    if (bbox) geom.bbox = bbox;\n    return geom;\n}\n\n/**\n * Creates a {@link Point} {@link Feature} from a Position.\n *\n * @name point\n * @param {Array<number>} coordinates longitude, latitude position (each in decimal degrees)\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Point>} a Point feature\n * @example\n * var point = turf.point([-75.343, 39.984]);\n *\n * //=point\n */\nfunction point(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n    if (coordinates.length < 2) throw new Error('coordinates must be at least 2 numbers long');\n    if (!isNumber(coordinates[0]) || !isNumber(coordinates[1])) throw new Error('coordinates must contain numbers');\n\n    return feature({\n        type: 'Point',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Point} {@link FeatureCollection} from an Array of Point coordinates.\n *\n * @name points\n * @param {Array<Array<number>>} coordinates an array of Points\n * @param {Object} [properties={}] Translate these properties to each Feature\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Point>} Point Feature\n * @example\n * var points = turf.points([\n *   [-75, 39],\n *   [-80, 45],\n *   [-78, 50]\n * ]);\n *\n * //=points\n */\nfunction points(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return point(coords, properties);\n    }), options);\n}\n\n/**\n * Creates a {@link Polygon} {@link Feature} from an Array of LinearRings.\n *\n * @name polygon\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Polygon>} Polygon Feature\n * @example\n * var polygon = turf.polygon([[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]], { name: 'poly1' });\n *\n * //=polygon\n */\nfunction polygon(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    for (var i = 0; i < coordinates.length; i++) {\n        var ring = coordinates[i];\n        if (ring.length < 4) {\n            throw new Error('Each LinearRing of a Polygon must have 4 or more Positions.');\n        }\n        for (var j = 0; j < ring[ring.length - 1].length; j++) {\n            // Check if first point of Polygon contains two numbers\n            if (i === 0 && j === 0 && !isNumber(ring[0][0]) || !isNumber(ring[0][1])) throw new Error('coordinates must contain numbers');\n            if (ring[ring.length - 1][j] !== ring[0][j]) {\n                throw new Error('First and last Position are not equivalent.');\n            }\n        }\n    }\n\n    return feature({\n        type: 'Polygon',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Polygon} {@link FeatureCollection} from an Array of Polygon coordinates.\n *\n * @name polygons\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygon coordinates\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Polygon>} Polygon FeatureCollection\n * @example\n * var polygons = turf.polygons([\n *   [[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]],\n *   [[[-15, 42], [-14, 46], [-12, 41], [-17, 44], [-15, 42]]],\n * ]);\n *\n * //=polygons\n */\nfunction polygons(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return polygon(coords, properties);\n    }), options);\n}\n\n/**\n * Creates a {@link LineString} {@link Feature} from an Array of Positions.\n *\n * @name lineString\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<LineString>} LineString Feature\n * @example\n * var linestring1 = turf.lineString([[-24, 63], [-23, 60], [-25, 65], [-20, 69]], {name: 'line 1'});\n * var linestring2 = turf.lineString([[-14, 43], [-13, 40], [-15, 45], [-10, 49]], {name: 'line 2'});\n *\n * //=linestring1\n * //=linestring2\n */\nfunction lineString(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (coordinates.length < 2) throw new Error('coordinates must be an array of two or more positions');\n    // Check if first point of LineString contains two numbers\n    if (!isNumber(coordinates[0][1]) || !isNumber(coordinates[0][1])) throw new Error('coordinates must contain numbers');\n\n    return feature({\n        type: 'LineString',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link LineString} {@link FeatureCollection} from an Array of LineString coordinates.\n *\n * @name lineStrings\n * @param {Array<Array<number>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<LineString>} LineString FeatureCollection\n * @example\n * var linestrings = turf.lineStrings([\n *   [[-24, 63], [-23, 60], [-25, 65], [-20, 69]],\n *   [[-14, 43], [-13, 40], [-15, 45], [-10, 49]]\n * ]);\n *\n * //=linestrings\n */\nfunction lineStrings(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return lineString(coords, properties);\n    }), options);\n}\n\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @name featureCollection\n * @param {Feature[]} features input features\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {FeatureCollection} FeatureCollection of Features\n * @example\n * var locationA = turf.point([-75.343, 39.984], {name: 'Location A'});\n * var locationB = turf.point([-75.833, 39.284], {name: 'Location B'});\n * var locationC = turf.point([-75.534, 39.123], {name: 'Location C'});\n *\n * var collection = turf.featureCollection([\n *   locationA,\n *   locationB,\n *   locationC\n * ]);\n *\n * //=collection\n */\nfunction featureCollection(features, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var id = options.id;\n\n    // Validation\n    if (!features) throw new Error('No features passed');\n    if (!Array.isArray(features)) throw new Error('features must be an Array');\n    if (bbox) validateBBox(bbox);\n    if (id) validateId(id);\n\n    // Main\n    var fc = {type: 'FeatureCollection'};\n    if (id) fc.id = id;\n    if (bbox) fc.bbox = bbox;\n    fc.features = features;\n    return fc;\n}\n\n/**\n * Creates a {@link Feature<MultiLineString>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiLineString\n * @param {Array<Array<Array<number>>>} coordinates an array of LineStrings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiLineString>} a MultiLineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiLine = turf.multiLineString([[[0,0],[10,10]]]);\n *\n * //=multiLine\n */\nfunction multiLineString(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiLineString',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPoint>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPoint\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPoint>} a MultiPoint feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPt = turf.multiPoint([[0,0],[10,10]]);\n *\n * //=multiPt\n */\nfunction multiPoint(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiPoint',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPolygon>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPolygon\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygons\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPolygon>} a multipolygon feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPoly = turf.multiPolygon([[[[0,0],[0,10],[10,10],[10,0],[0,0]]]]);\n *\n * //=multiPoly\n *\n */\nfunction multiPolygon(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiPolygon',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<GeometryCollection>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name geometryCollection\n * @param {Array<Geometry>} geometries an array of GeoJSON Geometries\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<GeometryCollection>} a GeoJSON GeometryCollection Feature\n * @example\n * var pt = {\n *     \"type\": \"Point\",\n *       \"coordinates\": [100, 0]\n *     };\n * var line = {\n *     \"type\": \"LineString\",\n *     \"coordinates\": [ [101, 0], [102, 1] ]\n *   };\n * var collection = turf.geometryCollection([pt, line]);\n *\n * //=collection\n */\nfunction geometryCollection(geometries, properties, options) {\n    if (!geometries) throw new Error('geometries is required');\n    if (!Array.isArray(geometries)) throw new Error('geometries must be an Array');\n\n    return feature({\n        type: 'GeometryCollection',\n        geometries: geometries\n    }, properties, options);\n}\n\n/**\n * Round number to precision\n *\n * @param {number} num Number\n * @param {number} [precision=0] Precision\n * @returns {number} rounded number\n * @example\n * turf.round(120.4321)\n * //=120\n *\n * turf.round(120.4321, 2)\n * //=120.43\n */\nfunction round(num, precision) {\n    if (num === undefined || num === null || isNaN(num)) throw new Error('num is required');\n    if (precision && !(precision >= 0)) throw new Error('precision must be a positive number');\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(num * multiplier) / multiplier;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from radians to a more friendly unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name radiansToLength\n * @param {number} radians in radians across the sphere\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} distance\n */\nfunction radiansToLength(radians, units) {\n    if (radians === undefined || radians === null) throw new Error('radians is required');\n\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return radians * factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into radians\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name lengthToRadians\n * @param {number} distance in real units\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} radians\n */\nfunction lengthToRadians(distance, units) {\n    if (distance === undefined || distance === null) throw new Error('distance is required');\n\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return distance / factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into degrees\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, centimeters, kilometres, feet\n *\n * @name lengthToDegrees\n * @param {number} distance in real units\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} degrees\n */\nfunction lengthToDegrees(distance, units) {\n    return radiansToDegrees(lengthToRadians(distance, units));\n}\n\n/**\n * Converts any bearing angle from the north line direction (positive clockwise)\n * and returns an angle between 0-360 degrees (positive clockwise), 0 being the north line\n *\n * @name bearingToAzimuth\n * @param {number} bearing angle, between -180 and +180 degrees\n * @returns {number} angle between 0 and 360 degrees\n */\nfunction bearingToAzimuth(bearing) {\n    if (bearing === null || bearing === undefined) throw new Error('bearing is required');\n\n    var angle = bearing % 360;\n    if (angle < 0) angle += 360;\n    return angle;\n}\n\n/**\n * Converts an angle in radians to degrees\n *\n * @name radiansToDegrees\n * @param {number} radians angle in radians\n * @returns {number} degrees between 0 and 360 degrees\n */\nfunction radiansToDegrees(radians) {\n    if (radians === null || radians === undefined) throw new Error('radians is required');\n\n    var degrees = radians % (2 * Math.PI);\n    return degrees * 180 / Math.PI;\n}\n\n/**\n * Converts an angle in degrees to radians\n *\n * @name degreesToRadians\n * @param {number} degrees angle between 0 and 360 degrees\n * @returns {number} angle in radians\n */\nfunction degreesToRadians(degrees) {\n    if (degrees === null || degrees === undefined) throw new Error('degrees is required');\n\n    var radians = degrees % 360;\n    return radians * Math.PI / 180;\n}\n\n/**\n * Converts a length to the requested unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @param {number} length to be converted\n * @param {string} originalUnit of the length\n * @param {string} [finalUnit='kilometers'] returned unit\n * @returns {number} the converted length\n */\nfunction convertLength(length, originalUnit, finalUnit) {\n    if (length === null || length === undefined) throw new Error('length is required');\n    if (!(length >= 0)) throw new Error('length must be a positive number');\n\n    return radiansToLength(lengthToRadians(length, originalUnit), finalUnit || 'kilometers');\n}\n\n/**\n * Converts a area to the requested unit.\n * Valid units: kilometers, kilometres, meters, metres, centimetres, millimeters, acres, miles, yards, feet, inches\n * @param {number} area to be converted\n * @param {string} [originalUnit='meters'] of the distance\n * @param {string} [finalUnit='kilometers'] returned unit\n * @returns {number} the converted distance\n */\nfunction convertArea(area, originalUnit, finalUnit) {\n    if (area === null || area === undefined) throw new Error('area is required');\n    if (!(area >= 0)) throw new Error('area must be a positive number');\n\n    var startFactor = areaFactors[originalUnit || 'meters'];\n    if (!startFactor) throw new Error('invalid original units');\n\n    var finalFactor = areaFactors[finalUnit || 'kilometers'];\n    if (!finalFactor) throw new Error('invalid final units');\n\n    return (area / startFactor) * finalFactor;\n}\n\n/**\n * isNumber\n *\n * @param {*} num Number to validate\n * @returns {boolean} true/false\n * @example\n * turf.isNumber(123)\n * //=true\n * turf.isNumber('foo')\n * //=false\n */\nfunction isNumber(num) {\n    return !isNaN(num) && num !== null && !Array.isArray(num);\n}\n\n/**\n * isObject\n *\n * @param {*} input variable to validate\n * @returns {boolean} true/false\n * @example\n * turf.isObject({elevation: 10})\n * //=true\n * turf.isObject('foo')\n * //=false\n */\nfunction isObject(input) {\n    return (!!input) && (input.constructor === Object);\n}\n\n/**\n * Validate BBox\n *\n * @private\n * @param {Array<number>} bbox BBox to validate\n * @returns {void}\n * @throws Error if BBox is not valid\n * @example\n * validateBBox([-180, -40, 110, 50])\n * //=OK\n * validateBBox([-180, -40])\n * //=Error\n * validateBBox('Foo')\n * //=Error\n * validateBBox(5)\n * //=Error\n * validateBBox(null)\n * //=Error\n * validateBBox(undefined)\n * //=Error\n */\nfunction validateBBox(bbox) {\n    if (!bbox) throw new Error('bbox is required');\n    if (!Array.isArray(bbox)) throw new Error('bbox must be an Array');\n    if (bbox.length !== 4 && bbox.length !== 6) throw new Error('bbox must be an Array of 4 or 6 numbers');\n    bbox.forEach(function (num) {\n        if (!isNumber(num)) throw new Error('bbox must only contain numbers');\n    });\n}\n\n/**\n * Validate Id\n *\n * @private\n * @param {string|number} id Id to validate\n * @returns {void}\n * @throws Error if Id is not valid\n * @example\n * validateId([-180, -40, 110, 50])\n * //=Error\n * validateId([-180, -40])\n * //=Error\n * validateId('Foo')\n * //=OK\n * validateId(5)\n * //=OK\n * validateId(null)\n * //=Error\n * validateId(undefined)\n * //=Error\n */\nfunction validateId(id) {\n    if (!id) throw new Error('id is required');\n    if (['string', 'number'].indexOf(typeof id) === -1) throw new Error('id must be a number or a string');\n}\n\n// Deprecated methods\nfunction radians2degrees() {\n    throw new Error('method has been renamed to `radiansToDegrees`');\n}\n\nfunction degrees2radians() {\n    throw new Error('method has been renamed to `degreesToRadians`');\n}\n\nfunction distanceToDegrees() {\n    throw new Error('method has been renamed to `lengthToDegrees`');\n}\n\nfunction distanceToRadians() {\n    throw new Error('method has been renamed to `lengthToRadians`');\n}\n\nfunction radiansToDistance() {\n    throw new Error('method has been renamed to `radiansToLength`');\n}\n\nfunction bearingToAngle() {\n    throw new Error('method has been renamed to `bearingToAzimuth`');\n}\n\nfunction convertDistance() {\n    throw new Error('method has been renamed to `convertLength`');\n}\n\nexport { earthRadius, factors, unitsFactors, areaFactors, feature, geometry, point, points, polygon, polygons, lineString, lineStrings, featureCollection, multiLineString, multiPoint, multiPolygon, geometryCollection, round, radiansToLength, lengthToRadians, lengthToDegrees, bearingToAzimuth, radiansToDegrees, degreesToRadians, convertLength, convertArea, isNumber, isObject, validateBBox, validateId, radians2degrees, degrees2radians, distanceToDegrees, distanceToRadians, radiansToDistance, bearingToAngle, convertDistance };\n","import { feature, lineString } from '@turf/helpers';\n\n/**\n * Callback for coordEach\n *\n * @callback coordEachCallback\n * @param {Array<number>} currentCoord The current coordinate being processed.\n * @param {number} coordIndex The current index of the coordinate being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n */\n\n/**\n * Iterate over coordinates in any GeoJSON object, similar to Array.forEach()\n *\n * @name coordEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentCoord, coordIndex, featureIndex, multiFeatureIndex)\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.coordEach(features, function (currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=currentCoord\n *   //=coordIndex\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n * });\n */\nfunction coordEach(geojson, callback, excludeWrapCoord) {\n    // Handles null Geometry -- Skips this GeoJSON\n    if (geojson === null) return;\n    var j, k, l, geometry, stopG, coords,\n        geometryMaybeCollection,\n        wrapShrink = 0,\n        coordIndex = 0,\n        isGeometryCollection,\n        type = geojson.type,\n        isFeatureCollection = type === 'FeatureCollection',\n        isFeature = type === 'Feature',\n        stop = isFeatureCollection ? geojson.features.length : 1;\n\n    // This logic may look a little weird. The reason why it is that way\n    // is because it's trying to be fast. GeoJSON supports multiple kinds\n    // of objects at its root: FeatureCollection, Features, Geometries.\n    // This function has the responsibility of handling all of them, and that\n    // means that some of the `for` loops you see below actually just don't apply\n    // to certain inputs. For instance, if you give this just a\n    // Point geometry, then both loops are short-circuited and all we do\n    // is gradually rename the input until it's called 'geometry'.\n    //\n    // This also aims to allocate as few resources as possible: just a\n    // few numbers and booleans, rather than any temporary arrays as would\n    // be required with the normalization approach.\n    for (var featureIndex = 0; featureIndex < stop; featureIndex++) {\n        geometryMaybeCollection = (isFeatureCollection ? geojson.features[featureIndex].geometry :\n            (isFeature ? geojson.geometry : geojson));\n        isGeometryCollection = (geometryMaybeCollection) ? geometryMaybeCollection.type === 'GeometryCollection' : false;\n        stopG = isGeometryCollection ? geometryMaybeCollection.geometries.length : 1;\n\n        for (var geomIndex = 0; geomIndex < stopG; geomIndex++) {\n            var multiFeatureIndex = 0;\n            var geometryIndex = 0;\n            geometry = isGeometryCollection ?\n                geometryMaybeCollection.geometries[geomIndex] : geometryMaybeCollection;\n\n            // Handles null Geometry -- Skips this geometry\n            if (geometry === null) continue;\n            coords = geometry.coordinates;\n            var geomType = geometry.type;\n\n            wrapShrink = (excludeWrapCoord && (geomType === 'Polygon' || geomType === 'MultiPolygon')) ? 1 : 0;\n\n            switch (geomType) {\n            case null:\n                break;\n            case 'Point':\n                callback(coords, coordIndex, featureIndex, multiFeatureIndex, geometryIndex);\n                coordIndex++;\n                multiFeatureIndex++;\n                break;\n            case 'LineString':\n            case 'MultiPoint':\n                for (j = 0; j < coords.length; j++) {\n                    callback(coords[j], coordIndex, featureIndex, multiFeatureIndex, geometryIndex);\n                    coordIndex++;\n                    if (geomType === 'MultiPoint') multiFeatureIndex++;\n                }\n                if (geomType === 'LineString') multiFeatureIndex++;\n                break;\n            case 'Polygon':\n            case 'MultiLineString':\n                for (j = 0; j < coords.length; j++) {\n                    for (k = 0; k < coords[j].length - wrapShrink; k++) {\n                        callback(coords[j][k], coordIndex, featureIndex, multiFeatureIndex, geometryIndex);\n                        coordIndex++;\n                    }\n                    if (geomType === 'MultiLineString') multiFeatureIndex++;\n                    if (geomType === 'Polygon') geometryIndex++;\n                }\n                if (geomType === 'Polygon') multiFeatureIndex++;\n                break;\n            case 'MultiPolygon':\n                for (j = 0; j < coords.length; j++) {\n                    if (geomType === 'MultiPolygon') geometryIndex = 0;\n                    for (k = 0; k < coords[j].length; k++) {\n                        for (l = 0; l < coords[j][k].length - wrapShrink; l++) {\n                            callback(coords[j][k][l], coordIndex, featureIndex, multiFeatureIndex, geometryIndex);\n                            coordIndex++;\n                        }\n                        geometryIndex++;\n                    }\n                    multiFeatureIndex++;\n                }\n                break;\n            case 'GeometryCollection':\n                for (j = 0; j < geometry.geometries.length; j++)\n                    coordEach(geometry.geometries[j], callback, excludeWrapCoord);\n                break;\n            default:\n                throw new Error('Unknown Geometry Type');\n            }\n        }\n    }\n}\n\n/**\n * Callback for coordReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback coordReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Array<number>} currentCoord The current coordinate being processed.\n * @param {number} coordIndex The current index of the coordinate being processed.\n * Starts at index 0, if an initialValue is provided, and at index 1 otherwise.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n */\n\n/**\n * Reduce coordinates in any GeoJSON object, similar to Array.reduce()\n *\n * @name coordReduce\n * @param {FeatureCollection|Geometry|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentCoord, coordIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.coordReduce(features, function (previousValue, currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=previousValue\n *   //=currentCoord\n *   //=coordIndex\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   return currentCoord;\n * });\n */\nfunction coordReduce(geojson, callback, initialValue, excludeWrapCoord) {\n    var previousValue = initialValue;\n    coordEach(geojson, function (currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n        if (coordIndex === 0 && initialValue === undefined) previousValue = currentCoord;\n        else previousValue = callback(previousValue, currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex);\n    }, excludeWrapCoord);\n    return previousValue;\n}\n\n/**\n * Callback for propEach\n *\n * @callback propEachCallback\n * @param {Object} currentProperties The current Properties being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Iterate over properties in any GeoJSON object, similar to Array.forEach()\n *\n * @name propEach\n * @param {FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentProperties, featureIndex)\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.propEach(features, function (currentProperties, featureIndex) {\n *   //=currentProperties\n *   //=featureIndex\n * });\n */\nfunction propEach(geojson, callback) {\n    var i;\n    switch (geojson.type) {\n    case 'FeatureCollection':\n        for (i = 0; i < geojson.features.length; i++) {\n            callback(geojson.features[i].properties, i);\n        }\n        break;\n    case 'Feature':\n        callback(geojson.properties, 0);\n        break;\n    }\n}\n\n\n/**\n * Callback for propReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback propReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {*} currentProperties The current Properties being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Reduce properties in any GeoJSON object into a single value,\n * similar to how Array.reduce works. However, in this case we lazily run\n * the reduction, so an array of all properties is unnecessary.\n *\n * @name propReduce\n * @param {FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentProperties, featureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.propReduce(features, function (previousValue, currentProperties, featureIndex) {\n *   //=previousValue\n *   //=currentProperties\n *   //=featureIndex\n *   return currentProperties\n * });\n */\nfunction propReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    propEach(geojson, function (currentProperties, featureIndex) {\n        if (featureIndex === 0 && initialValue === undefined) previousValue = currentProperties;\n        else previousValue = callback(previousValue, currentProperties, featureIndex);\n    });\n    return previousValue;\n}\n\n/**\n * Callback for featureEach\n *\n * @callback featureEachCallback\n * @param {Feature<any>} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Iterate over features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name featureEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, featureIndex)\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.featureEach(features, function (currentFeature, featureIndex) {\n *   //=currentFeature\n *   //=featureIndex\n * });\n */\nfunction featureEach(geojson, callback) {\n    if (geojson.type === 'Feature') {\n        callback(geojson, 0);\n    } else if (geojson.type === 'FeatureCollection') {\n        for (var i = 0; i < geojson.features.length; i++) {\n            callback(geojson.features[i], i);\n        }\n    }\n}\n\n/**\n * Callback for featureReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback featureReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Reduce features in any GeoJSON object, similar to Array.reduce().\n *\n * @name featureReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, featureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.featureReduce(features, function (previousValue, currentFeature, featureIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=featureIndex\n *   return currentFeature\n * });\n */\nfunction featureReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    featureEach(geojson, function (currentFeature, featureIndex) {\n        if (featureIndex === 0 && initialValue === undefined) previousValue = currentFeature;\n        else previousValue = callback(previousValue, currentFeature, featureIndex);\n    });\n    return previousValue;\n}\n\n/**\n * Get all coordinates from any GeoJSON object.\n *\n * @name coordAll\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @returns {Array<Array<number>>} coordinate position array\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * var coords = turf.coordAll(features);\n * //= [[26, 37], [36, 53]]\n */\nfunction coordAll(geojson) {\n    var coords = [];\n    coordEach(geojson, function (coord) {\n        coords.push(coord);\n    });\n    return coords;\n}\n\n/**\n * Callback for geomEach\n *\n * @callback geomEachCallback\n * @param {Geometry} currentGeometry The current Geometry being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {Object} featureProperties The current Feature Properties being processed.\n * @param {Array<number>} featureBBox The current Feature BBox being processed.\n * @param {number|string} featureId The current Feature Id being processed.\n */\n\n/**\n * Iterate over each geometry in any GeoJSON object, similar to Array.forEach()\n *\n * @name geomEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentGeometry, featureIndex, featureProperties, featureBBox, featureId)\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.geomEach(features, function (currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n *   //=currentGeometry\n *   //=featureIndex\n *   //=featureProperties\n *   //=featureBBox\n *   //=featureId\n * });\n */\nfunction geomEach(geojson, callback) {\n    var i, j, g, geometry, stopG,\n        geometryMaybeCollection,\n        isGeometryCollection,\n        featureProperties,\n        featureBBox,\n        featureId,\n        featureIndex = 0,\n        isFeatureCollection = geojson.type === 'FeatureCollection',\n        isFeature = geojson.type === 'Feature',\n        stop = isFeatureCollection ? geojson.features.length : 1;\n\n    // This logic may look a little weird. The reason why it is that way\n    // is because it's trying to be fast. GeoJSON supports multiple kinds\n    // of objects at its root: FeatureCollection, Features, Geometries.\n    // This function has the responsibility of handling all of them, and that\n    // means that some of the `for` loops you see below actually just don't apply\n    // to certain inputs. For instance, if you give this just a\n    // Point geometry, then both loops are short-circuited and all we do\n    // is gradually rename the input until it's called 'geometry'.\n    //\n    // This also aims to allocate as few resources as possible: just a\n    // few numbers and booleans, rather than any temporary arrays as would\n    // be required with the normalization approach.\n    for (i = 0; i < stop; i++) {\n\n        geometryMaybeCollection = (isFeatureCollection ? geojson.features[i].geometry :\n            (isFeature ? geojson.geometry : geojson));\n        featureProperties = (isFeatureCollection ? geojson.features[i].properties :\n            (isFeature ? geojson.properties : {}));\n        featureBBox = (isFeatureCollection ? geojson.features[i].bbox :\n            (isFeature ? geojson.bbox : undefined));\n        featureId = (isFeatureCollection ? geojson.features[i].id :\n            (isFeature ? geojson.id : undefined));\n        isGeometryCollection = (geometryMaybeCollection) ? geometryMaybeCollection.type === 'GeometryCollection' : false;\n        stopG = isGeometryCollection ? geometryMaybeCollection.geometries.length : 1;\n\n        for (g = 0; g < stopG; g++) {\n            geometry = isGeometryCollection ?\n                geometryMaybeCollection.geometries[g] : geometryMaybeCollection;\n\n            // Handle null Geometry\n            if (geometry === null) {\n                callback(null, featureIndex, featureProperties, featureBBox, featureId);\n                continue;\n            }\n            switch (geometry.type) {\n            case 'Point':\n            case 'LineString':\n            case 'MultiPoint':\n            case 'Polygon':\n            case 'MultiLineString':\n            case 'MultiPolygon': {\n                callback(geometry, featureIndex, featureProperties, featureBBox, featureId);\n                break;\n            }\n            case 'GeometryCollection': {\n                for (j = 0; j < geometry.geometries.length; j++) {\n                    callback(geometry.geometries[j], featureIndex, featureProperties, featureBBox, featureId);\n                }\n                break;\n            }\n            default:\n                throw new Error('Unknown Geometry Type');\n            }\n        }\n        // Only increase `featureIndex` per each feature\n        featureIndex++;\n    }\n}\n\n/**\n * Callback for geomReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback geomReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Geometry} currentGeometry The current Geometry being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {Object} featureProperties The current Feature Properties being processed.\n * @param {Array<number>} featureBBox The current Feature BBox being processed.\n * @param {number|string} featureId The current Feature Id being processed.\n */\n\n/**\n * Reduce geometry in any GeoJSON object, similar to Array.reduce().\n *\n * @name geomReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.geomReduce(features, function (previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n *   //=previousValue\n *   //=currentGeometry\n *   //=featureIndex\n *   //=featureProperties\n *   //=featureBBox\n *   //=featureId\n *   return currentGeometry\n * });\n */\nfunction geomReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    geomEach(geojson, function (currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n        if (featureIndex === 0 && initialValue === undefined) previousValue = currentGeometry;\n        else previousValue = callback(previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId);\n    });\n    return previousValue;\n}\n\n/**\n * Callback for flattenEach\n *\n * @callback flattenEachCallback\n * @param {Feature} currentFeature The current flattened feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n */\n\n/**\n * Iterate over flattened features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name flattenEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, featureIndex, multiFeatureIndex)\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.multiPoint([[40, 30], [36, 53]], {hello: 'world'})\n * ]);\n *\n * turf.flattenEach(features, function (currentFeature, featureIndex, multiFeatureIndex) {\n *   //=currentFeature\n *   //=featureIndex\n *   //=multiFeatureIndex\n * });\n */\nfunction flattenEach(geojson, callback) {\n    geomEach(geojson, function (geometry, featureIndex, properties, bbox, id) {\n        // Callback for single geometry\n        var type = (geometry === null) ? null : geometry.type;\n        switch (type) {\n        case null:\n        case 'Point':\n        case 'LineString':\n        case 'Polygon':\n            callback(feature(geometry, properties, {bbox: bbox, id: id}), featureIndex, 0);\n            return;\n        }\n\n        var geomType;\n\n        // Callback for multi-geometry\n        switch (type) {\n        case 'MultiPoint':\n            geomType = 'Point';\n            break;\n        case 'MultiLineString':\n            geomType = 'LineString';\n            break;\n        case 'MultiPolygon':\n            geomType = 'Polygon';\n            break;\n        }\n\n        geometry.coordinates.forEach(function (coordinate, multiFeatureIndex) {\n            var geom = {\n                type: geomType,\n                coordinates: coordinate\n            };\n            callback(feature(geom, properties), featureIndex, multiFeatureIndex);\n        });\n\n    });\n}\n\n/**\n * Callback for flattenReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback flattenReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n */\n\n/**\n * Reduce flattened features in any GeoJSON object, similar to Array.reduce().\n *\n * @name flattenReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, featureIndex, multiFeatureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.multiPoint([[40, 30], [36, 53]], {hello: 'world'})\n * ]);\n *\n * turf.flattenReduce(features, function (previousValue, currentFeature, featureIndex, multiFeatureIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   return currentFeature\n * });\n */\nfunction flattenReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    flattenEach(geojson, function (currentFeature, featureIndex, multiFeatureIndex) {\n        if (featureIndex === 0 && multiFeatureIndex === 0 && initialValue === undefined) previousValue = currentFeature;\n        else previousValue = callback(previousValue, currentFeature, featureIndex, multiFeatureIndex);\n    });\n    return previousValue;\n}\n\n/**\n * Callback for segmentEach\n *\n * @callback segmentEachCallback\n * @param {Feature<LineString>} currentSegment The current Segment being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n * @param {number} segmentIndex The current index of the Segment being processed.\n * @returns {void}\n */\n\n/**\n * Iterate over 2-vertex line segment in any GeoJSON object, similar to Array.forEach()\n * (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON\n * @param {Function} callback a method that takes (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex)\n * @returns {void}\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n *\n * // Iterate over GeoJSON by 2-vertex segments\n * turf.segmentEach(polygon, function (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n *   //=currentSegment\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   //=segmentIndex\n * });\n *\n * // Calculate the total number of segments\n * var total = 0;\n * turf.segmentEach(polygon, function () {\n *     total++;\n * });\n */\nfunction segmentEach(geojson, callback) {\n    flattenEach(geojson, function (feature$$1, featureIndex, multiFeatureIndex) {\n        var segmentIndex = 0;\n\n        // Exclude null Geometries\n        if (!feature$$1.geometry) return;\n        // (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n        var type = feature$$1.geometry.type;\n        if (type === 'Point' || type === 'MultiPoint') return;\n\n        // Generate 2-vertex line segments\n        coordReduce(feature$$1, function (previousCoords, currentCoord, coordIndex, featureIndexCoord, mutliPartIndexCoord, geometryIndex) {\n            var currentSegment = lineString([previousCoords, currentCoord], feature$$1.properties);\n            callback(currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex);\n            segmentIndex++;\n            return currentCoord;\n        });\n    });\n}\n\n/**\n * Callback for segmentReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback segmentReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature<LineString>} currentSegment The current Segment being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n * @param {number} segmentIndex The current index of the Segment being processed.\n */\n\n/**\n * Reduce 2-vertex line segment in any GeoJSON object, similar to Array.reduce()\n * (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON\n * @param {Function} callback a method that takes (previousValue, currentSegment, currentIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {void}\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n *\n * // Iterate over GeoJSON by 2-vertex segments\n * turf.segmentReduce(polygon, function (previousSegment, currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n *   //= previousSegment\n *   //= currentSegment\n *   //= featureIndex\n *   //= multiFeatureIndex\n *   //= geometryIndex\n *   //= segmentInex\n *   return currentSegment\n * });\n *\n * // Calculate the total number of segments\n * var initialValue = 0\n * var total = turf.segmentReduce(polygon, function (previousValue) {\n *     previousValue++;\n *     return previousValue;\n * }, initialValue);\n */\nfunction segmentReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    var started = false;\n    segmentEach(geojson, function (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n        if (started === false && initialValue === undefined) previousValue = currentSegment;\n        else previousValue = callback(previousValue, currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex);\n        started = true;\n    });\n    return previousValue;\n}\n\n/**\n * Callback for lineEach\n *\n * @callback lineEachCallback\n * @param {Feature<LineString>} currentLine The current LineString|LinearRing being processed\n * @param {number} featureIndex The current index of the Feature being processed\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed\n * @param {number} geometryIndex The current index of the Geometry being processed\n */\n\n/**\n * Iterate over line or ring coordinates in LineString, Polygon, MultiLineString, MultiPolygon Features or Geometries,\n * similar to Array.forEach.\n *\n * @name lineEach\n * @param {Geometry|Feature<LineString|Polygon|MultiLineString|MultiPolygon>} geojson object\n * @param {Function} callback a method that takes (currentLine, featureIndex, multiFeatureIndex, geometryIndex)\n * @example\n * var multiLine = turf.multiLineString([\n *   [[26, 37], [35, 45]],\n *   [[36, 53], [38, 50], [41, 55]]\n * ]);\n *\n * turf.lineEach(multiLine, function (currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=currentLine\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n * });\n */\nfunction lineEach(geojson, callback) {\n    // validation\n    if (!geojson) throw new Error('geojson is required');\n\n    flattenEach(geojson, function (feature$$1, featureIndex, multiFeatureIndex) {\n        if (feature$$1.geometry === null) return;\n        var type = feature$$1.geometry.type;\n        var coords = feature$$1.geometry.coordinates;\n        switch (type) {\n        case 'LineString':\n            callback(feature$$1, featureIndex, multiFeatureIndex, 0, 0);\n            break;\n        case 'Polygon':\n            for (var geometryIndex = 0; geometryIndex < coords.length; geometryIndex++) {\n                callback(lineString(coords[geometryIndex], feature$$1.properties), featureIndex, multiFeatureIndex, geometryIndex);\n            }\n            break;\n        }\n    });\n}\n\n/**\n * Callback for lineReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback lineReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature<LineString>} currentLine The current LineString|LinearRing being processed.\n * @param {number} featureIndex The current index of the Feature being processed\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed\n * @param {number} geometryIndex The current index of the Geometry being processed\n */\n\n/**\n * Reduce features in any GeoJSON object, similar to Array.reduce().\n *\n * @name lineReduce\n * @param {Geometry|Feature<LineString|Polygon|MultiLineString|MultiPolygon>} geojson object\n * @param {Function} callback a method that takes (previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var multiPoly = turf.multiPolygon([\n *   turf.polygon([[[12,48],[2,41],[24,38],[12,48]], [[9,44],[13,41],[13,45],[9,44]]]),\n *   turf.polygon([[[5, 5], [0, 0], [2, 2], [4, 4], [5, 5]]])\n * ]);\n *\n * turf.lineReduce(multiPoly, function (previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=previousValue\n *   //=currentLine\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   return currentLine\n * });\n */\nfunction lineReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    lineEach(geojson, function (currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n        if (featureIndex === 0 && initialValue === undefined) previousValue = currentLine;\n        else previousValue = callback(previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex);\n    });\n    return previousValue;\n}\n\nexport { coordEach, coordReduce, propEach, propReduce, featureEach, featureReduce, coordAll, geomEach, geomReduce, flattenEach, flattenReduce, segmentEach, segmentReduce, lineEach, lineReduce };\n","import { coordEach } from '@turf/meta';\n\n/**\n * Takes a set of features, calculates the bbox of all input features, and returns a bounding box.\n *\n * @name bbox\n * @param {GeoJSON} geojson any GeoJSON object\n * @returns {BBox} bbox extent in [minX, minY, maxX, maxY] order\n * @example\n * var line = turf.lineString([[-74, 40], [-78, 42], [-82, 35]]);\n * var bbox = turf.bbox(line);\n * var bboxPolygon = turf.bboxPolygon(bbox);\n *\n * //addToMap\n * var addToMap = [line, bboxPolygon]\n */\nfunction bbox(geojson) {\n    var BBox = [Infinity, Infinity, -Infinity, -Infinity];\n    coordEach(geojson, function (coord) {\n        if (BBox[0] > coord[0]) BBox[0] = coord[0];\n        if (BBox[1] > coord[1]) BBox[1] = coord[1];\n        if (BBox[2] < coord[0]) BBox[2] = coord[0];\n        if (BBox[3] < coord[1]) BBox[3] = coord[1];\n    });\n    return BBox;\n}\n\nexport default bbox;\n","import { isNumber } from '@turf/helpers';\n\n/**\n * Unwrap a coordinate from a Point Feature, Geometry or a single coordinate.\n *\n * @name getCoord\n * @param {Array<number>|Geometry<Point>|Feature<Point>} obj Object\n * @returns {Array<number>} coordinates\n * @example\n * var pt = turf.point([10, 10]);\n *\n * var coord = turf.getCoord(pt);\n * //= [10, 10]\n */\nfunction getCoord(obj) {\n    if (!obj) throw new Error('obj is required');\n\n    var coordinates = getCoords(obj);\n\n    // getCoord() must contain at least two numbers (Point)\n    if (coordinates.length > 1 && isNumber(coordinates[0]) && isNumber(coordinates[1])) {\n        return coordinates;\n    } else {\n        throw new Error('Coordinate is not a valid Point');\n    }\n}\n\n/**\n * Unwrap coordinates from a Feature, Geometry Object or an Array of numbers\n *\n * @name getCoords\n * @param {Array<number>|Geometry|Feature} obj Object\n * @returns {Array<number>} coordinates\n * @example\n * var poly = turf.polygon([[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]);\n *\n * var coord = turf.getCoords(poly);\n * //= [[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]\n */\nfunction getCoords(obj) {\n    if (!obj) throw new Error('obj is required');\n    var coordinates;\n\n    // Array of numbers\n    if (obj.length) {\n        coordinates = obj;\n\n    // Geometry Object\n    } else if (obj.coordinates) {\n        coordinates = obj.coordinates;\n\n    // Feature\n    } else if (obj.geometry && obj.geometry.coordinates) {\n        coordinates = obj.geometry.coordinates;\n    }\n    // Checks if coordinates contains a number\n    if (coordinates) {\n        containsNumber(coordinates);\n        return coordinates;\n    }\n    throw new Error('No valid coordinates');\n}\n\n/**\n * Checks if coordinates contains a number\n *\n * @name containsNumber\n * @param {Array<any>} coordinates GeoJSON Coordinates\n * @returns {boolean} true if Array contains a number\n */\nfunction containsNumber(coordinates) {\n    if (coordinates.length > 1 && isNumber(coordinates[0]) && isNumber(coordinates[1])) {\n        return true;\n    }\n\n    if (Array.isArray(coordinates[0]) && coordinates[0].length) {\n        return containsNumber(coordinates[0]);\n    }\n    throw new Error('coordinates must only contain numbers');\n}\n\n/**\n * Enforce expectations about types of GeoJSON objects for Turf.\n *\n * @name geojsonType\n * @param {GeoJSON} value any GeoJSON object\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} if value is not the expected type.\n */\nfunction geojsonType(value, type, name) {\n    if (!type || !name) throw new Error('type and name required');\n\n    if (!value || value.type !== type) {\n        throw new Error('Invalid input to ' + name + ': must be a ' + type + ', given ' + value.type);\n    }\n}\n\n/**\n * Enforce expectations about types of {@link Feature} inputs for Turf.\n * Internally this uses {@link geojsonType} to judge geometry types.\n *\n * @name featureOf\n * @param {Feature} feature a feature with an expected geometry type\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} error if value is not the expected type.\n */\nfunction featureOf(feature, type, name) {\n    if (!feature) throw new Error('No feature passed');\n    if (!name) throw new Error('.featureOf() requires a name');\n    if (!feature || feature.type !== 'Feature' || !feature.geometry) {\n        throw new Error('Invalid input to ' + name + ', Feature with geometry required');\n    }\n    if (!feature.geometry || feature.geometry.type !== type) {\n        throw new Error('Invalid input to ' + name + ': must be a ' + type + ', given ' + feature.geometry.type);\n    }\n}\n\n/**\n * Enforce expectations about types of {@link FeatureCollection} inputs for Turf.\n * Internally this uses {@link geojsonType} to judge geometry types.\n *\n * @name collectionOf\n * @param {FeatureCollection} featureCollection a FeatureCollection for which features will be judged\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} if value is not the expected type.\n */\nfunction collectionOf(featureCollection, type, name) {\n    if (!featureCollection) throw new Error('No featureCollection passed');\n    if (!name) throw new Error('.collectionOf() requires a name');\n    if (!featureCollection || featureCollection.type !== 'FeatureCollection') {\n        throw new Error('Invalid input to ' + name + ', FeatureCollection required');\n    }\n    for (var i = 0; i < featureCollection.features.length; i++) {\n        var feature = featureCollection.features[i];\n        if (!feature || feature.type !== 'Feature' || !feature.geometry) {\n            throw new Error('Invalid input to ' + name + ', Feature with geometry required');\n        }\n        if (!feature.geometry || feature.geometry.type !== type) {\n            throw new Error('Invalid input to ' + name + ': must be a ' + type + ', given ' + feature.geometry.type);\n        }\n    }\n}\n\n/**\n * Get Geometry from Feature or Geometry Object\n *\n * @param {Feature|Geometry} geojson GeoJSON Feature or Geometry Object\n * @returns {Geometry|null} GeoJSON Geometry Object\n * @throws {Error} if geojson is not a Feature or Geometry Object\n * @example\n * var point = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [110, 40]\n *   }\n * }\n * var geom = turf.getGeom(point)\n * //={\"type\": \"Point\", \"coordinates\": [110, 40]}\n */\nfunction getGeom(geojson) {\n    if (!geojson) throw new Error('geojson is required');\n    if (geojson.geometry !== undefined) return geojson.geometry;\n    if (geojson.coordinates || geojson.geometries) return geojson;\n    throw new Error('geojson must be a valid Feature or Geometry Object');\n}\n\n/**\n * Get Geometry Type from Feature or Geometry Object\n *\n * @throws {Error} **DEPRECATED** in v5.0.0 in favor of getType\n */\nfunction getGeomType() {\n    throw new Error('invariant.getGeomType has been deprecated in v5.0 in favor of invariant.getType');\n}\n\n/**\n * Get GeoJSON object's type, Geometry type is prioritize.\n *\n * @param {GeoJSON} geojson GeoJSON object\n * @param {string} [name] name of the variable to display in error message\n * @returns {string} GeoJSON type\n * @example\n * var point = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [110, 40]\n *   }\n * }\n * var geom = turf.getType(point)\n * //=\"Point\"\n */\nfunction getType(geojson, name) {\n    if (!geojson) throw new Error((name || 'geojson') + ' is required');\n    // GeoJSON Feature & GeometryCollection\n    if (geojson.geometry && geojson.geometry.type) return geojson.geometry.type;\n    // GeoJSON Geometry & FeatureCollection\n    if (geojson.type) return geojson.type;\n    throw new Error((name || 'geojson') + ' is invalid');\n}\n\nexport { getCoord, getCoords, containsNumber, geojsonType, featureOf, collectionOf, getGeom, getGeomType, getType };\n","import { getCoord } from '@turf/invariant';\nimport { degreesToRadians, isObject, radiansToLength } from '@turf/helpers';\n\n//http://en.wikipedia.org/wiki/Haversine_formula\n//http://www.movable-type.co.uk/scripts/latlong.html\n\n/**\n * Calculates the distance between two {@link Point|points} in degrees, radians,\n * miles, or kilometers. This uses the\n * [Haversine formula](http://en.wikipedia.org/wiki/Haversine_formula)\n * to account for global curvature.\n *\n * @name distance\n * @param {Coord} from origin point\n * @param {Coord} to destination point\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.units='kilometers'] can be degrees, radians, miles, or kilometers\n * @returns {number} distance between the two points\n * @example\n * var from = turf.point([-75.343, 39.984]);\n * var to = turf.point([-75.534, 39.123]);\n * var options = {units: 'miles'};\n *\n * var distance = turf.distance(from, to, options);\n *\n * //addToMap\n * var addToMap = [from, to];\n * from.properties.distance = distance;\n * to.properties.distance = distance;\n */\nfunction distance(from, to, options) {\n    // Optional parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var units = options.units;\n\n    var coordinates1 = getCoord(from);\n    var coordinates2 = getCoord(to);\n    var dLat = degreesToRadians((coordinates2[1] - coordinates1[1]));\n    var dLon = degreesToRadians((coordinates2[0] - coordinates1[0]));\n    var lat1 = degreesToRadians(coordinates1[1]);\n    var lat2 = degreesToRadians(coordinates2[1]);\n\n    var a = Math.pow(Math.sin(dLat / 2), 2) +\n          Math.pow(Math.sin(dLon / 2), 2) * Math.cos(lat1) * Math.cos(lat2);\n\n    return radiansToLength(2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a)), units);\n}\n\nexport default distance;\n","/* Polyfill service v3.13.0\n * For detailed credits and licence information see http://github.com/financial-times/polyfill-service\n *\n * - Array.prototype.fill, License: CC0 */\n\nif (!('fill' in Array.prototype)) {\n  Object.defineProperty(Array.prototype, 'fill', {\n    configurable: true,\n    value: function fill (value) {\n      if (this === undefined || this === null) {\n        throw new TypeError(this + ' is not an object')\n      }\n\n      var arrayLike = Object(this);\n\n      var length = Math.max(Math.min(arrayLike.length, 9007199254740991), 0) || 0;\n\n      var relativeStart = 1 in arguments ? parseInt(Number(arguments[1]), 10) || 0 : 0;\n\n      relativeStart = relativeStart < 0 ? Math.max(length + relativeStart, 0) : Math.min(relativeStart, length);\n\n      var relativeEnd = 2 in arguments && arguments[2] !== undefined ? parseInt(Number(arguments[2]), 10) || 0 : length;\n\n      relativeEnd = relativeEnd < 0 ? Math.max(length + arguments[2], 0) : Math.min(relativeEnd, length);\n\n      while (relativeStart < relativeEnd) {\n        arrayLike[relativeStart] = value;\n\n        ++relativeStart;\n      }\n\n      return arrayLike\n    },\n    writable: true\n  });\n}\n\n/**\n * Polyfill for IE support\n */\nNumber.isFinite = Number.isFinite || function (value) {\n  return typeof value === 'number' && isFinite(value)\n};\n\nNumber.isInteger = Number.isInteger || function (val) {\n  return typeof val === 'number' &&\n  isFinite(val) &&\n  Math.floor(val) === val\n};\n\nNumber.parseFloat = Number.parseFloat || parseFloat;\n\nNumber.isNaN = Number.isNaN || function (value) {\n  return value !== value // eslint-disable-line\n};\n\n/**\n * Polyfill for IE support\n */\nMath.trunc = Math.trunc || function (x) {\n  return x < 0 ? Math.ceil(x) : Math.floor(x)\n};\n\nvar NumberUtil = function NumberUtil () {};\n\nNumberUtil.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nNumberUtil.prototype.getClass = function getClass () {\n  return NumberUtil\n};\nNumberUtil.prototype.equalsWithTolerance = function equalsWithTolerance (x1, x2, tolerance) {\n  return Math.abs(x1 - x2) <= tolerance\n};\n\nvar IllegalArgumentException = (function (Error) {\n\tfunction IllegalArgumentException (message) {\n\t\tError.call(this, message);\n\t\tthis.name = 'IllegalArgumentException';\n\t\tthis.message = message;\n\t\tthis.stack = (new Error()).stack;\n\t}\n\n\tif ( Error ) IllegalArgumentException.__proto__ = Error;\n\tIllegalArgumentException.prototype = Object.create( Error && Error.prototype );\n\tIllegalArgumentException.prototype.constructor = IllegalArgumentException;\n\n\treturn IllegalArgumentException;\n}(Error));\n\nvar Double = function Double () {};\n\nvar staticAccessors$1 = { MAX_VALUE: { configurable: true } };\n\nDouble.isNaN = function isNaN (n) { return Number.isNaN(n) };\nDouble.doubleToLongBits = function doubleToLongBits (n) { return n };\nDouble.longBitsToDouble = function longBitsToDouble (n) { return n };\nDouble.isInfinite = function isInfinite (n) { return !Number.isFinite(n) };\nstaticAccessors$1.MAX_VALUE.get = function () { return Number.MAX_VALUE };\n\nObject.defineProperties( Double, staticAccessors$1 );\n\nvar Comparable = function Comparable () {};\n\nvar Clonable = function Clonable () {};\n\nvar Comparator = function Comparator () {};\n\nfunction Serializable () {}\n\n// import Assert from '../util/Assert'\n\nvar Coordinate = function Coordinate () {\n  this.x = null;\n  this.y = null;\n  this.z = null;\n  if (arguments.length === 0) {\n    this.x = 0.0;\n    this.y = 0.0;\n    this.z = Coordinate.NULL_ORDINATE;\n  } else if (arguments.length === 1) {\n    var c = arguments[0];\n    this.x = c.x;\n    this.y = c.y;\n    this.z = c.z;\n  } else if (arguments.length === 2) {\n    this.x = arguments[0];\n    this.y = arguments[1];\n    this.z = Coordinate.NULL_ORDINATE;\n  } else if (arguments.length === 3) {\n    this.x = arguments[0];\n    this.y = arguments[1];\n    this.z = arguments[2];\n  }\n};\n\nvar staticAccessors = { DimensionalComparator: { configurable: true },serialVersionUID: { configurable: true },NULL_ORDINATE: { configurable: true },X: { configurable: true },Y: { configurable: true },Z: { configurable: true } };\nCoordinate.prototype.setOrdinate = function setOrdinate (ordinateIndex, value) {\n  switch (ordinateIndex) {\n    case Coordinate.X:\n      this.x = value;\n      break\n    case Coordinate.Y:\n      this.y = value;\n      break\n    case Coordinate.Z:\n      this.z = value;\n      break\n    default:\n      throw new IllegalArgumentException('Invalid ordinate index: ' + ordinateIndex)\n  }\n};\nCoordinate.prototype.equals2D = function equals2D () {\n  if (arguments.length === 1) {\n    var other = arguments[0];\n    if (this.x !== other.x) {\n      return false\n    }\n    if (this.y !== other.y) {\n      return false\n    }\n    return true\n  } else if (arguments.length === 2) {\n    var c = arguments[0];\n    var tolerance = arguments[1];\n    if (!NumberUtil.equalsWithTolerance(this.x, c.x, tolerance)) {\n      return false\n    }\n    if (!NumberUtil.equalsWithTolerance(this.y, c.y, tolerance)) {\n      return false\n    }\n    return true\n  }\n};\nCoordinate.prototype.getOrdinate = function getOrdinate (ordinateIndex) {\n  switch (ordinateIndex) {\n    case Coordinate.X:\n      return this.x\n    case Coordinate.Y:\n      return this.y\n    case Coordinate.Z:\n      return this.z\n    default:\n  }\n  throw new IllegalArgumentException('Invalid ordinate index: ' + ordinateIndex)\n};\nCoordinate.prototype.equals3D = function equals3D (other) {\n  return this.x === other.x &&\n         this.y === other.y &&\n         ((this.z === other.z || Double.isNaN(this.z)) &&\n         Double.isNaN(other.z))\n};\nCoordinate.prototype.equals = function equals (other) {\n  if (!(other instanceof Coordinate)) {\n    return false\n  }\n  return this.equals2D(other)\n};\nCoordinate.prototype.equalInZ = function equalInZ (c, tolerance) {\n  return NumberUtil.equalsWithTolerance(this.z, c.z, tolerance)\n};\nCoordinate.prototype.compareTo = function compareTo (o) {\n  var other = o;\n  if (this.x < other.x) { return -1 }\n  if (this.x > other.x) { return 1 }\n  if (this.y < other.y) { return -1 }\n  if (this.y > other.y) { return 1 }\n  return 0\n};\nCoordinate.prototype.clone = function clone () {\n  // try {\n  // var coord = null\n  // return coord\n  // } catch (e) {\n  // if (e instanceof CloneNotSupportedException) {\n  //   Assert.shouldNeverReachHere(\"this shouldn't happen because this class is Cloneable\")\n  //   return null\n  // } else throw e\n  // } finally {}\n};\nCoordinate.prototype.copy = function copy () {\n  return new Coordinate(this)\n};\nCoordinate.prototype.toString = function toString () {\n  return '(' + this.x + ', ' + this.y + ', ' + this.z + ')'\n};\nCoordinate.prototype.distance3D = function distance3D (c) {\n  var dx = this.x - c.x;\n  var dy = this.y - c.y;\n  var dz = this.z - c.z;\n  return Math.sqrt(dx * dx + dy * dy + dz * dz)\n};\nCoordinate.prototype.distance = function distance (c) {\n  var dx = this.x - c.x;\n  var dy = this.y - c.y;\n  return Math.sqrt(dx * dx + dy * dy)\n};\nCoordinate.prototype.hashCode = function hashCode () {\n  var result = 17;\n  result = 37 * result + Coordinate.hashCode(this.x);\n  result = 37 * result + Coordinate.hashCode(this.y);\n  return result\n};\nCoordinate.prototype.setCoordinate = function setCoordinate (other) {\n  this.x = other.x;\n  this.y = other.y;\n  this.z = other.z;\n};\nCoordinate.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable, Clonable, Serializable]\n};\nCoordinate.prototype.getClass = function getClass () {\n  return Coordinate\n};\nCoordinate.hashCode = function hashCode () {\n  if (arguments.length === 1) {\n    var x = arguments[0];\n    var f = Double.doubleToLongBits(x);\n    return Math.trunc((f ^ f) >>> 32)\n  }\n};\nstaticAccessors.DimensionalComparator.get = function () { return DimensionalComparator };\nstaticAccessors.serialVersionUID.get = function () { return 6683108902428366910 };\nstaticAccessors.NULL_ORDINATE.get = function () { return Double.NaN };\nstaticAccessors.X.get = function () { return 0 };\nstaticAccessors.Y.get = function () { return 1 };\nstaticAccessors.Z.get = function () { return 2 };\n\nObject.defineProperties( Coordinate, staticAccessors );\n\nvar DimensionalComparator = function DimensionalComparator (dimensionsToTest) {\n  this._dimensionsToTest = 2;\n  if (arguments.length === 0) {} else if (arguments.length === 1) {\n    var dimensionsToTest$1 = arguments[0];\n    if (dimensionsToTest$1 !== 2 && dimensionsToTest$1 !== 3) { throw new IllegalArgumentException('only 2 or 3 dimensions may be specified') }\n    this._dimensionsToTest = dimensionsToTest$1;\n  }\n};\nDimensionalComparator.prototype.compare = function compare (o1, o2) {\n  var c1 = o1;\n  var c2 = o2;\n  var compX = DimensionalComparator.compare(c1.x, c2.x);\n  if (compX !== 0) { return compX }\n  var compY = DimensionalComparator.compare(c1.y, c2.y);\n  if (compY !== 0) { return compY }\n  if (this._dimensionsToTest <= 2) { return 0 }\n  var compZ = DimensionalComparator.compare(c1.z, c2.z);\n  return compZ\n};\nDimensionalComparator.prototype.interfaces_ = function interfaces_ () {\n  return [Comparator]\n};\nDimensionalComparator.prototype.getClass = function getClass () {\n  return DimensionalComparator\n};\nDimensionalComparator.compare = function compare (a, b) {\n  if (a < b) { return -1 }\n  if (a > b) { return 1 }\n  if (Double.isNaN(a)) {\n    if (Double.isNaN(b)) { return 0 }\n    return -1\n  }\n  if (Double.isNaN(b)) { return 1 }\n  return 0\n};\n\n// import hasInterface from '../../../../hasInterface'\n// import CoordinateSequence from './CoordinateSequence'\n\nvar CoordinateSequenceFactory = function CoordinateSequenceFactory () {};\n\nCoordinateSequenceFactory.prototype.create = function create () {\n  // if (arguments.length === 1) {\n  // if (arguments[0] instanceof Array) {\n  //   let coordinates = arguments[0]\n  // } else if (hasInterface(arguments[0], CoordinateSequence)) {\n  //   let coordSeq = arguments[0]\n  // }\n  // } else if (arguments.length === 2) {\n  // let size = arguments[0]\n  // let dimension = arguments[1]\n  // }\n};\nCoordinateSequenceFactory.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCoordinateSequenceFactory.prototype.getClass = function getClass () {\n  return CoordinateSequenceFactory\n};\n\nvar Location = function Location () {};\n\nvar staticAccessors$4 = { INTERIOR: { configurable: true },BOUNDARY: { configurable: true },EXTERIOR: { configurable: true },NONE: { configurable: true } };\n\nLocation.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nLocation.prototype.getClass = function getClass () {\n  return Location\n};\nLocation.toLocationSymbol = function toLocationSymbol (locationValue) {\n  switch (locationValue) {\n    case Location.EXTERIOR:\n      return 'e'\n    case Location.BOUNDARY:\n      return 'b'\n    case Location.INTERIOR:\n      return 'i'\n    case Location.NONE:\n      return '-'\n    default:\n  }\n  throw new IllegalArgumentException('Unknown location value: ' + locationValue)\n};\nstaticAccessors$4.INTERIOR.get = function () { return 0 };\nstaticAccessors$4.BOUNDARY.get = function () { return 1 };\nstaticAccessors$4.EXTERIOR.get = function () { return 2 };\nstaticAccessors$4.NONE.get = function () { return -1 };\n\nObject.defineProperties( Location, staticAccessors$4 );\n\nvar hasInterface = function (o, i) {\n  return o.interfaces_ && o.interfaces_().indexOf(i) > -1\n};\n\nvar MathUtil = function MathUtil () {};\n\nvar staticAccessors$5 = { LOG_10: { configurable: true } };\n\nMathUtil.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMathUtil.prototype.getClass = function getClass () {\n  return MathUtil\n};\nMathUtil.log10 = function log10 (x) {\n  var ln = Math.log(x);\n  if (Double.isInfinite(ln)) { return ln }\n  if (Double.isNaN(ln)) { return ln }\n  return ln / MathUtil.LOG_10\n};\nMathUtil.min = function min (v1, v2, v3, v4) {\n  var min = v1;\n  if (v2 < min) { min = v2; }\n  if (v3 < min) { min = v3; }\n  if (v4 < min) { min = v4; }\n  return min\n};\nMathUtil.clamp = function clamp () {\n  if (typeof arguments[2] === 'number' && (typeof arguments[0] === 'number' && typeof arguments[1] === 'number')) {\n    var x = arguments[0];\n    var min = arguments[1];\n    var max = arguments[2];\n    if (x < min) { return min }\n    if (x > max) { return max }\n    return x\n  } else if (Number.isInteger(arguments[2]) && (Number.isInteger(arguments[0]) && Number.isInteger(arguments[1]))) {\n    var x$1 = arguments[0];\n    var min$1 = arguments[1];\n    var max$1 = arguments[2];\n    if (x$1 < min$1) { return min$1 }\n    if (x$1 > max$1) { return max$1 }\n    return x$1\n  }\n};\nMathUtil.wrap = function wrap (index, max) {\n  if (index < 0) {\n    return max - -index % max\n  }\n  return index % max\n};\nMathUtil.max = function max () {\n  if (arguments.length === 3) {\n    var v1 = arguments[0];\n    var v2 = arguments[1];\n    var v3 = arguments[2];\n    var max = v1;\n    if (v2 > max) { max = v2; }\n    if (v3 > max) { max = v3; }\n    return max\n  } else if (arguments.length === 4) {\n    var v1$1 = arguments[0];\n    var v2$1 = arguments[1];\n    var v3$1 = arguments[2];\n    var v4 = arguments[3];\n    var max$1 = v1$1;\n    if (v2$1 > max$1) { max$1 = v2$1; }\n    if (v3$1 > max$1) { max$1 = v3$1; }\n    if (v4 > max$1) { max$1 = v4; }\n    return max$1\n  }\n};\nMathUtil.average = function average (x1, x2) {\n  return (x1 + x2) / 2.0\n};\nstaticAccessors$5.LOG_10.get = function () { return Math.log(10) };\n\nObject.defineProperties( MathUtil, staticAccessors$5 );\n\nvar StringBuffer = function StringBuffer (str) {\n  this.str = str;\n};\nStringBuffer.prototype.append = function append (e) {\n  this.str += e;\n};\n\nStringBuffer.prototype.setCharAt = function setCharAt (i, c) {\n  this.str = this.str.substr(0, i) + c + this.str.substr(i + 1);\n};\n\nStringBuffer.prototype.toString = function toString (e) {\n  return this.str\n};\n\nvar Integer = function Integer (value) {\n  this.value = value;\n};\nInteger.prototype.intValue = function intValue () {\n  return this.value\n};\nInteger.prototype.compareTo = function compareTo (o) {\n  if (this.value < o) { return -1 }\n  if (this.value > o) { return 1 }\n  return 0\n};\nInteger.isNaN = function isNaN (n) { return Number.isNaN(n) };\n\nvar Character = function Character () {};\n\nCharacter.isWhitespace = function isWhitespace (c) { return ((c <= 32 && c >= 0) || c === 127) };\nCharacter.toUpperCase = function toUpperCase (c) { return c.toUpperCase() };\n\nvar DD = function DD () {\n  this._hi = 0.0;\n  this._lo = 0.0;\n  if (arguments.length === 0) {\n    this.init(0.0);\n  } else if (arguments.length === 1) {\n    if (typeof arguments[0] === 'number') {\n      var x = arguments[0];\n      this.init(x);\n    } else if (arguments[0] instanceof DD) {\n      var dd = arguments[0];\n      this.init(dd);\n    } else if (typeof arguments[0] === 'string') {\n      var str = arguments[0];\n      DD.call(this, DD.parse(str));\n    }\n  } else if (arguments.length === 2) {\n    var hi = arguments[0];\n    var lo = arguments[1];\n    this.init(hi, lo);\n  }\n};\n\nvar staticAccessors$7 = { PI: { configurable: true },TWO_PI: { configurable: true },PI_2: { configurable: true },E: { configurable: true },NaN: { configurable: true },EPS: { configurable: true },SPLIT: { configurable: true },MAX_PRINT_DIGITS: { configurable: true },TEN: { configurable: true },ONE: { configurable: true },SCI_NOT_EXPONENT_CHAR: { configurable: true },SCI_NOT_ZERO: { configurable: true } };\nDD.prototype.le = function le (y) {\n  return (this._hi < y._hi || this._hi === y._hi) && this._lo <= y._lo\n};\nDD.prototype.extractSignificantDigits = function extractSignificantDigits (insertDecimalPoint, magnitude) {\n  var y = this.abs();\n  var mag = DD.magnitude(y._hi);\n  var scale = DD.TEN.pow(mag);\n  y = y.divide(scale);\n  if (y.gt(DD.TEN)) {\n    y = y.divide(DD.TEN);\n    mag += 1;\n  } else if (y.lt(DD.ONE)) {\n    y = y.multiply(DD.TEN);\n    mag -= 1;\n  }\n  var decimalPointPos = mag + 1;\n  var buf = new StringBuffer();\n  var numDigits = DD.MAX_PRINT_DIGITS - 1;\n  for (var i = 0; i <= numDigits; i++) {\n    if (insertDecimalPoint && i === decimalPointPos) {\n      buf.append('.');\n    }\n    var digit = Math.trunc(y._hi);\n    if (digit < 0) {\n      break\n    }\n    var rebiasBy10 = false;\n    var digitChar = 0;\n    if (digit > 9) {\n      rebiasBy10 = true;\n      digitChar = '9';\n    } else {\n      digitChar = '0' + digit;\n    }\n    buf.append(digitChar);\n    y = y.subtract(DD.valueOf(digit)).multiply(DD.TEN);\n    if (rebiasBy10) { y.selfAdd(DD.TEN); }\n    var continueExtractingDigits = true;\n    var remMag = DD.magnitude(y._hi);\n    if (remMag < 0 && Math.abs(remMag) >= numDigits - i) { continueExtractingDigits = false; }\n    if (!continueExtractingDigits) { break }\n  }\n  magnitude[0] = mag;\n  return buf.toString()\n};\nDD.prototype.sqr = function sqr () {\n  return this.multiply(this)\n};\nDD.prototype.doubleValue = function doubleValue () {\n  return this._hi + this._lo\n};\nDD.prototype.subtract = function subtract () {\n  if (arguments[0] instanceof DD) {\n    var y = arguments[0];\n    return this.add(y.negate())\n  } else if (typeof arguments[0] === 'number') {\n    var y$1 = arguments[0];\n    return this.add(-y$1)\n  }\n};\nDD.prototype.equals = function equals () {\n  if (arguments.length === 1) {\n    var y = arguments[0];\n    return this._hi === y._hi && this._lo === y._lo\n  }\n};\nDD.prototype.isZero = function isZero () {\n  return this._hi === 0.0 && this._lo === 0.0\n};\nDD.prototype.selfSubtract = function selfSubtract () {\n  if (arguments[0] instanceof DD) {\n    var y = arguments[0];\n    if (this.isNaN()) { return this }\n    return this.selfAdd(-y._hi, -y._lo)\n  } else if (typeof arguments[0] === 'number') {\n    var y$1 = arguments[0];\n    if (this.isNaN()) { return this }\n    return this.selfAdd(-y$1, 0.0)\n  }\n};\nDD.prototype.getSpecialNumberString = function getSpecialNumberString () {\n  if (this.isZero()) { return '0.0' }\n  if (this.isNaN()) { return 'NaN ' }\n  return null\n};\nDD.prototype.min = function min (x) {\n  if (this.le(x)) {\n    return this\n  } else {\n    return x\n  }\n};\nDD.prototype.selfDivide = function selfDivide () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof DD) {\n      var y = arguments[0];\n      return this.selfDivide(y._hi, y._lo)\n    } else if (typeof arguments[0] === 'number') {\n      var y$1 = arguments[0];\n      return this.selfDivide(y$1, 0.0)\n    }\n  } else if (arguments.length === 2) {\n    var yhi = arguments[0];\n    var ylo = arguments[1];\n    var hc = null;\n    var tc = null;\n    var hy = null;\n    var ty = null;\n    var C = null;\n    var c = null;\n    var U = null;\n    var u = null;\n    C = this._hi / yhi;\n    c = DD.SPLIT * C;\n    hc = c - C;\n    u = DD.SPLIT * yhi;\n    hc = c - hc;\n    tc = C - hc;\n    hy = u - yhi;\n    U = C * yhi;\n    hy = u - hy;\n    ty = yhi - hy;\n    u = hc * hy - U + hc * ty + tc * hy + tc * ty;\n    c = (this._hi - U - u + this._lo - C * ylo) / yhi;\n    u = C + c;\n    this._hi = u;\n    this._lo = C - u + c;\n    return this\n  }\n};\nDD.prototype.dump = function dump () {\n  return 'DD<' + this._hi + ', ' + this._lo + '>'\n};\nDD.prototype.divide = function divide () {\n  if (arguments[0] instanceof DD) {\n    var y = arguments[0];\n    var hc = null;\n    var tc = null;\n    var hy = null;\n    var ty = null;\n    var C = null;\n    var c = null;\n    var U = null;\n    var u = null;\n    C = this._hi / y._hi;\n    c = DD.SPLIT * C;\n    hc = c - C;\n    u = DD.SPLIT * y._hi;\n    hc = c - hc;\n    tc = C - hc;\n    hy = u - y._hi;\n    U = C * y._hi;\n    hy = u - hy;\n    ty = y._hi - hy;\n    u = hc * hy - U + hc * ty + tc * hy + tc * ty;\n    c = (this._hi - U - u + this._lo - C * y._lo) / y._hi;\n    u = C + c;\n    var zhi = u;\n    var zlo = C - u + c;\n    return new DD(zhi, zlo)\n  } else if (typeof arguments[0] === 'number') {\n    var y$1 = arguments[0];\n    if (Double.isNaN(y$1)) { return DD.createNaN() }\n    return DD.copy(this).selfDivide(y$1, 0.0)\n  }\n};\nDD.prototype.ge = function ge (y) {\n  return (this._hi > y._hi || this._hi === y._hi) && this._lo >= y._lo\n};\nDD.prototype.pow = function pow (exp) {\n  if (exp === 0.0) { return DD.valueOf(1.0) }\n  var r = new DD(this);\n  var s = DD.valueOf(1.0);\n  var n = Math.abs(exp);\n  if (n > 1) {\n    while (n > 0) {\n      if (n % 2 === 1) {\n        s.selfMultiply(r);\n      }\n      n /= 2;\n      if (n > 0) { r = r.sqr(); }\n    }\n  } else {\n    s = r;\n  }\n  if (exp < 0) { return s.reciprocal() }\n  return s\n};\nDD.prototype.ceil = function ceil () {\n  if (this.isNaN()) { return DD.NaN }\n  var fhi = Math.ceil(this._hi);\n  var flo = 0.0;\n  if (fhi === this._hi) {\n    flo = Math.ceil(this._lo);\n  }\n  return new DD(fhi, flo)\n};\nDD.prototype.compareTo = function compareTo (o) {\n  var other = o;\n  if (this._hi < other._hi) { return -1 }\n  if (this._hi > other._hi) { return 1 }\n  if (this._lo < other._lo) { return -1 }\n  if (this._lo > other._lo) { return 1 }\n  return 0\n};\nDD.prototype.rint = function rint () {\n  if (this.isNaN()) { return this }\n  var plus5 = this.add(0.5);\n  return plus5.floor()\n};\nDD.prototype.setValue = function setValue () {\n  if (arguments[0] instanceof DD) {\n    var value = arguments[0];\n    this.init(value);\n    return this\n  } else if (typeof arguments[0] === 'number') {\n    var value$1 = arguments[0];\n    this.init(value$1);\n    return this\n  }\n};\nDD.prototype.max = function max (x) {\n  if (this.ge(x)) {\n    return this\n  } else {\n    return x\n  }\n};\nDD.prototype.sqrt = function sqrt () {\n  if (this.isZero()) { return DD.valueOf(0.0) }\n  if (this.isNegative()) {\n    return DD.NaN\n  }\n  var x = 1.0 / Math.sqrt(this._hi);\n  var ax = this._hi * x;\n  var axdd = DD.valueOf(ax);\n  var diffSq = this.subtract(axdd.sqr());\n  var d2 = diffSq._hi * (x * 0.5);\n  return axdd.add(d2)\n};\nDD.prototype.selfAdd = function selfAdd () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof DD) {\n      var y = arguments[0];\n      return this.selfAdd(y._hi, y._lo)\n    } else if (typeof arguments[0] === 'number') {\n      var y$1 = arguments[0];\n      var H = null;\n      var h = null;\n      var S = null;\n      var s = null;\n      var e = null;\n      var f = null;\n      S = this._hi + y$1;\n      e = S - this._hi;\n      s = S - e;\n      s = y$1 - e + (this._hi - s);\n      f = s + this._lo;\n      H = S + f;\n      h = f + (S - H);\n      this._hi = H + h;\n      this._lo = h + (H - this._hi);\n      return this\n    }\n  } else if (arguments.length === 2) {\n    var yhi = arguments[0];\n    var ylo = arguments[1];\n    var H$1 = null;\n    var h$1 = null;\n    var T = null;\n    var t = null;\n    var S$1 = null;\n    var s$1 = null;\n    var e$1 = null;\n    var f$1 = null;\n    S$1 = this._hi + yhi;\n    T = this._lo + ylo;\n    e$1 = S$1 - this._hi;\n    f$1 = T - this._lo;\n    s$1 = S$1 - e$1;\n    t = T - f$1;\n    s$1 = yhi - e$1 + (this._hi - s$1);\n    t = ylo - f$1 + (this._lo - t);\n    e$1 = s$1 + T;\n    H$1 = S$1 + e$1;\n    h$1 = e$1 + (S$1 - H$1);\n    e$1 = t + h$1;\n    var zhi = H$1 + e$1;\n    var zlo = e$1 + (H$1 - zhi);\n    this._hi = zhi;\n    this._lo = zlo;\n    return this\n  }\n};\nDD.prototype.selfMultiply = function selfMultiply () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof DD) {\n      var y = arguments[0];\n      return this.selfMultiply(y._hi, y._lo)\n    } else if (typeof arguments[0] === 'number') {\n      var y$1 = arguments[0];\n      return this.selfMultiply(y$1, 0.0)\n    }\n  } else if (arguments.length === 2) {\n    var yhi = arguments[0];\n    var ylo = arguments[1];\n    var hx = null;\n    var tx = null;\n    var hy = null;\n    var ty = null;\n    var C = null;\n    var c = null;\n    C = DD.SPLIT * this._hi;\n    hx = C - this._hi;\n    c = DD.SPLIT * yhi;\n    hx = C - hx;\n    tx = this._hi - hx;\n    hy = c - yhi;\n    C = this._hi * yhi;\n    hy = c - hy;\n    ty = yhi - hy;\n    c = hx * hy - C + hx * ty + tx * hy + tx * ty + (this._hi * ylo + this._lo * yhi);\n    var zhi = C + c;\n    hx = C - zhi;\n    var zlo = c + hx;\n    this._hi = zhi;\n    this._lo = zlo;\n    return this\n  }\n};\nDD.prototype.selfSqr = function selfSqr () {\n  return this.selfMultiply(this)\n};\nDD.prototype.floor = function floor () {\n  if (this.isNaN()) { return DD.NaN }\n  var fhi = Math.floor(this._hi);\n  var flo = 0.0;\n  if (fhi === this._hi) {\n    flo = Math.floor(this._lo);\n  }\n  return new DD(fhi, flo)\n};\nDD.prototype.negate = function negate () {\n  if (this.isNaN()) { return this }\n  return new DD(-this._hi, -this._lo)\n};\nDD.prototype.clone = function clone () {\n  // try {\n  // return null\n  // } catch (ex) {\n  // if (ex instanceof CloneNotSupportedException) {\n  //   return null\n  // } else throw ex\n  // } finally {}\n};\nDD.prototype.multiply = function multiply () {\n  if (arguments[0] instanceof DD) {\n    var y = arguments[0];\n    if (y.isNaN()) { return DD.createNaN() }\n    return DD.copy(this).selfMultiply(y)\n  } else if (typeof arguments[0] === 'number') {\n    var y$1 = arguments[0];\n    if (Double.isNaN(y$1)) { return DD.createNaN() }\n    return DD.copy(this).selfMultiply(y$1, 0.0)\n  }\n};\nDD.prototype.isNaN = function isNaN () {\n  return Double.isNaN(this._hi)\n};\nDD.prototype.intValue = function intValue () {\n  return Math.trunc(this._hi)\n};\nDD.prototype.toString = function toString () {\n  var mag = DD.magnitude(this._hi);\n  if (mag >= -3 && mag <= 20) { return this.toStandardNotation() }\n  return this.toSciNotation()\n};\nDD.prototype.toStandardNotation = function toStandardNotation () {\n  var specialStr = this.getSpecialNumberString();\n  if (specialStr !== null) { return specialStr }\n  var magnitude = new Array(1).fill(null);\n  var sigDigits = this.extractSignificantDigits(true, magnitude);\n  var decimalPointPos = magnitude[0] + 1;\n  var num = sigDigits;\n  if (sigDigits.charAt(0) === '.') {\n    num = '0' + sigDigits;\n  } else if (decimalPointPos < 0) {\n    num = '0.' + DD.stringOfChar('0', -decimalPointPos) + sigDigits;\n  } else if (sigDigits.indexOf('.') === -1) {\n    var numZeroes = decimalPointPos - sigDigits.length;\n    var zeroes = DD.stringOfChar('0', numZeroes);\n    num = sigDigits + zeroes + '.0';\n  }\n  if (this.isNegative()) { return '-' + num }\n  return num\n};\nDD.prototype.reciprocal = function reciprocal () {\n  var hc = null;\n  var tc = null;\n  var hy = null;\n  var ty = null;\n  var C = null;\n  var c = null;\n  var U = null;\n  var u = null;\n  C = 1.0 / this._hi;\n  c = DD.SPLIT * C;\n  hc = c - C;\n  u = DD.SPLIT * this._hi;\n  hc = c - hc;\n  tc = C - hc;\n  hy = u - this._hi;\n  U = C * this._hi;\n  hy = u - hy;\n  ty = this._hi - hy;\n  u = hc * hy - U + hc * ty + tc * hy + tc * ty;\n  c = (1.0 - U - u - C * this._lo) / this._hi;\n  var zhi = C + c;\n  var zlo = C - zhi + c;\n  return new DD(zhi, zlo)\n};\nDD.prototype.toSciNotation = function toSciNotation () {\n  if (this.isZero()) { return DD.SCI_NOT_ZERO }\n  var specialStr = this.getSpecialNumberString();\n  if (specialStr !== null) { return specialStr }\n  var magnitude = new Array(1).fill(null);\n  var digits = this.extractSignificantDigits(false, magnitude);\n  var expStr = DD.SCI_NOT_EXPONENT_CHAR + magnitude[0];\n  if (digits.charAt(0) === '0') {\n    throw new Error('Found leading zero: ' + digits)\n  }\n  var trailingDigits = '';\n  if (digits.length > 1) { trailingDigits = digits.substring(1); }\n  var digitsWithDecimal = digits.charAt(0) + '.' + trailingDigits;\n  if (this.isNegative()) { return '-' + digitsWithDecimal + expStr }\n  return digitsWithDecimal + expStr\n};\nDD.prototype.abs = function abs () {\n  if (this.isNaN()) { return DD.NaN }\n  if (this.isNegative()) { return this.negate() }\n  return new DD(this)\n};\nDD.prototype.isPositive = function isPositive () {\n  return (this._hi > 0.0 || this._hi === 0.0) && this._lo > 0.0\n};\nDD.prototype.lt = function lt (y) {\n  return (this._hi < y._hi || this._hi === y._hi) && this._lo < y._lo\n};\nDD.prototype.add = function add () {\n  if (arguments[0] instanceof DD) {\n    var y = arguments[0];\n    return DD.copy(this).selfAdd(y)\n  } else if (typeof arguments[0] === 'number') {\n    var y$1 = arguments[0];\n    return DD.copy(this).selfAdd(y$1)\n  }\n};\nDD.prototype.init = function init () {\n  if (arguments.length === 1) {\n    if (typeof arguments[0] === 'number') {\n      var x = arguments[0];\n      this._hi = x;\n      this._lo = 0.0;\n    } else if (arguments[0] instanceof DD) {\n      var dd = arguments[0];\n      this._hi = dd._hi;\n      this._lo = dd._lo;\n    }\n  } else if (arguments.length === 2) {\n    var hi = arguments[0];\n    var lo = arguments[1];\n    this._hi = hi;\n    this._lo = lo;\n  }\n};\nDD.prototype.gt = function gt (y) {\n  return (this._hi > y._hi || this._hi === y._hi) && this._lo > y._lo\n};\nDD.prototype.isNegative = function isNegative () {\n  return (this._hi < 0.0 || this._hi === 0.0) && this._lo < 0.0\n};\nDD.prototype.trunc = function trunc () {\n  if (this.isNaN()) { return DD.NaN }\n  if (this.isPositive()) { return this.floor(); } else { return this.ceil() }\n};\nDD.prototype.signum = function signum () {\n  if (this._hi > 0) { return 1 }\n  if (this._hi < 0) { return -1 }\n  if (this._lo > 0) { return 1 }\n  if (this._lo < 0) { return -1 }\n  return 0\n};\nDD.prototype.interfaces_ = function interfaces_ () {\n  return [Serializable, Comparable, Clonable]\n};\nDD.prototype.getClass = function getClass () {\n  return DD\n};\nDD.sqr = function sqr (x) {\n  return DD.valueOf(x).selfMultiply(x)\n};\nDD.valueOf = function valueOf () {\n  if (typeof arguments[0] === 'string') {\n    var str = arguments[0];\n    return DD.parse(str)\n  } else if (typeof arguments[0] === 'number') {\n    var x = arguments[0];\n    return new DD(x)\n  }\n};\nDD.sqrt = function sqrt (x) {\n  return DD.valueOf(x).sqrt()\n};\nDD.parse = function parse (str) {\n  var i = 0;\n  var strlen = str.length;\n  while (Character.isWhitespace(str.charAt(i))) { i++; }\n  var isNegative = false;\n  if (i < strlen) {\n    var signCh = str.charAt(i);\n    if (signCh === '-' || signCh === '+') {\n      i++;\n      if (signCh === '-') { isNegative = true; }\n    }\n  }\n  var val = new DD();\n  var numDigits = 0;\n  var numBeforeDec = 0;\n  var exp = 0;\n  while (true) {\n    if (i >= strlen) { break }\n    var ch = str.charAt(i);\n    i++;\n    if (Character.isDigit(ch)) {\n      var d = ch - '0';\n      val.selfMultiply(DD.TEN);\n      val.selfAdd(d);\n      numDigits++;\n      continue\n    }\n    if (ch === '.') {\n      numBeforeDec = numDigits;\n      continue\n    }\n    if (ch === 'e' || ch === 'E') {\n      var expStr = str.substring(i);\n      try {\n        exp = Integer.parseInt(expStr);\n      } catch (ex) {\n        if (ex instanceof Error) {\n          throw new Error('Invalid exponent ' + expStr + ' in string ' + str)\n        } else { throw ex }\n      } finally {}\n      break\n    }\n    throw new Error(\"Unexpected character '\" + ch + \"' at position \" + i + ' in string ' + str)\n  }\n  var val2 = val;\n  var numDecPlaces = numDigits - numBeforeDec - exp;\n  if (numDecPlaces === 0) {\n    val2 = val;\n  } else if (numDecPlaces > 0) {\n    var scale = DD.TEN.pow(numDecPlaces);\n    val2 = val.divide(scale);\n  } else if (numDecPlaces < 0) {\n    var scale$1 = DD.TEN.pow(-numDecPlaces);\n    val2 = val.multiply(scale$1);\n  }\n  if (isNegative) {\n    return val2.negate()\n  }\n  return val2\n};\nDD.createNaN = function createNaN () {\n  return new DD(Double.NaN, Double.NaN)\n};\nDD.copy = function copy (dd) {\n  return new DD(dd)\n};\nDD.magnitude = function magnitude (x) {\n  var xAbs = Math.abs(x);\n  var xLog10 = Math.log(xAbs) / Math.log(10);\n  var xMag = Math.trunc(Math.floor(xLog10));\n  var xApprox = Math.pow(10, xMag);\n  if (xApprox * 10 <= xAbs) { xMag += 1; }\n  return xMag\n};\nDD.stringOfChar = function stringOfChar (ch, len) {\n  var buf = new StringBuffer();\n  for (var i = 0; i < len; i++) {\n    buf.append(ch);\n  }\n  return buf.toString()\n};\nstaticAccessors$7.PI.get = function () { return new DD(3.141592653589793116e+00, 1.224646799147353207e-16) };\nstaticAccessors$7.TWO_PI.get = function () { return new DD(6.283185307179586232e+00, 2.449293598294706414e-16) };\nstaticAccessors$7.PI_2.get = function () { return new DD(1.570796326794896558e+00, 6.123233995736766036e-17) };\nstaticAccessors$7.E.get = function () { return new DD(2.718281828459045091e+00, 1.445646891729250158e-16) };\nstaticAccessors$7.NaN.get = function () { return new DD(Double.NaN, Double.NaN) };\nstaticAccessors$7.EPS.get = function () { return 1.23259516440783e-32 };\nstaticAccessors$7.SPLIT.get = function () { return 134217729.0 };\nstaticAccessors$7.MAX_PRINT_DIGITS.get = function () { return 32 };\nstaticAccessors$7.TEN.get = function () { return DD.valueOf(10.0) };\nstaticAccessors$7.ONE.get = function () { return DD.valueOf(1.0) };\nstaticAccessors$7.SCI_NOT_EXPONENT_CHAR.get = function () { return 'E' };\nstaticAccessors$7.SCI_NOT_ZERO.get = function () { return '0.0E0' };\n\nObject.defineProperties( DD, staticAccessors$7 );\n\nvar CGAlgorithmsDD = function CGAlgorithmsDD () {};\n\nvar staticAccessors$6 = { DP_SAFE_EPSILON: { configurable: true } };\n\nCGAlgorithmsDD.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCGAlgorithmsDD.prototype.getClass = function getClass () {\n  return CGAlgorithmsDD\n};\nCGAlgorithmsDD.orientationIndex = function orientationIndex (p1, p2, q) {\n  var index = CGAlgorithmsDD.orientationIndexFilter(p1, p2, q);\n  if (index <= 1) { return index }\n  var dx1 = DD.valueOf(p2.x).selfAdd(-p1.x);\n  var dy1 = DD.valueOf(p2.y).selfAdd(-p1.y);\n  var dx2 = DD.valueOf(q.x).selfAdd(-p2.x);\n  var dy2 = DD.valueOf(q.y).selfAdd(-p2.y);\n  return dx1.selfMultiply(dy2).selfSubtract(dy1.selfMultiply(dx2)).signum()\n};\nCGAlgorithmsDD.signOfDet2x2 = function signOfDet2x2 (x1, y1, x2, y2) {\n  var det = x1.multiply(y2).selfSubtract(y1.multiply(x2));\n  return det.signum()\n};\nCGAlgorithmsDD.intersection = function intersection (p1, p2, q1, q2) {\n  var denom1 = DD.valueOf(q2.y).selfSubtract(q1.y).selfMultiply(DD.valueOf(p2.x).selfSubtract(p1.x));\n  var denom2 = DD.valueOf(q2.x).selfSubtract(q1.x).selfMultiply(DD.valueOf(p2.y).selfSubtract(p1.y));\n  var denom = denom1.subtract(denom2);\n  var numx1 = DD.valueOf(q2.x).selfSubtract(q1.x).selfMultiply(DD.valueOf(p1.y).selfSubtract(q1.y));\n  var numx2 = DD.valueOf(q2.y).selfSubtract(q1.y).selfMultiply(DD.valueOf(p1.x).selfSubtract(q1.x));\n  var numx = numx1.subtract(numx2);\n  var fracP = numx.selfDivide(denom).doubleValue();\n  var x = DD.valueOf(p1.x).selfAdd(DD.valueOf(p2.x).selfSubtract(p1.x).selfMultiply(fracP)).doubleValue();\n  var numy1 = DD.valueOf(p2.x).selfSubtract(p1.x).selfMultiply(DD.valueOf(p1.y).selfSubtract(q1.y));\n  var numy2 = DD.valueOf(p2.y).selfSubtract(p1.y).selfMultiply(DD.valueOf(p1.x).selfSubtract(q1.x));\n  var numy = numy1.subtract(numy2);\n  var fracQ = numy.selfDivide(denom).doubleValue();\n  var y = DD.valueOf(q1.y).selfAdd(DD.valueOf(q2.y).selfSubtract(q1.y).selfMultiply(fracQ)).doubleValue();\n  return new Coordinate(x, y)\n};\nCGAlgorithmsDD.orientationIndexFilter = function orientationIndexFilter (pa, pb, pc) {\n  var detsum = null;\n  var detleft = (pa.x - pc.x) * (pb.y - pc.y);\n  var detright = (pa.y - pc.y) * (pb.x - pc.x);\n  var det = detleft - detright;\n  if (detleft > 0.0) {\n    if (detright <= 0.0) {\n      return CGAlgorithmsDD.signum(det)\n    } else {\n      detsum = detleft + detright;\n    }\n  } else if (detleft < 0.0) {\n    if (detright >= 0.0) {\n      return CGAlgorithmsDD.signum(det)\n    } else {\n      detsum = -detleft - detright;\n    }\n  } else {\n    return CGAlgorithmsDD.signum(det)\n  }\n  var errbound = CGAlgorithmsDD.DP_SAFE_EPSILON * detsum;\n  if (det >= errbound || -det >= errbound) {\n    return CGAlgorithmsDD.signum(det)\n  }\n  return 2\n};\nCGAlgorithmsDD.signum = function signum (x) {\n  if (x > 0) { return 1 }\n  if (x < 0) { return -1 }\n  return 0\n};\nstaticAccessors$6.DP_SAFE_EPSILON.get = function () { return 1e-15 };\n\nObject.defineProperties( CGAlgorithmsDD, staticAccessors$6 );\n\nvar CoordinateSequence = function CoordinateSequence () {};\n\nvar staticAccessors$8 = { X: { configurable: true },Y: { configurable: true },Z: { configurable: true },M: { configurable: true } };\n\nstaticAccessors$8.X.get = function () { return 0 };\nstaticAccessors$8.Y.get = function () { return 1 };\nstaticAccessors$8.Z.get = function () { return 2 };\nstaticAccessors$8.M.get = function () { return 3 };\nCoordinateSequence.prototype.setOrdinate = function setOrdinate (index, ordinateIndex, value) {};\nCoordinateSequence.prototype.size = function size () {};\nCoordinateSequence.prototype.getOrdinate = function getOrdinate (index, ordinateIndex) {};\nCoordinateSequence.prototype.getCoordinate = function getCoordinate () {};\nCoordinateSequence.prototype.getCoordinateCopy = function getCoordinateCopy (i) {};\nCoordinateSequence.prototype.getDimension = function getDimension () {};\nCoordinateSequence.prototype.getX = function getX (index) {};\nCoordinateSequence.prototype.clone = function clone () {};\nCoordinateSequence.prototype.expandEnvelope = function expandEnvelope (env) {};\nCoordinateSequence.prototype.copy = function copy () {};\nCoordinateSequence.prototype.getY = function getY (index) {};\nCoordinateSequence.prototype.toCoordinateArray = function toCoordinateArray () {};\nCoordinateSequence.prototype.interfaces_ = function interfaces_ () {\n  return [Clonable]\n};\nCoordinateSequence.prototype.getClass = function getClass () {\n  return CoordinateSequence\n};\n\nObject.defineProperties( CoordinateSequence, staticAccessors$8 );\n\nvar Exception = function Exception () {};\n\nvar NotRepresentableException = (function (Exception$$1) {\n  function NotRepresentableException () {\n    Exception$$1.call(this, 'Projective point not representable on the Cartesian plane.');\n  }\n\n  if ( Exception$$1 ) NotRepresentableException.__proto__ = Exception$$1;\n  NotRepresentableException.prototype = Object.create( Exception$$1 && Exception$$1.prototype );\n  NotRepresentableException.prototype.constructor = NotRepresentableException;\n  NotRepresentableException.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  NotRepresentableException.prototype.getClass = function getClass () {\n    return NotRepresentableException\n  };\n\n  return NotRepresentableException;\n}(Exception));\n\nvar System = function System () {};\n\nSystem.arraycopy = function arraycopy (src, srcPos, dest, destPos, len) {\n  var c = 0;\n  for (var i = srcPos; i < srcPos + len; i++) {\n    dest[destPos + c] = src[i];\n    c++;\n  }\n};\n\nSystem.getProperty = function getProperty (name) {\n  return {\n    'line.separator': '\\n'\n  }[name]\n};\n\nvar HCoordinate = function HCoordinate () {\n  this.x = null;\n  this.y = null;\n  this.w = null;\n  if (arguments.length === 0) {\n    this.x = 0.0;\n    this.y = 0.0;\n    this.w = 1.0;\n  } else if (arguments.length === 1) {\n    var p = arguments[0];\n    this.x = p.x;\n    this.y = p.y;\n    this.w = 1.0;\n  } else if (arguments.length === 2) {\n    if (typeof arguments[0] === 'number' && typeof arguments[1] === 'number') {\n      var _x = arguments[0];\n      var _y = arguments[1];\n      this.x = _x;\n      this.y = _y;\n      this.w = 1.0;\n    } else if (arguments[0] instanceof HCoordinate && arguments[1] instanceof HCoordinate) {\n      var p1 = arguments[0];\n      var p2 = arguments[1];\n      this.x = p1.y * p2.w - p2.y * p1.w;\n      this.y = p2.x * p1.w - p1.x * p2.w;\n      this.w = p1.x * p2.y - p2.x * p1.y;\n    } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate) {\n      var p1$1 = arguments[0];\n      var p2$1 = arguments[1];\n      this.x = p1$1.y - p2$1.y;\n      this.y = p2$1.x - p1$1.x;\n      this.w = p1$1.x * p2$1.y - p2$1.x * p1$1.y;\n    }\n  } else if (arguments.length === 3) {\n    var _x$1 = arguments[0];\n    var _y$1 = arguments[1];\n    var _w = arguments[2];\n    this.x = _x$1;\n    this.y = _y$1;\n    this.w = _w;\n  } else if (arguments.length === 4) {\n    var p1$2 = arguments[0];\n    var p2$2 = arguments[1];\n    var q1 = arguments[2];\n    var q2 = arguments[3];\n    var px = p1$2.y - p2$2.y;\n    var py = p2$2.x - p1$2.x;\n    var pw = p1$2.x * p2$2.y - p2$2.x * p1$2.y;\n    var qx = q1.y - q2.y;\n    var qy = q2.x - q1.x;\n    var qw = q1.x * q2.y - q2.x * q1.y;\n    this.x = py * qw - qy * pw;\n    this.y = qx * pw - px * qw;\n    this.w = px * qy - qx * py;\n  }\n};\nHCoordinate.prototype.getY = function getY () {\n  var a = this.y / this.w;\n  if (Double.isNaN(a) || Double.isInfinite(a)) {\n    throw new NotRepresentableException()\n  }\n  return a\n};\nHCoordinate.prototype.getX = function getX () {\n  var a = this.x / this.w;\n  if (Double.isNaN(a) || Double.isInfinite(a)) {\n    throw new NotRepresentableException()\n  }\n  return a\n};\nHCoordinate.prototype.getCoordinate = function getCoordinate () {\n  var p = new Coordinate();\n  p.x = this.getX();\n  p.y = this.getY();\n  return p\n};\nHCoordinate.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nHCoordinate.prototype.getClass = function getClass () {\n  return HCoordinate\n};\nHCoordinate.intersection = function intersection (p1, p2, q1, q2) {\n  var px = p1.y - p2.y;\n  var py = p2.x - p1.x;\n  var pw = p1.x * p2.y - p2.x * p1.y;\n  var qx = q1.y - q2.y;\n  var qy = q2.x - q1.x;\n  var qw = q1.x * q2.y - q2.x * q1.y;\n  var x = py * qw - qy * pw;\n  var y = qx * pw - px * qw;\n  var w = px * qy - qx * py;\n  var xInt = x / w;\n  var yInt = y / w;\n  if (Double.isNaN(xInt) || (Double.isInfinite(xInt) || Double.isNaN(yInt)) || Double.isInfinite(yInt)) {\n    throw new NotRepresentableException()\n  }\n  return new Coordinate(xInt, yInt)\n};\n\nvar Envelope = function Envelope () {\n  this._minx = null;\n  this._maxx = null;\n  this._miny = null;\n  this._maxy = null;\n  if (arguments.length === 0) {\n    this.init();\n  } else if (arguments.length === 1) {\n    if (arguments[0] instanceof Coordinate) {\n      var p = arguments[0];\n      this.init(p.x, p.x, p.y, p.y);\n    } else if (arguments[0] instanceof Envelope) {\n      var env = arguments[0];\n      this.init(env);\n    }\n  } else if (arguments.length === 2) {\n    var p1 = arguments[0];\n    var p2 = arguments[1];\n    this.init(p1.x, p2.x, p1.y, p2.y);\n  } else if (arguments.length === 4) {\n    var x1 = arguments[0];\n    var x2 = arguments[1];\n    var y1 = arguments[2];\n    var y2 = arguments[3];\n    this.init(x1, x2, y1, y2);\n  }\n};\n\nvar staticAccessors$9 = { serialVersionUID: { configurable: true } };\nEnvelope.prototype.getArea = function getArea () {\n  return this.getWidth() * this.getHeight()\n};\nEnvelope.prototype.equals = function equals (other) {\n  if (!(other instanceof Envelope)) {\n    return false\n  }\n  var otherEnvelope = other;\n  if (this.isNull()) {\n    return otherEnvelope.isNull()\n  }\n  return this._maxx === otherEnvelope.getMaxX() && this._maxy === otherEnvelope.getMaxY() && this._minx === otherEnvelope.getMinX() && this._miny === otherEnvelope.getMinY()\n};\nEnvelope.prototype.intersection = function intersection (env) {\n  if (this.isNull() || env.isNull() || !this.intersects(env)) { return new Envelope() }\n  var intMinX = this._minx > env._minx ? this._minx : env._minx;\n  var intMinY = this._miny > env._miny ? this._miny : env._miny;\n  var intMaxX = this._maxx < env._maxx ? this._maxx : env._maxx;\n  var intMaxY = this._maxy < env._maxy ? this._maxy : env._maxy;\n  return new Envelope(intMinX, intMaxX, intMinY, intMaxY)\n};\nEnvelope.prototype.isNull = function isNull () {\n  return this._maxx < this._minx\n};\nEnvelope.prototype.getMaxX = function getMaxX () {\n  return this._maxx\n};\nEnvelope.prototype.covers = function covers () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Coordinate) {\n      var p = arguments[0];\n      return this.covers(p.x, p.y)\n    } else if (arguments[0] instanceof Envelope) {\n      var other = arguments[0];\n      if (this.isNull() || other.isNull()) {\n        return false\n      }\n      return other.getMinX() >= this._minx && other.getMaxX() <= this._maxx && other.getMinY() >= this._miny && other.getMaxY() <= this._maxy\n    }\n  } else if (arguments.length === 2) {\n    var x = arguments[0];\n    var y = arguments[1];\n    if (this.isNull()) { return false }\n    return x >= this._minx && x <= this._maxx && y >= this._miny && y <= this._maxy\n  }\n};\nEnvelope.prototype.intersects = function intersects () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Envelope) {\n      var other = arguments[0];\n      if (this.isNull() || other.isNull()) {\n        return false\n      }\n      return !(other._minx > this._maxx || other._maxx < this._minx || other._miny > this._maxy || other._maxy < this._miny)\n    } else if (arguments[0] instanceof Coordinate) {\n      var p = arguments[0];\n      return this.intersects(p.x, p.y)\n    }\n  } else if (arguments.length === 2) {\n    var x = arguments[0];\n    var y = arguments[1];\n    if (this.isNull()) { return false }\n    return !(x > this._maxx || x < this._minx || y > this._maxy || y < this._miny)\n  }\n};\nEnvelope.prototype.getMinY = function getMinY () {\n  return this._miny\n};\nEnvelope.prototype.getMinX = function getMinX () {\n  return this._minx\n};\nEnvelope.prototype.expandToInclude = function expandToInclude () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Coordinate) {\n      var p = arguments[0];\n      this.expandToInclude(p.x, p.y);\n    } else if (arguments[0] instanceof Envelope) {\n      var other = arguments[0];\n      if (other.isNull()) {\n        return null\n      }\n      if (this.isNull()) {\n        this._minx = other.getMinX();\n        this._maxx = other.getMaxX();\n        this._miny = other.getMinY();\n        this._maxy = other.getMaxY();\n      } else {\n        if (other._minx < this._minx) {\n          this._minx = other._minx;\n        }\n        if (other._maxx > this._maxx) {\n          this._maxx = other._maxx;\n        }\n        if (other._miny < this._miny) {\n          this._miny = other._miny;\n        }\n        if (other._maxy > this._maxy) {\n          this._maxy = other._maxy;\n        }\n      }\n    }\n  } else if (arguments.length === 2) {\n    var x = arguments[0];\n    var y = arguments[1];\n    if (this.isNull()) {\n      this._minx = x;\n      this._maxx = x;\n      this._miny = y;\n      this._maxy = y;\n    } else {\n      if (x < this._minx) {\n        this._minx = x;\n      }\n      if (x > this._maxx) {\n        this._maxx = x;\n      }\n      if (y < this._miny) {\n        this._miny = y;\n      }\n      if (y > this._maxy) {\n        this._maxy = y;\n      }\n    }\n  }\n};\nEnvelope.prototype.minExtent = function minExtent () {\n  if (this.isNull()) { return 0.0 }\n  var w = this.getWidth();\n  var h = this.getHeight();\n  if (w < h) { return w }\n  return h\n};\nEnvelope.prototype.getWidth = function getWidth () {\n  if (this.isNull()) {\n    return 0\n  }\n  return this._maxx - this._minx\n};\nEnvelope.prototype.compareTo = function compareTo (o) {\n  var env = o;\n  if (this.isNull()) {\n    if (env.isNull()) { return 0 }\n    return -1\n  } else {\n    if (env.isNull()) { return 1 }\n  }\n  if (this._minx < env._minx) { return -1 }\n  if (this._minx > env._minx) { return 1 }\n  if (this._miny < env._miny) { return -1 }\n  if (this._miny > env._miny) { return 1 }\n  if (this._maxx < env._maxx) { return -1 }\n  if (this._maxx > env._maxx) { return 1 }\n  if (this._maxy < env._maxy) { return -1 }\n  if (this._maxy > env._maxy) { return 1 }\n  return 0\n};\nEnvelope.prototype.translate = function translate (transX, transY) {\n  if (this.isNull()) {\n    return null\n  }\n  this.init(this.getMinX() + transX, this.getMaxX() + transX, this.getMinY() + transY, this.getMaxY() + transY);\n};\nEnvelope.prototype.toString = function toString () {\n  return 'Env[' + this._minx + ' : ' + this._maxx + ', ' + this._miny + ' : ' + this._maxy + ']'\n};\nEnvelope.prototype.setToNull = function setToNull () {\n  this._minx = 0;\n  this._maxx = -1;\n  this._miny = 0;\n  this._maxy = -1;\n};\nEnvelope.prototype.getHeight = function getHeight () {\n  if (this.isNull()) {\n    return 0\n  }\n  return this._maxy - this._miny\n};\nEnvelope.prototype.maxExtent = function maxExtent () {\n  if (this.isNull()) { return 0.0 }\n  var w = this.getWidth();\n  var h = this.getHeight();\n  if (w > h) { return w }\n  return h\n};\nEnvelope.prototype.expandBy = function expandBy () {\n  if (arguments.length === 1) {\n    var distance = arguments[0];\n    this.expandBy(distance, distance);\n  } else if (arguments.length === 2) {\n    var deltaX = arguments[0];\n    var deltaY = arguments[1];\n    if (this.isNull()) { return null }\n    this._minx -= deltaX;\n    this._maxx += deltaX;\n    this._miny -= deltaY;\n    this._maxy += deltaY;\n    if (this._minx > this._maxx || this._miny > this._maxy) { this.setToNull(); }\n  }\n};\nEnvelope.prototype.contains = function contains () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Envelope) {\n      var other = arguments[0];\n      return this.covers(other)\n    } else if (arguments[0] instanceof Coordinate) {\n      var p = arguments[0];\n      return this.covers(p)\n    }\n  } else if (arguments.length === 2) {\n    var x = arguments[0];\n    var y = arguments[1];\n    return this.covers(x, y)\n  }\n};\nEnvelope.prototype.centre = function centre () {\n  if (this.isNull()) { return null }\n  return new Coordinate((this.getMinX() + this.getMaxX()) / 2.0, (this.getMinY() + this.getMaxY()) / 2.0)\n};\nEnvelope.prototype.init = function init () {\n  if (arguments.length === 0) {\n    this.setToNull();\n  } else if (arguments.length === 1) {\n    if (arguments[0] instanceof Coordinate) {\n      var p = arguments[0];\n      this.init(p.x, p.x, p.y, p.y);\n    } else if (arguments[0] instanceof Envelope) {\n      var env = arguments[0];\n      this._minx = env._minx;\n      this._maxx = env._maxx;\n      this._miny = env._miny;\n      this._maxy = env._maxy;\n    }\n  } else if (arguments.length === 2) {\n    var p1 = arguments[0];\n    var p2 = arguments[1];\n    this.init(p1.x, p2.x, p1.y, p2.y);\n  } else if (arguments.length === 4) {\n    var x1 = arguments[0];\n    var x2 = arguments[1];\n    var y1 = arguments[2];\n    var y2 = arguments[3];\n    if (x1 < x2) {\n      this._minx = x1;\n      this._maxx = x2;\n    } else {\n      this._minx = x2;\n      this._maxx = x1;\n    }\n    if (y1 < y2) {\n      this._miny = y1;\n      this._maxy = y2;\n    } else {\n      this._miny = y2;\n      this._maxy = y1;\n    }\n  }\n};\nEnvelope.prototype.getMaxY = function getMaxY () {\n  return this._maxy\n};\nEnvelope.prototype.distance = function distance (env) {\n  if (this.intersects(env)) { return 0 }\n  var dx = 0.0;\n  if (this._maxx < env._minx) { dx = env._minx - this._maxx; } else if (this._minx > env._maxx) { dx = this._minx - env._maxx; }\n  var dy = 0.0;\n  if (this._maxy < env._miny) { dy = env._miny - this._maxy; } else if (this._miny > env._maxy) { dy = this._miny - env._maxy; }\n  if (dx === 0.0) { return dy }\n  if (dy === 0.0) { return dx }\n  return Math.sqrt(dx * dx + dy * dy)\n};\nEnvelope.prototype.hashCode = function hashCode () {\n  var result = 17;\n  result = 37 * result + Coordinate.hashCode(this._minx);\n  result = 37 * result + Coordinate.hashCode(this._maxx);\n  result = 37 * result + Coordinate.hashCode(this._miny);\n  result = 37 * result + Coordinate.hashCode(this._maxy);\n  return result\n};\nEnvelope.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable, Serializable]\n};\nEnvelope.prototype.getClass = function getClass () {\n  return Envelope\n};\nEnvelope.intersects = function intersects () {\n  if (arguments.length === 3) {\n    var p1 = arguments[0];\n    var p2 = arguments[1];\n    var q = arguments[2];\n    if (q.x >= (p1.x < p2.x ? p1.x : p2.x) && q.x <= (p1.x > p2.x ? p1.x : p2.x) && (q.y >= (p1.y < p2.y ? p1.y : p2.y) && q.y <= (p1.y > p2.y ? p1.y : p2.y))) {\n      return true\n    }\n    return false\n  } else if (arguments.length === 4) {\n    var p1$1 = arguments[0];\n    var p2$1 = arguments[1];\n    var q1 = arguments[2];\n    var q2 = arguments[3];\n    var minq = Math.min(q1.x, q2.x);\n    var maxq = Math.max(q1.x, q2.x);\n    var minp = Math.min(p1$1.x, p2$1.x);\n    var maxp = Math.max(p1$1.x, p2$1.x);\n    if (minp > maxq) { return false }\n    if (maxp < minq) { return false }\n    minq = Math.min(q1.y, q2.y);\n    maxq = Math.max(q1.y, q2.y);\n    minp = Math.min(p1$1.y, p2$1.y);\n    maxp = Math.max(p1$1.y, p2$1.y);\n    if (minp > maxq) { return false }\n    if (maxp < minq) { return false }\n    return true\n  }\n};\nstaticAccessors$9.serialVersionUID.get = function () { return 5873921885273102420 };\n\nObject.defineProperties( Envelope, staticAccessors$9 );\n\nvar regExes = {\n  'typeStr': /^\\s*(\\w+)\\s*\\(\\s*(.*)\\s*\\)\\s*$/,\n  'emptyTypeStr': /^\\s*(\\w+)\\s*EMPTY\\s*$/,\n  'spaces': /\\s+/,\n  'parenComma': /\\)\\s*,\\s*\\(/,\n  'doubleParenComma': /\\)\\s*\\)\\s*,\\s*\\(\\s*\\(/, // can't use {2} here\n  'trimParens': /^\\s*\\(?(.*?)\\)?\\s*$/\n};\n\n/**\n * Class for reading and writing Well-Known Text.\n *\n * NOTE: Adapted from OpenLayers 2.11 implementation.\n */\n\n/** Create a new parser for WKT\n *\n * @param {GeometryFactory} geometryFactory\n * @return An instance of WKTParser.\n * @constructor\n * @private\n */\nvar WKTParser = function WKTParser (geometryFactory) {\n  this.geometryFactory = geometryFactory || new GeometryFactory();\n};\n/**\n * Deserialize a WKT string and return a geometry. Supports WKT for POINT,\n * MULTIPOINT, LINESTRING, LINEARRING, MULTILINESTRING, POLYGON, MULTIPOLYGON,\n * and GEOMETRYCOLLECTION.\n *\n * @param {String} wkt A WKT string.\n * @return {Geometry} A geometry instance.\n * @private\n */\nWKTParser.prototype.read = function read (wkt) {\n  var geometry, type, str;\n  wkt = wkt.replace(/[\\n\\r]/g, ' ');\n  var matches = regExes.typeStr.exec(wkt);\n  if (wkt.search('EMPTY') !== -1) {\n    matches = regExes.emptyTypeStr.exec(wkt);\n    matches[2] = undefined;\n  }\n  if (matches) {\n    type = matches[1].toLowerCase();\n    str = matches[2];\n    if (parse$1[type]) {\n      geometry = parse$1[type].apply(this, [str]);\n    }\n  }\n\n  if (geometry === undefined) { throw new Error('Could not parse WKT ' + wkt) }\n\n  return geometry\n};\n\n/**\n * Serialize a geometry into a WKT string.\n *\n * @param {Geometry} geometry A feature or array of features.\n * @return {String} The WKT string representation of the input geometries.\n * @private\n */\nWKTParser.prototype.write = function write (geometry) {\n  return this.extractGeometry(geometry)\n};\n\n/**\n * Entry point to construct the WKT for a single Geometry object.\n *\n * @param {Geometry} geometry\n * @return {String} A WKT string of representing the geometry.\n * @private\n */\nWKTParser.prototype.extractGeometry = function extractGeometry (geometry) {\n  var type = geometry.getGeometryType().toLowerCase();\n  if (!extract$1[type]) {\n    return null\n  }\n  var wktType = type.toUpperCase();\n  var data;\n  if (geometry.isEmpty()) {\n    data = wktType + ' EMPTY';\n  } else {\n    data = wktType + '(' + extract$1[type].apply(this, [geometry]) + ')';\n  }\n  return data\n};\n\n/**\n * Object with properties corresponding to the geometry types. Property values\n * are functions that do the actual data extraction.\n * @private\n */\nvar extract$1 = {\n  coordinate: function coordinate (coordinate$1) {\n    return coordinate$1.x + ' ' + coordinate$1.y\n  },\n\n  /**\n   * Return a space delimited string of point coordinates.\n   *\n   * @param {Point}\n   *          point\n   * @return {String} A string of coordinates representing the point.\n   */\n  point: function point (point$1) {\n    return extract$1.coordinate.call(this, point$1._coordinates._coordinates[0])\n  },\n\n  /**\n   * Return a comma delimited string of point coordinates from a multipoint.\n   *\n   * @param {MultiPoint}\n   *          multipoint\n   * @return {String} A string of point coordinate strings representing the\n   *         multipoint.\n   */\n  multipoint: function multipoint (multipoint$1) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0, len = multipoint$1._geometries.length; i < len; ++i) {\n      array.push('(' + extract$1.point.apply(this$1, [multipoint$1._geometries[i]]) + ')');\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return a comma delimited string of point coordinates from a line.\n   *\n   * @param {LineString} linestring\n   * @return {String} A string of point coordinate strings representing the linestring.\n   */\n  linestring: function linestring (linestring$1) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0, len = linestring$1._points._coordinates.length; i < len; ++i) {\n      array.push(extract$1.coordinate.apply(this$1, [linestring$1._points._coordinates[i]]));\n    }\n    return array.join(',')\n  },\n\n  linearring: function linearring (linearring$1) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0, len = linearring$1._points._coordinates.length; i < len; ++i) {\n      array.push(extract$1.coordinate.apply(this$1, [linearring$1._points._coordinates[i]]));\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return a comma delimited string of linestring strings from a\n   * multilinestring.\n   *\n   * @param {MultiLineString} multilinestring\n   * @return {String} A string of of linestring strings representing the multilinestring.\n   */\n  multilinestring: function multilinestring (multilinestring$1) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0, len = multilinestring$1._geometries.length; i < len; ++i) {\n      array.push('(' +\n        extract$1.linestring.apply(this$1, [multilinestring$1._geometries[i]]) +\n        ')');\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return a comma delimited string of linear ring arrays from a polygon.\n   *\n   * @param {Polygon} polygon\n   * @return {String} An array of linear ring arrays representing the polygon.\n   */\n  polygon: function polygon (polygon$1) {\n    var this$1 = this;\n\n    var array = [];\n    array.push('(' + extract$1.linestring.apply(this, [polygon$1._shell]) + ')');\n    for (var i = 0, len = polygon$1._holes.length; i < len; ++i) {\n      array.push('(' + extract$1.linestring.apply(this$1, [polygon$1._holes[i]]) + ')');\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return an array of polygon arrays from a multipolygon.\n   *\n   * @param {MultiPolygon} multipolygon\n   * @return {String} An array of polygon arrays representing the multipolygon.\n   */\n  multipolygon: function multipolygon (multipolygon$1) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0, len = multipolygon$1._geometries.length; i < len; ++i) {\n      array.push('(' + extract$1.polygon.apply(this$1, [multipolygon$1._geometries[i]]) + ')');\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return the WKT portion between 'GEOMETRYCOLLECTION(' and ')' for an\n   * geometrycollection.\n   *\n   * @param {GeometryCollection} collection\n   * @return {String} internal WKT representation of the collection.\n   */\n  geometrycollection: function geometrycollection (collection) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0, len = collection._geometries.length; i < len; ++i) {\n      array.push(this$1.extractGeometry(collection._geometries[i]));\n    }\n    return array.join(',')\n  }\n};\n\n/**\n * Object with properties corresponding to the geometry types. Property values\n * are functions that do the actual parsing.\n * @private\n */\nvar parse$1 = {\n  /**\n   * Return point geometry given a point WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the point.\n   * @return {Point} A point geometry.\n   * @private\n   */\n  point: function point (str) {\n    if (str === undefined) {\n      return this.geometryFactory.createPoint()\n    }\n\n    var coords = str.trim().split(regExes.spaces);\n    return this.geometryFactory.createPoint(new Coordinate(Number.parseFloat(coords[0]),\n      Number.parseFloat(coords[1])))\n  },\n\n  /**\n   * Return a multipoint geometry given a multipoint WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the multipoint.\n   * @return {Point} A multipoint feature.\n   * @private\n   */\n  multipoint: function multipoint (str) {\n    var this$1 = this;\n\n    if (str === undefined) {\n      return this.geometryFactory.createMultiPoint()\n    }\n\n    var point;\n    var points = str.trim().split(',');\n    var components = [];\n    for (var i = 0, len = points.length; i < len; ++i) {\n      point = points[i].replace(regExes.trimParens, '$1');\n      components.push(parse$1.point.apply(this$1, [point]));\n    }\n    return this.geometryFactory.createMultiPoint(components)\n  },\n\n  /**\n   * Return a linestring geometry given a linestring WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the linestring.\n   * @return {LineString} A linestring geometry.\n   * @private\n   */\n  linestring: function linestring (str) {\n    if (str === undefined) {\n      return this.geometryFactory.createLineString()\n    }\n\n    var points = str.trim().split(',');\n    var components = [];\n    var coords;\n    for (var i = 0, len = points.length; i < len; ++i) {\n      coords = points[i].trim().split(regExes.spaces);\n      components.push(new Coordinate(Number.parseFloat(coords[0]), Number.parseFloat(coords[1])));\n    }\n    return this.geometryFactory.createLineString(components)\n  },\n\n  /**\n   * Return a linearring geometry given a linearring WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the linearring.\n   * @return {LinearRing} A linearring geometry.\n   * @private\n   */\n  linearring: function linearring (str) {\n    if (str === undefined) {\n      return this.geometryFactory.createLinearRing()\n    }\n\n    var points = str.trim().split(',');\n    var components = [];\n    var coords;\n    for (var i = 0, len = points.length; i < len; ++i) {\n      coords = points[i].trim().split(regExes.spaces);\n      components.push(new Coordinate(Number.parseFloat(coords[0]), Number.parseFloat(coords[1])));\n    }\n    return this.geometryFactory.createLinearRing(components)\n  },\n\n  /**\n   * Return a multilinestring geometry given a multilinestring WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the multilinestring.\n   * @return {MultiLineString} A multilinestring geometry.\n   * @private\n   */\n  multilinestring: function multilinestring (str) {\n    var this$1 = this;\n\n    if (str === undefined) {\n      return this.geometryFactory.createMultiLineString()\n    }\n\n    var line;\n    var lines = str.trim().split(regExes.parenComma);\n    var components = [];\n    for (var i = 0, len = lines.length; i < len; ++i) {\n      line = lines[i].replace(regExes.trimParens, '$1');\n      components.push(parse$1.linestring.apply(this$1, [line]));\n    }\n    return this.geometryFactory.createMultiLineString(components)\n  },\n\n  /**\n   * Return a polygon geometry given a polygon WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the polygon.\n   * @return {Polygon} A polygon geometry.\n   * @private\n   */\n  polygon: function polygon (str) {\n    var this$1 = this;\n\n    if (str === undefined) {\n      return this.geometryFactory.createPolygon()\n    }\n\n    var ring, linestring, linearring;\n    var rings = str.trim().split(regExes.parenComma);\n    var shell;\n    var holes = [];\n    for (var i = 0, len = rings.length; i < len; ++i) {\n      ring = rings[i].replace(regExes.trimParens, '$1');\n      linestring = parse$1.linestring.apply(this$1, [ring]);\n      linearring = this$1.geometryFactory.createLinearRing(linestring._points);\n      if (i === 0) {\n        shell = linearring;\n      } else {\n        holes.push(linearring);\n      }\n    }\n    return this.geometryFactory.createPolygon(shell, holes)\n  },\n\n  /**\n   * Return a multipolygon geometry given a multipolygon WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the multipolygon.\n   * @return {MultiPolygon} A multipolygon geometry.\n   * @private\n   */\n  multipolygon: function multipolygon (str) {\n    var this$1 = this;\n\n    if (str === undefined) {\n      return this.geometryFactory.createMultiPolygon()\n    }\n\n    var polygon;\n    var polygons = str.trim().split(regExes.doubleParenComma);\n    var components = [];\n    for (var i = 0, len = polygons.length; i < len; ++i) {\n      polygon = polygons[i].replace(regExes.trimParens, '$1');\n      components.push(parse$1.polygon.apply(this$1, [polygon]));\n    }\n    return this.geometryFactory.createMultiPolygon(components)\n  },\n\n  /**\n   * Return a geometrycollection given a geometrycollection WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the geometrycollection.\n   * @return {GeometryCollection}\n   * @private\n   */\n  geometrycollection: function geometrycollection (str) {\n    var this$1 = this;\n\n    if (str === undefined) {\n      return this.geometryFactory.createGeometryCollection()\n    }\n\n    // separate components of the collection with |\n    str = str.replace(/,\\s*([A-Za-z])/g, '|$1');\n    var wktArray = str.trim().split('|');\n    var components = [];\n    for (var i = 0, len = wktArray.length; i < len; ++i) {\n      components.push(this$1.read(wktArray[i]));\n    }\n    return this.geometryFactory.createGeometryCollection(components)\n  }\n};\n\n/**\n * Writes the Well-Known Text representation of a {@link Geometry}. The\n * Well-Known Text format is defined in the <A\n * HREF=\"http://www.opengis.org/techno/specs.htm\"> OGC Simple Features\n * Specification for SQL</A>.\n * <p>\n * The <code>WKTWriter</code> outputs coordinates rounded to the precision\n * model. Only the maximum number of decimal places necessary to represent the\n * ordinates to the required precision will be output.\n * <p>\n * The SFS WKT spec does not define a special tag for {@link LinearRing}s.\n * Under the spec, rings are output as <code>LINESTRING</code>s.\n */\n\n/**\n * @param {GeometryFactory} geometryFactory\n * @constructor\n */\nvar WKTWriter = function WKTWriter (geometryFactory) {\n  this.parser = new WKTParser(geometryFactory);\n};\n\n/**\n * Converts a <code>Geometry</code> to its Well-known Text representation.\n *\n * @param {Geometry} geometry a <code>Geometry</code> to process.\n * @return {string} a <Geometry Tagged Text> string (see the OpenGIS Simple\n *       Features Specification).\n * @memberof WKTWriter\n */\nWKTWriter.prototype.write = function write (geometry) {\n  return this.parser.write(geometry)\n};\n/**\n * Generates the WKT for a <tt>LINESTRING</tt> specified by two\n * {@link Coordinate}s.\n *\n * @param p0 the first coordinate.\n * @param p1 the second coordinate.\n *\n * @return the WKT.\n * @private\n */\nWKTWriter.toLineString = function toLineString (p0, p1) {\n  if (arguments.length !== 2) {\n    throw new Error('Not implemented')\n  }\n  return 'LINESTRING ( ' + p0.x + ' ' + p0.y + ', ' + p1.x + ' ' + p1.y + ' )'\n};\n\nvar RuntimeException = (function (Error) {\n  function RuntimeException (message) {\n    Error.call(this, message);\n    this.name = 'RuntimeException';\n    this.message = message;\n    this.stack = (new Error()).stack;\n  }\n\n  if ( Error ) RuntimeException.__proto__ = Error;\n  RuntimeException.prototype = Object.create( Error && Error.prototype );\n  RuntimeException.prototype.constructor = RuntimeException;\n\n  return RuntimeException;\n}(Error));\n\nvar AssertionFailedException = (function (RuntimeException$$1) {\n  function AssertionFailedException () {\n    RuntimeException$$1.call(this);\n    if (arguments.length === 0) {\n      RuntimeException$$1.call(this);\n    } else if (arguments.length === 1) {\n      var message = arguments[0];\n      RuntimeException$$1.call(this, message);\n    }\n  }\n\n  if ( RuntimeException$$1 ) AssertionFailedException.__proto__ = RuntimeException$$1;\n  AssertionFailedException.prototype = Object.create( RuntimeException$$1 && RuntimeException$$1.prototype );\n  AssertionFailedException.prototype.constructor = AssertionFailedException;\n  AssertionFailedException.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  AssertionFailedException.prototype.getClass = function getClass () {\n    return AssertionFailedException\n  };\n\n  return AssertionFailedException;\n}(RuntimeException));\n\nvar Assert = function Assert () {};\n\nAssert.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nAssert.prototype.getClass = function getClass () {\n  return Assert\n};\nAssert.shouldNeverReachHere = function shouldNeverReachHere () {\n  if (arguments.length === 0) {\n    Assert.shouldNeverReachHere(null);\n  } else if (arguments.length === 1) {\n    var message = arguments[0];\n    throw new AssertionFailedException('Should never reach here' + (message !== null ? ': ' + message : ''))\n  }\n};\nAssert.isTrue = function isTrue () {\n  var assertion;\n  var message;\n  if (arguments.length === 1) {\n    assertion = arguments[0];\n    Assert.isTrue(assertion, null);\n  } else if (arguments.length === 2) {\n    assertion = arguments[0];\n    message = arguments[1];\n    if (!assertion) {\n      if (message === null) {\n        throw new AssertionFailedException()\n      } else {\n        throw new AssertionFailedException(message)\n      }\n    }\n  }\n};\nAssert.equals = function equals () {\n  var expectedValue;\n  var actualValue;\n  var message;\n  if (arguments.length === 2) {\n    expectedValue = arguments[0];\n    actualValue = arguments[1];\n    Assert.equals(expectedValue, actualValue, null);\n  } else if (arguments.length === 3) {\n    expectedValue = arguments[0];\n    actualValue = arguments[1];\n    message = arguments[2];\n    if (!actualValue.equals(expectedValue)) {\n      throw new AssertionFailedException('Expected ' + expectedValue + ' but encountered ' + actualValue + (message !== null ? ': ' + message : ''))\n    }\n  }\n};\n\nvar LineIntersector = function LineIntersector () {\n  this._result = null;\n  this._inputLines = Array(2).fill().map(function () { return Array(2); });\n  this._intPt = new Array(2).fill(null);\n  this._intLineIndex = null;\n  this._isProper = null;\n  this._pa = null;\n  this._pb = null;\n  this._precisionModel = null;\n  this._intPt[0] = new Coordinate();\n  this._intPt[1] = new Coordinate();\n  this._pa = this._intPt[0];\n  this._pb = this._intPt[1];\n  this._result = 0;\n};\n\nvar staticAccessors$10 = { DONT_INTERSECT: { configurable: true },DO_INTERSECT: { configurable: true },COLLINEAR: { configurable: true },NO_INTERSECTION: { configurable: true },POINT_INTERSECTION: { configurable: true },COLLINEAR_INTERSECTION: { configurable: true } };\nLineIntersector.prototype.getIndexAlongSegment = function getIndexAlongSegment (segmentIndex, intIndex) {\n  this.computeIntLineIndex();\n  return this._intLineIndex[segmentIndex][intIndex]\n};\nLineIntersector.prototype.getTopologySummary = function getTopologySummary () {\n  var catBuf = new StringBuffer();\n  if (this.isEndPoint()) { catBuf.append(' endpoint'); }\n  if (this._isProper) { catBuf.append(' proper'); }\n  if (this.isCollinear()) { catBuf.append(' collinear'); }\n  return catBuf.toString()\n};\nLineIntersector.prototype.computeIntersection = function computeIntersection (p1, p2, p3, p4) {\n  this._inputLines[0][0] = p1;\n  this._inputLines[0][1] = p2;\n  this._inputLines[1][0] = p3;\n  this._inputLines[1][1] = p4;\n  this._result = this.computeIntersect(p1, p2, p3, p4);\n};\nLineIntersector.prototype.getIntersectionNum = function getIntersectionNum () {\n  return this._result\n};\nLineIntersector.prototype.computeIntLineIndex = function computeIntLineIndex () {\n  if (arguments.length === 0) {\n    if (this._intLineIndex === null) {\n      this._intLineIndex = Array(2).fill().map(function () { return Array(2); });\n      this.computeIntLineIndex(0);\n      this.computeIntLineIndex(1);\n    }\n  } else if (arguments.length === 1) {\n    var segmentIndex = arguments[0];\n    var dist0 = this.getEdgeDistance(segmentIndex, 0);\n    var dist1 = this.getEdgeDistance(segmentIndex, 1);\n    if (dist0 > dist1) {\n      this._intLineIndex[segmentIndex][0] = 0;\n      this._intLineIndex[segmentIndex][1] = 1;\n    } else {\n      this._intLineIndex[segmentIndex][0] = 1;\n      this._intLineIndex[segmentIndex][1] = 0;\n    }\n  }\n};\nLineIntersector.prototype.isProper = function isProper () {\n  return this.hasIntersection() && this._isProper\n};\nLineIntersector.prototype.setPrecisionModel = function setPrecisionModel (precisionModel) {\n  this._precisionModel = precisionModel;\n};\nLineIntersector.prototype.isInteriorIntersection = function isInteriorIntersection () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    if (this.isInteriorIntersection(0)) { return true }\n    if (this.isInteriorIntersection(1)) { return true }\n    return false\n  } else if (arguments.length === 1) {\n    var inputLineIndex = arguments[0];\n    for (var i = 0; i < this._result; i++) {\n      if (!(this$1._intPt[i].equals2D(this$1._inputLines[inputLineIndex][0]) || this$1._intPt[i].equals2D(this$1._inputLines[inputLineIndex][1]))) {\n        return true\n      }\n    }\n    return false\n  }\n};\nLineIntersector.prototype.getIntersection = function getIntersection (intIndex) {\n  return this._intPt[intIndex]\n};\nLineIntersector.prototype.isEndPoint = function isEndPoint () {\n  return this.hasIntersection() && !this._isProper\n};\nLineIntersector.prototype.hasIntersection = function hasIntersection () {\n  return this._result !== LineIntersector.NO_INTERSECTION\n};\nLineIntersector.prototype.getEdgeDistance = function getEdgeDistance (segmentIndex, intIndex) {\n  var dist = LineIntersector.computeEdgeDistance(this._intPt[intIndex], this._inputLines[segmentIndex][0], this._inputLines[segmentIndex][1]);\n  return dist\n};\nLineIntersector.prototype.isCollinear = function isCollinear () {\n  return this._result === LineIntersector.COLLINEAR_INTERSECTION\n};\nLineIntersector.prototype.toString = function toString () {\n  return WKTWriter.toLineString(this._inputLines[0][0], this._inputLines[0][1]) + ' - ' + WKTWriter.toLineString(this._inputLines[1][0], this._inputLines[1][1]) + this.getTopologySummary()\n};\nLineIntersector.prototype.getEndpoint = function getEndpoint (segmentIndex, ptIndex) {\n  return this._inputLines[segmentIndex][ptIndex]\n};\nLineIntersector.prototype.isIntersection = function isIntersection (pt) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._result; i++) {\n    if (this$1._intPt[i].equals2D(pt)) {\n      return true\n    }\n  }\n  return false\n};\nLineIntersector.prototype.getIntersectionAlongSegment = function getIntersectionAlongSegment (segmentIndex, intIndex) {\n  this.computeIntLineIndex();\n  return this._intPt[this._intLineIndex[segmentIndex][intIndex]]\n};\nLineIntersector.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nLineIntersector.prototype.getClass = function getClass () {\n  return LineIntersector\n};\nLineIntersector.computeEdgeDistance = function computeEdgeDistance (p, p0, p1) {\n  var dx = Math.abs(p1.x - p0.x);\n  var dy = Math.abs(p1.y - p0.y);\n  var dist = -1.0;\n  if (p.equals(p0)) {\n    dist = 0.0;\n  } else if (p.equals(p1)) {\n    if (dx > dy) { dist = dx; } else { dist = dy; }\n  } else {\n    var pdx = Math.abs(p.x - p0.x);\n    var pdy = Math.abs(p.y - p0.y);\n    if (dx > dy) { dist = pdx; } else { dist = pdy; }\n    if (dist === 0.0 && !p.equals(p0)) {\n      dist = Math.max(pdx, pdy);\n    }\n  }\n  Assert.isTrue(!(dist === 0.0 && !p.equals(p0)), 'Bad distance calculation');\n  return dist\n};\nLineIntersector.nonRobustComputeEdgeDistance = function nonRobustComputeEdgeDistance (p, p1, p2) {\n  var dx = p.x - p1.x;\n  var dy = p.y - p1.y;\n  var dist = Math.sqrt(dx * dx + dy * dy);\n  Assert.isTrue(!(dist === 0.0 && !p.equals(p1)), 'Invalid distance calculation');\n  return dist\n};\nstaticAccessors$10.DONT_INTERSECT.get = function () { return 0 };\nstaticAccessors$10.DO_INTERSECT.get = function () { return 1 };\nstaticAccessors$10.COLLINEAR.get = function () { return 2 };\nstaticAccessors$10.NO_INTERSECTION.get = function () { return 0 };\nstaticAccessors$10.POINT_INTERSECTION.get = function () { return 1 };\nstaticAccessors$10.COLLINEAR_INTERSECTION.get = function () { return 2 };\n\nObject.defineProperties( LineIntersector, staticAccessors$10 );\n\nvar RobustLineIntersector = (function (LineIntersector$$1) {\n  function RobustLineIntersector () {\n    LineIntersector$$1.apply(this, arguments);\n  }\n\n  if ( LineIntersector$$1 ) RobustLineIntersector.__proto__ = LineIntersector$$1;\n  RobustLineIntersector.prototype = Object.create( LineIntersector$$1 && LineIntersector$$1.prototype );\n  RobustLineIntersector.prototype.constructor = RobustLineIntersector;\n\n  RobustLineIntersector.prototype.isInSegmentEnvelopes = function isInSegmentEnvelopes (intPt) {\n    var env0 = new Envelope(this._inputLines[0][0], this._inputLines[0][1]);\n    var env1 = new Envelope(this._inputLines[1][0], this._inputLines[1][1]);\n    return env0.contains(intPt) && env1.contains(intPt)\n  };\n  RobustLineIntersector.prototype.computeIntersection = function computeIntersection () {\n    if (arguments.length === 3) {\n      var p = arguments[0];\n      var p1 = arguments[1];\n      var p2 = arguments[2];\n      this._isProper = false;\n      if (Envelope.intersects(p1, p2, p)) {\n        if (CGAlgorithms.orientationIndex(p1, p2, p) === 0 && CGAlgorithms.orientationIndex(p2, p1, p) === 0) {\n          this._isProper = true;\n          if (p.equals(p1) || p.equals(p2)) {\n            this._isProper = false;\n          }\n          this._result = LineIntersector$$1.POINT_INTERSECTION;\n          return null\n        }\n      }\n      this._result = LineIntersector$$1.NO_INTERSECTION;\n    } else { return LineIntersector$$1.prototype.computeIntersection.apply(this, arguments) }\n  };\n  RobustLineIntersector.prototype.normalizeToMinimum = function normalizeToMinimum (n1, n2, n3, n4, normPt) {\n    normPt.x = this.smallestInAbsValue(n1.x, n2.x, n3.x, n4.x);\n    normPt.y = this.smallestInAbsValue(n1.y, n2.y, n3.y, n4.y);\n    n1.x -= normPt.x;\n    n1.y -= normPt.y;\n    n2.x -= normPt.x;\n    n2.y -= normPt.y;\n    n3.x -= normPt.x;\n    n3.y -= normPt.y;\n    n4.x -= normPt.x;\n    n4.y -= normPt.y;\n  };\n  RobustLineIntersector.prototype.safeHCoordinateIntersection = function safeHCoordinateIntersection (p1, p2, q1, q2) {\n    var intPt = null;\n    try {\n      intPt = HCoordinate.intersection(p1, p2, q1, q2);\n    } catch (e) {\n      if (e instanceof NotRepresentableException) {\n        intPt = RobustLineIntersector.nearestEndpoint(p1, p2, q1, q2);\n      } else { throw e }\n    } finally {}\n    return intPt\n  };\n  RobustLineIntersector.prototype.intersection = function intersection (p1, p2, q1, q2) {\n    var intPt = this.intersectionWithNormalization(p1, p2, q1, q2);\n    if (!this.isInSegmentEnvelopes(intPt)) {\n      intPt = new Coordinate(RobustLineIntersector.nearestEndpoint(p1, p2, q1, q2));\n    }\n    if (this._precisionModel !== null) {\n      this._precisionModel.makePrecise(intPt);\n    }\n    return intPt\n  };\n  RobustLineIntersector.prototype.smallestInAbsValue = function smallestInAbsValue (x1, x2, x3, x4) {\n    var x = x1;\n    var xabs = Math.abs(x);\n    if (Math.abs(x2) < xabs) {\n      x = x2;\n      xabs = Math.abs(x2);\n    }\n    if (Math.abs(x3) < xabs) {\n      x = x3;\n      xabs = Math.abs(x3);\n    }\n    if (Math.abs(x4) < xabs) {\n      x = x4;\n    }\n    return x\n  };\n  RobustLineIntersector.prototype.checkDD = function checkDD (p1, p2, q1, q2, intPt) {\n    var intPtDD = CGAlgorithmsDD.intersection(p1, p2, q1, q2);\n    var isIn = this.isInSegmentEnvelopes(intPtDD);\n    System.out.println('DD in env = ' + isIn + '  --------------------- ' + intPtDD);\n    if (intPt.distance(intPtDD) > 0.0001) {\n      System.out.println('Distance = ' + intPt.distance(intPtDD));\n    }\n  };\n  RobustLineIntersector.prototype.intersectionWithNormalization = function intersectionWithNormalization (p1, p2, q1, q2) {\n    var n1 = new Coordinate(p1);\n    var n2 = new Coordinate(p2);\n    var n3 = new Coordinate(q1);\n    var n4 = new Coordinate(q2);\n    var normPt = new Coordinate();\n    this.normalizeToEnvCentre(n1, n2, n3, n4, normPt);\n    var intPt = this.safeHCoordinateIntersection(n1, n2, n3, n4);\n    intPt.x += normPt.x;\n    intPt.y += normPt.y;\n    return intPt\n  };\n  RobustLineIntersector.prototype.computeCollinearIntersection = function computeCollinearIntersection (p1, p2, q1, q2) {\n    var p1q1p2 = Envelope.intersects(p1, p2, q1);\n    var p1q2p2 = Envelope.intersects(p1, p2, q2);\n    var q1p1q2 = Envelope.intersects(q1, q2, p1);\n    var q1p2q2 = Envelope.intersects(q1, q2, p2);\n    if (p1q1p2 && p1q2p2) {\n      this._intPt[0] = q1;\n      this._intPt[1] = q2;\n      return LineIntersector$$1.COLLINEAR_INTERSECTION\n    }\n    if (q1p1q2 && q1p2q2) {\n      this._intPt[0] = p1;\n      this._intPt[1] = p2;\n      return LineIntersector$$1.COLLINEAR_INTERSECTION\n    }\n    if (p1q1p2 && q1p1q2) {\n      this._intPt[0] = q1;\n      this._intPt[1] = p1;\n      return q1.equals(p1) && !p1q2p2 && !q1p2q2 ? LineIntersector$$1.POINT_INTERSECTION : LineIntersector$$1.COLLINEAR_INTERSECTION\n    }\n    if (p1q1p2 && q1p2q2) {\n      this._intPt[0] = q1;\n      this._intPt[1] = p2;\n      return q1.equals(p2) && !p1q2p2 && !q1p1q2 ? LineIntersector$$1.POINT_INTERSECTION : LineIntersector$$1.COLLINEAR_INTERSECTION\n    }\n    if (p1q2p2 && q1p1q2) {\n      this._intPt[0] = q2;\n      this._intPt[1] = p1;\n      return q2.equals(p1) && !p1q1p2 && !q1p2q2 ? LineIntersector$$1.POINT_INTERSECTION : LineIntersector$$1.COLLINEAR_INTERSECTION\n    }\n    if (p1q2p2 && q1p2q2) {\n      this._intPt[0] = q2;\n      this._intPt[1] = p2;\n      return q2.equals(p2) && !p1q1p2 && !q1p1q2 ? LineIntersector$$1.POINT_INTERSECTION : LineIntersector$$1.COLLINEAR_INTERSECTION\n    }\n    return LineIntersector$$1.NO_INTERSECTION\n  };\n  RobustLineIntersector.prototype.normalizeToEnvCentre = function normalizeToEnvCentre (n00, n01, n10, n11, normPt) {\n    var minX0 = n00.x < n01.x ? n00.x : n01.x;\n    var minY0 = n00.y < n01.y ? n00.y : n01.y;\n    var maxX0 = n00.x > n01.x ? n00.x : n01.x;\n    var maxY0 = n00.y > n01.y ? n00.y : n01.y;\n    var minX1 = n10.x < n11.x ? n10.x : n11.x;\n    var minY1 = n10.y < n11.y ? n10.y : n11.y;\n    var maxX1 = n10.x > n11.x ? n10.x : n11.x;\n    var maxY1 = n10.y > n11.y ? n10.y : n11.y;\n    var intMinX = minX0 > minX1 ? minX0 : minX1;\n    var intMaxX = maxX0 < maxX1 ? maxX0 : maxX1;\n    var intMinY = minY0 > minY1 ? minY0 : minY1;\n    var intMaxY = maxY0 < maxY1 ? maxY0 : maxY1;\n    var intMidX = (intMinX + intMaxX) / 2.0;\n    var intMidY = (intMinY + intMaxY) / 2.0;\n    normPt.x = intMidX;\n    normPt.y = intMidY;\n    n00.x -= normPt.x;\n    n00.y -= normPt.y;\n    n01.x -= normPt.x;\n    n01.y -= normPt.y;\n    n10.x -= normPt.x;\n    n10.y -= normPt.y;\n    n11.x -= normPt.x;\n    n11.y -= normPt.y;\n  };\n  RobustLineIntersector.prototype.computeIntersect = function computeIntersect (p1, p2, q1, q2) {\n    this._isProper = false;\n    if (!Envelope.intersects(p1, p2, q1, q2)) { return LineIntersector$$1.NO_INTERSECTION }\n    var Pq1 = CGAlgorithms.orientationIndex(p1, p2, q1);\n    var Pq2 = CGAlgorithms.orientationIndex(p1, p2, q2);\n    if ((Pq1 > 0 && Pq2 > 0) || (Pq1 < 0 && Pq2 < 0)) {\n      return LineIntersector$$1.NO_INTERSECTION\n    }\n    var Qp1 = CGAlgorithms.orientationIndex(q1, q2, p1);\n    var Qp2 = CGAlgorithms.orientationIndex(q1, q2, p2);\n    if ((Qp1 > 0 && Qp2 > 0) || (Qp1 < 0 && Qp2 < 0)) {\n      return LineIntersector$$1.NO_INTERSECTION\n    }\n    var collinear = Pq1 === 0 && Pq2 === 0 && Qp1 === 0 && Qp2 === 0;\n    if (collinear) {\n      return this.computeCollinearIntersection(p1, p2, q1, q2)\n    }\n    if (Pq1 === 0 || Pq2 === 0 || Qp1 === 0 || Qp2 === 0) {\n      this._isProper = false;\n      if (p1.equals2D(q1) || p1.equals2D(q2)) {\n        this._intPt[0] = p1;\n      } else if (p2.equals2D(q1) || p2.equals2D(q2)) {\n        this._intPt[0] = p2;\n      } else if (Pq1 === 0) {\n        this._intPt[0] = new Coordinate(q1);\n      } else if (Pq2 === 0) {\n        this._intPt[0] = new Coordinate(q2);\n      } else if (Qp1 === 0) {\n        this._intPt[0] = new Coordinate(p1);\n      } else if (Qp2 === 0) {\n        this._intPt[0] = new Coordinate(p2);\n      }\n    } else {\n      this._isProper = true;\n      this._intPt[0] = this.intersection(p1, p2, q1, q2);\n    }\n    return LineIntersector$$1.POINT_INTERSECTION\n  };\n  RobustLineIntersector.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  RobustLineIntersector.prototype.getClass = function getClass () {\n    return RobustLineIntersector\n  };\n  RobustLineIntersector.nearestEndpoint = function nearestEndpoint (p1, p2, q1, q2) {\n    var nearestPt = p1;\n    var minDist = CGAlgorithms.distancePointLine(p1, q1, q2);\n    var dist = CGAlgorithms.distancePointLine(p2, q1, q2);\n    if (dist < minDist) {\n      minDist = dist;\n      nearestPt = p2;\n    }\n    dist = CGAlgorithms.distancePointLine(q1, p1, p2);\n    if (dist < minDist) {\n      minDist = dist;\n      nearestPt = q1;\n    }\n    dist = CGAlgorithms.distancePointLine(q2, p1, p2);\n    if (dist < minDist) {\n      minDist = dist;\n      nearestPt = q2;\n    }\n    return nearestPt\n  };\n\n  return RobustLineIntersector;\n}(LineIntersector));\n\nvar RobustDeterminant = function RobustDeterminant () {};\n\nRobustDeterminant.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nRobustDeterminant.prototype.getClass = function getClass () {\n  return RobustDeterminant\n};\nRobustDeterminant.orientationIndex = function orientationIndex (p1, p2, q) {\n  var dx1 = p2.x - p1.x;\n  var dy1 = p2.y - p1.y;\n  var dx2 = q.x - p2.x;\n  var dy2 = q.y - p2.y;\n  return RobustDeterminant.signOfDet2x2(dx1, dy1, dx2, dy2)\n};\nRobustDeterminant.signOfDet2x2 = function signOfDet2x2 (x1, y1, x2, y2) {\n  var sign = null;\n  var swap = null;\n  var k = null;\n  sign = 1;\n  if (x1 === 0.0 || y2 === 0.0) {\n    if (y1 === 0.0 || x2 === 0.0) {\n      return 0\n    } else if (y1 > 0) {\n      if (x2 > 0) {\n        return -sign\n      } else {\n        return sign\n      }\n    } else {\n      if (x2 > 0) {\n        return sign\n      } else {\n        return -sign\n      }\n    }\n  }\n  if (y1 === 0.0 || x2 === 0.0) {\n    if (y2 > 0) {\n      if (x1 > 0) {\n        return sign\n      } else {\n        return -sign\n      }\n    } else {\n      if (x1 > 0) {\n        return -sign\n      } else {\n        return sign\n      }\n    }\n  }\n  if (y1 > 0.0) {\n    if (y2 > 0.0) {\n      if (y1 <= y2) {\n        \n      } else {\n        sign = -sign;\n        swap = x1;\n        x1 = x2;\n        x2 = swap;\n        swap = y1;\n        y1 = y2;\n        y2 = swap;\n      }\n    } else {\n      if (y1 <= -y2) {\n        sign = -sign;\n        x2 = -x2;\n        y2 = -y2;\n      } else {\n        swap = x1;\n        x1 = -x2;\n        x2 = swap;\n        swap = y1;\n        y1 = -y2;\n        y2 = swap;\n      }\n    }\n  } else {\n    if (y2 > 0.0) {\n      if (-y1 <= y2) {\n        sign = -sign;\n        x1 = -x1;\n        y1 = -y1;\n      } else {\n        swap = -x1;\n        x1 = x2;\n        x2 = swap;\n        swap = -y1;\n        y1 = y2;\n        y2 = swap;\n      }\n    } else {\n      if (y1 >= y2) {\n        x1 = -x1;\n        y1 = -y1;\n        x2 = -x2;\n        y2 = -y2;\n      } else {\n        sign = -sign;\n        swap = -x1;\n        x1 = -x2;\n        x2 = swap;\n        swap = -y1;\n        y1 = -y2;\n        y2 = swap;\n      }\n    }\n  }\n  if (x1 > 0.0) {\n    if (x2 > 0.0) {\n      if (x1 <= x2) {\n        \n      } else {\n        return sign\n      }\n    } else {\n      return sign\n    }\n  } else {\n    if (x2 > 0.0) {\n      return -sign\n    } else {\n      if (x1 >= x2) {\n        sign = -sign;\n        x1 = -x1;\n        x2 = -x2;\n      } else {\n        return -sign\n      }\n    }\n  }\n  while (true) {\n    k = Math.floor(x2 / x1);\n    x2 = x2 - k * x1;\n    y2 = y2 - k * y1;\n    if (y2 < 0.0) {\n      return -sign\n    }\n    if (y2 > y1) {\n      return sign\n    }\n    if (x1 > x2 + x2) {\n      if (y1 < y2 + y2) {\n        return sign\n      }\n    } else {\n      if (y1 > y2 + y2) {\n        return -sign\n      } else {\n        x2 = x1 - x2;\n        y2 = y1 - y2;\n        sign = -sign;\n      }\n    }\n    if (y2 === 0.0) {\n      if (x2 === 0.0) {\n        return 0\n      } else {\n        return -sign\n      }\n    }\n    if (x2 === 0.0) {\n      return sign\n    }\n    k = Math.floor(x1 / x2);\n    x1 = x1 - k * x2;\n    y1 = y1 - k * y2;\n    if (y1 < 0.0) {\n      return sign\n    }\n    if (y1 > y2) {\n      return -sign\n    }\n    if (x2 > x1 + x1) {\n      if (y2 < y1 + y1) {\n        return -sign\n      }\n    } else {\n      if (y2 > y1 + y1) {\n        return sign\n      } else {\n        x1 = x2 - x1;\n        y1 = y2 - y1;\n        sign = -sign;\n      }\n    }\n    if (y1 === 0.0) {\n      if (x1 === 0.0) {\n        return 0\n      } else {\n        return sign\n      }\n    }\n    if (x1 === 0.0) {\n      return -sign\n    }\n  }\n};\n\nvar RayCrossingCounter = function RayCrossingCounter () {\n  this._p = null;\n  this._crossingCount = 0;\n  this._isPointOnSegment = false;\n  var p = arguments[0];\n  this._p = p;\n};\nRayCrossingCounter.prototype.countSegment = function countSegment (p1, p2) {\n  if (p1.x < this._p.x && p2.x < this._p.x) { return null }\n  if (this._p.x === p2.x && this._p.y === p2.y) {\n    this._isPointOnSegment = true;\n    return null\n  }\n  if (p1.y === this._p.y && p2.y === this._p.y) {\n    var minx = p1.x;\n    var maxx = p2.x;\n    if (minx > maxx) {\n      minx = p2.x;\n      maxx = p1.x;\n    }\n    if (this._p.x >= minx && this._p.x <= maxx) {\n      this._isPointOnSegment = true;\n    }\n    return null\n  }\n  if ((p1.y > this._p.y && p2.y <= this._p.y) || (p2.y > this._p.y && p1.y <= this._p.y)) {\n    var x1 = p1.x - this._p.x;\n    var y1 = p1.y - this._p.y;\n    var x2 = p2.x - this._p.x;\n    var y2 = p2.y - this._p.y;\n    var xIntSign = RobustDeterminant.signOfDet2x2(x1, y1, x2, y2);\n    if (xIntSign === 0.0) {\n      this._isPointOnSegment = true;\n      return null\n    }\n    if (y2 < y1) { xIntSign = -xIntSign; }\n    if (xIntSign > 0.0) {\n      this._crossingCount++;\n    }\n  }\n};\nRayCrossingCounter.prototype.isPointInPolygon = function isPointInPolygon () {\n  return this.getLocation() !== Location.EXTERIOR\n};\nRayCrossingCounter.prototype.getLocation = function getLocation () {\n  if (this._isPointOnSegment) { return Location.BOUNDARY }\n  if (this._crossingCount % 2 === 1) {\n    return Location.INTERIOR\n  }\n  return Location.EXTERIOR\n};\nRayCrossingCounter.prototype.isOnSegment = function isOnSegment () {\n  return this._isPointOnSegment\n};\nRayCrossingCounter.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nRayCrossingCounter.prototype.getClass = function getClass () {\n  return RayCrossingCounter\n};\nRayCrossingCounter.locatePointInRing = function locatePointInRing () {\n  if (arguments[0] instanceof Coordinate && hasInterface(arguments[1], CoordinateSequence)) {\n    var p = arguments[0];\n    var ring = arguments[1];\n    var counter = new RayCrossingCounter(p);\n    var p1 = new Coordinate();\n    var p2 = new Coordinate();\n    for (var i = 1; i < ring.size(); i++) {\n      ring.getCoordinate(i, p1);\n      ring.getCoordinate(i - 1, p2);\n      counter.countSegment(p1, p2);\n      if (counter.isOnSegment()) { return counter.getLocation() }\n    }\n    return counter.getLocation()\n  } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Array) {\n    var p$1 = arguments[0];\n    var ring$1 = arguments[1];\n    var counter$1 = new RayCrossingCounter(p$1);\n    for (var i$1 = 1; i$1 < ring$1.length; i$1++) {\n      var p1$1 = ring$1[i$1];\n      var p2$1 = ring$1[i$1 - 1];\n      counter$1.countSegment(p1$1, p2$1);\n      if (counter$1.isOnSegment()) { return counter$1.getLocation() }\n    }\n    return counter$1.getLocation()\n  }\n};\n\nvar CGAlgorithms = function CGAlgorithms () {};\n\nvar staticAccessors$3 = { CLOCKWISE: { configurable: true },RIGHT: { configurable: true },COUNTERCLOCKWISE: { configurable: true },LEFT: { configurable: true },COLLINEAR: { configurable: true },STRAIGHT: { configurable: true } };\n\nCGAlgorithms.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCGAlgorithms.prototype.getClass = function getClass () {\n  return CGAlgorithms\n};\nCGAlgorithms.orientationIndex = function orientationIndex (p1, p2, q) {\n  return CGAlgorithmsDD.orientationIndex(p1, p2, q)\n};\nCGAlgorithms.signedArea = function signedArea () {\n  if (arguments[0] instanceof Array) {\n    var ring = arguments[0];\n    if (ring.length < 3) { return 0.0 }\n    var sum = 0.0;\n    var x0 = ring[0].x;\n    for (var i = 1; i < ring.length - 1; i++) {\n      var x = ring[i].x - x0;\n      var y1 = ring[i + 1].y;\n      var y2 = ring[i - 1].y;\n      sum += x * (y2 - y1);\n    }\n    return sum / 2.0\n  } else if (hasInterface(arguments[0], CoordinateSequence)) {\n    var ring$1 = arguments[0];\n    var n = ring$1.size();\n    if (n < 3) { return 0.0 }\n    var p0 = new Coordinate();\n    var p1 = new Coordinate();\n    var p2 = new Coordinate();\n    ring$1.getCoordinate(0, p1);\n    ring$1.getCoordinate(1, p2);\n    var x0$1 = p1.x;\n    p2.x -= x0$1;\n    var sum$1 = 0.0;\n    for (var i$1 = 1; i$1 < n - 1; i$1++) {\n      p0.y = p1.y;\n      p1.x = p2.x;\n      p1.y = p2.y;\n      ring$1.getCoordinate(i$1 + 1, p2);\n      p2.x -= x0$1;\n      sum$1 += p1.x * (p0.y - p2.y);\n    }\n    return sum$1 / 2.0\n  }\n};\nCGAlgorithms.distanceLineLine = function distanceLineLine (A, B, C, D) {\n  if (A.equals(B)) { return CGAlgorithms.distancePointLine(A, C, D) }\n  if (C.equals(D)) { return CGAlgorithms.distancePointLine(D, A, B) }\n  var noIntersection = false;\n  if (!Envelope.intersects(A, B, C, D)) {\n    noIntersection = true;\n  } else {\n    var denom = (B.x - A.x) * (D.y - C.y) - (B.y - A.y) * (D.x - C.x);\n    if (denom === 0) {\n      noIntersection = true;\n    } else {\n      var rNumb = (A.y - C.y) * (D.x - C.x) - (A.x - C.x) * (D.y - C.y);\n      var sNum = (A.y - C.y) * (B.x - A.x) - (A.x - C.x) * (B.y - A.y);\n      var s = sNum / denom;\n      var r = rNumb / denom;\n      if (r < 0 || r > 1 || s < 0 || s > 1) {\n        noIntersection = true;\n      }\n    }\n  }\n  if (noIntersection) {\n    return MathUtil.min(CGAlgorithms.distancePointLine(A, C, D), CGAlgorithms.distancePointLine(B, C, D), CGAlgorithms.distancePointLine(C, A, B), CGAlgorithms.distancePointLine(D, A, B))\n  }\n  return 0.0\n};\nCGAlgorithms.isPointInRing = function isPointInRing (p, ring) {\n  return CGAlgorithms.locatePointInRing(p, ring) !== Location.EXTERIOR\n};\nCGAlgorithms.computeLength = function computeLength (pts) {\n  var n = pts.size();\n  if (n <= 1) { return 0.0 }\n  var len = 0.0;\n  var p = new Coordinate();\n  pts.getCoordinate(0, p);\n  var x0 = p.x;\n  var y0 = p.y;\n  for (var i = 1; i < n; i++) {\n    pts.getCoordinate(i, p);\n    var x1 = p.x;\n    var y1 = p.y;\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    len += Math.sqrt(dx * dx + dy * dy);\n    x0 = x1;\n    y0 = y1;\n  }\n  return len\n};\nCGAlgorithms.isCCW = function isCCW (ring) {\n  var nPts = ring.length - 1;\n  if (nPts < 3) { throw new IllegalArgumentException('Ring has fewer than 4 points, so orientation cannot be determined') }\n  var hiPt = ring[0];\n  var hiIndex = 0;\n  for (var i = 1; i <= nPts; i++) {\n    var p = ring[i];\n    if (p.y > hiPt.y) {\n      hiPt = p;\n      hiIndex = i;\n    }\n  }\n  var iPrev = hiIndex;\n  do {\n    iPrev = iPrev - 1;\n    if (iPrev < 0) { iPrev = nPts; }\n  } while (ring[iPrev].equals2D(hiPt) && iPrev !== hiIndex)\n  var iNext = hiIndex;\n  do {\n    iNext = (iNext + 1) % nPts;\n  } while (ring[iNext].equals2D(hiPt) && iNext !== hiIndex)\n  var prev = ring[iPrev];\n  var next = ring[iNext];\n  if (prev.equals2D(hiPt) || next.equals2D(hiPt) || prev.equals2D(next)) { return false }\n  var disc = CGAlgorithms.computeOrientation(prev, hiPt, next);\n  var isCCW = false;\n  if (disc === 0) {\n    isCCW = prev.x > next.x;\n  } else {\n    isCCW = disc > 0;\n  }\n  return isCCW\n};\nCGAlgorithms.locatePointInRing = function locatePointInRing (p, ring) {\n  return RayCrossingCounter.locatePointInRing(p, ring)\n};\nCGAlgorithms.distancePointLinePerpendicular = function distancePointLinePerpendicular (p, A, B) {\n  var len2 = (B.x - A.x) * (B.x - A.x) + (B.y - A.y) * (B.y - A.y);\n  var s = ((A.y - p.y) * (B.x - A.x) - (A.x - p.x) * (B.y - A.y)) / len2;\n  return Math.abs(s) * Math.sqrt(len2)\n};\nCGAlgorithms.computeOrientation = function computeOrientation (p1, p2, q) {\n  return CGAlgorithms.orientationIndex(p1, p2, q)\n};\nCGAlgorithms.distancePointLine = function distancePointLine () {\n  if (arguments.length === 2) {\n    var p = arguments[0];\n    var line = arguments[1];\n    if (line.length === 0) { throw new IllegalArgumentException('Line array must contain at least one vertex') }\n    var minDistance = p.distance(line[0]);\n    for (var i = 0; i < line.length - 1; i++) {\n      var dist = CGAlgorithms.distancePointLine(p, line[i], line[i + 1]);\n      if (dist < minDistance) {\n        minDistance = dist;\n      }\n    }\n    return minDistance\n  } else if (arguments.length === 3) {\n    var p$1 = arguments[0];\n    var A = arguments[1];\n    var B = arguments[2];\n    if (A.x === B.x && A.y === B.y) { return p$1.distance(A) }\n    var len2 = (B.x - A.x) * (B.x - A.x) + (B.y - A.y) * (B.y - A.y);\n    var r = ((p$1.x - A.x) * (B.x - A.x) + (p$1.y - A.y) * (B.y - A.y)) / len2;\n    if (r <= 0.0) { return p$1.distance(A) }\n    if (r >= 1.0) { return p$1.distance(B) }\n    var s = ((A.y - p$1.y) * (B.x - A.x) - (A.x - p$1.x) * (B.y - A.y)) / len2;\n    return Math.abs(s) * Math.sqrt(len2)\n  }\n};\nCGAlgorithms.isOnLine = function isOnLine (p, pt) {\n  var lineIntersector = new RobustLineIntersector();\n  for (var i = 1; i < pt.length; i++) {\n    var p0 = pt[i - 1];\n    var p1 = pt[i];\n    lineIntersector.computeIntersection(p, p0, p1);\n    if (lineIntersector.hasIntersection()) {\n      return true\n    }\n  }\n  return false\n};\nstaticAccessors$3.CLOCKWISE.get = function () { return -1 };\nstaticAccessors$3.RIGHT.get = function () { return CGAlgorithms.CLOCKWISE };\nstaticAccessors$3.COUNTERCLOCKWISE.get = function () { return 1 };\nstaticAccessors$3.LEFT.get = function () { return CGAlgorithms.COUNTERCLOCKWISE };\nstaticAccessors$3.COLLINEAR.get = function () { return 0 };\nstaticAccessors$3.STRAIGHT.get = function () { return CGAlgorithms.COLLINEAR };\n\nObject.defineProperties( CGAlgorithms, staticAccessors$3 );\n\nvar GeometryComponentFilter = function GeometryComponentFilter () {};\n\nGeometryComponentFilter.prototype.filter = function filter (geom) {};\nGeometryComponentFilter.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryComponentFilter.prototype.getClass = function getClass () {\n  return GeometryComponentFilter\n};\n\nvar Geometry = function Geometry () {\n  var factory = arguments[0];\n\n  this._envelope = null;\n  this._factory = null;\n  this._SRID = null;\n  this._userData = null;\n  this._factory = factory;\n  this._SRID = factory.getSRID();\n};\n\nvar staticAccessors$11 = { serialVersionUID: { configurable: true },SORTINDEX_POINT: { configurable: true },SORTINDEX_MULTIPOINT: { configurable: true },SORTINDEX_LINESTRING: { configurable: true },SORTINDEX_LINEARRING: { configurable: true },SORTINDEX_MULTILINESTRING: { configurable: true },SORTINDEX_POLYGON: { configurable: true },SORTINDEX_MULTIPOLYGON: { configurable: true },SORTINDEX_GEOMETRYCOLLECTION: { configurable: true },geometryChangedFilter: { configurable: true } };\nGeometry.prototype.isGeometryCollection = function isGeometryCollection () {\n  return this.getSortIndex() === Geometry.SORTINDEX_GEOMETRYCOLLECTION\n};\nGeometry.prototype.getFactory = function getFactory () {\n  return this._factory\n};\nGeometry.prototype.getGeometryN = function getGeometryN (n) {\n  return this\n};\nGeometry.prototype.getArea = function getArea () {\n  return 0.0\n};\nGeometry.prototype.isRectangle = function isRectangle () {\n  return false\n};\nGeometry.prototype.equals = function equals () {\n  if (arguments[0] instanceof Geometry) {\n    var g$1 = arguments[0];\n    if (g$1 === null) { return false }\n    return this.equalsTopo(g$1)\n  } else if (arguments[0] instanceof Object) {\n    var o = arguments[0];\n    if (!(o instanceof Geometry)) { return false }\n    var g = o;\n    return this.equalsExact(g)\n  }\n};\nGeometry.prototype.equalsExact = function equalsExact (other) {\n  return this === other || this.equalsExact(other, 0)\n};\nGeometry.prototype.geometryChanged = function geometryChanged () {\n  this.apply(Geometry.geometryChangedFilter);\n};\nGeometry.prototype.geometryChangedAction = function geometryChangedAction () {\n  this._envelope = null;\n};\nGeometry.prototype.equalsNorm = function equalsNorm (g) {\n  if (g === null) { return false }\n  return this.norm().equalsExact(g.norm())\n};\nGeometry.prototype.getLength = function getLength () {\n  return 0.0\n};\nGeometry.prototype.getNumGeometries = function getNumGeometries () {\n  return 1\n};\nGeometry.prototype.compareTo = function compareTo () {\n  if (arguments.length === 1) {\n    var o = arguments[0];\n    var other = o;\n    if (this.getSortIndex() !== other.getSortIndex()) {\n      return this.getSortIndex() - other.getSortIndex()\n    }\n    if (this.isEmpty() && other.isEmpty()) {\n      return 0\n    }\n    if (this.isEmpty()) {\n      return -1\n    }\n    if (other.isEmpty()) {\n      return 1\n    }\n    return this.compareToSameClass(o)\n  } else if (arguments.length === 2) {\n    var other$1 = arguments[0];\n    var comp = arguments[1];\n    if (this.getSortIndex() !== other$1.getSortIndex()) {\n      return this.getSortIndex() - other$1.getSortIndex()\n    }\n    if (this.isEmpty() && other$1.isEmpty()) {\n      return 0\n    }\n    if (this.isEmpty()) {\n      return -1\n    }\n    if (other$1.isEmpty()) {\n      return 1\n    }\n    return this.compareToSameClass(other$1, comp)\n  }\n};\nGeometry.prototype.getUserData = function getUserData () {\n  return this._userData\n};\nGeometry.prototype.getSRID = function getSRID () {\n  return this._SRID\n};\nGeometry.prototype.getEnvelope = function getEnvelope () {\n  return this.getFactory().toGeometry(this.getEnvelopeInternal())\n};\nGeometry.prototype.checkNotGeometryCollection = function checkNotGeometryCollection (g) {\n  if (g.getSortIndex() === Geometry.SORTINDEX_GEOMETRYCOLLECTION) {\n    throw new IllegalArgumentException('This method does not support GeometryCollection arguments')\n  }\n};\nGeometry.prototype.equal = function equal (a, b, tolerance) {\n  if (tolerance === 0) {\n    return a.equals(b)\n  }\n  return a.distance(b) <= tolerance\n};\nGeometry.prototype.norm = function norm () {\n  var copy = this.copy();\n  copy.normalize();\n  return copy\n};\nGeometry.prototype.getPrecisionModel = function getPrecisionModel () {\n  return this._factory.getPrecisionModel()\n};\nGeometry.prototype.getEnvelopeInternal = function getEnvelopeInternal () {\n  if (this._envelope === null) {\n    this._envelope = this.computeEnvelopeInternal();\n  }\n  return new Envelope(this._envelope)\n};\nGeometry.prototype.setSRID = function setSRID (SRID) {\n  this._SRID = SRID;\n};\nGeometry.prototype.setUserData = function setUserData (userData) {\n  this._userData = userData;\n};\nGeometry.prototype.compare = function compare (a, b) {\n  var i = a.iterator();\n  var j = b.iterator();\n  while (i.hasNext() && j.hasNext()) {\n    var aElement = i.next();\n    var bElement = j.next();\n    var comparison = aElement.compareTo(bElement);\n    if (comparison !== 0) {\n      return comparison\n    }\n  }\n  if (i.hasNext()) {\n    return 1\n  }\n  if (j.hasNext()) {\n    return -1\n  }\n  return 0\n};\nGeometry.prototype.hashCode = function hashCode () {\n  return this.getEnvelopeInternal().hashCode()\n};\nGeometry.prototype.isGeometryCollectionOrDerived = function isGeometryCollectionOrDerived () {\n  if (this.getSortIndex() === Geometry.SORTINDEX_GEOMETRYCOLLECTION || this.getSortIndex() === Geometry.SORTINDEX_MULTIPOINT || this.getSortIndex() === Geometry.SORTINDEX_MULTILINESTRING || this.getSortIndex() === Geometry.SORTINDEX_MULTIPOLYGON) {\n    return true\n  }\n  return false\n};\nGeometry.prototype.interfaces_ = function interfaces_ () {\n  return [Clonable, Comparable, Serializable]\n};\nGeometry.prototype.getClass = function getClass () {\n  return Geometry\n};\nGeometry.hasNonEmptyElements = function hasNonEmptyElements (geometries) {\n  for (var i = 0; i < geometries.length; i++) {\n    if (!geometries[i].isEmpty()) {\n      return true\n    }\n  }\n  return false\n};\nGeometry.hasNullElements = function hasNullElements (array) {\n  for (var i = 0; i < array.length; i++) {\n    if (array[i] === null) {\n      return true\n    }\n  }\n  return false\n};\nstaticAccessors$11.serialVersionUID.get = function () { return 8763622679187376702 };\nstaticAccessors$11.SORTINDEX_POINT.get = function () { return 0 };\nstaticAccessors$11.SORTINDEX_MULTIPOINT.get = function () { return 1 };\nstaticAccessors$11.SORTINDEX_LINESTRING.get = function () { return 2 };\nstaticAccessors$11.SORTINDEX_LINEARRING.get = function () { return 3 };\nstaticAccessors$11.SORTINDEX_MULTILINESTRING.get = function () { return 4 };\nstaticAccessors$11.SORTINDEX_POLYGON.get = function () { return 5 };\nstaticAccessors$11.SORTINDEX_MULTIPOLYGON.get = function () { return 6 };\nstaticAccessors$11.SORTINDEX_GEOMETRYCOLLECTION.get = function () { return 7 };\nstaticAccessors$11.geometryChangedFilter.get = function () { return geometryChangedFilter };\n\nObject.defineProperties( Geometry, staticAccessors$11 );\n\nvar geometryChangedFilter = function geometryChangedFilter () {};\n\ngeometryChangedFilter.interfaces_ = function interfaces_ () {\n  return [GeometryComponentFilter]\n};\ngeometryChangedFilter.filter = function filter (geom) {\n  geom.geometryChangedAction();\n};\n\nvar CoordinateFilter = function CoordinateFilter () {};\n\nCoordinateFilter.prototype.filter = function filter (coord) {};\nCoordinateFilter.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCoordinateFilter.prototype.getClass = function getClass () {\n  return CoordinateFilter\n};\n\nvar BoundaryNodeRule = function BoundaryNodeRule () {};\n\nvar staticAccessors$12 = { Mod2BoundaryNodeRule: { configurable: true },EndPointBoundaryNodeRule: { configurable: true },MultiValentEndPointBoundaryNodeRule: { configurable: true },MonoValentEndPointBoundaryNodeRule: { configurable: true },MOD2_BOUNDARY_RULE: { configurable: true },ENDPOINT_BOUNDARY_RULE: { configurable: true },MULTIVALENT_ENDPOINT_BOUNDARY_RULE: { configurable: true },MONOVALENT_ENDPOINT_BOUNDARY_RULE: { configurable: true },OGC_SFS_BOUNDARY_RULE: { configurable: true } };\n\nBoundaryNodeRule.prototype.isInBoundary = function isInBoundary (boundaryCount) {};\nBoundaryNodeRule.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBoundaryNodeRule.prototype.getClass = function getClass () {\n  return BoundaryNodeRule\n};\nstaticAccessors$12.Mod2BoundaryNodeRule.get = function () { return Mod2BoundaryNodeRule };\nstaticAccessors$12.EndPointBoundaryNodeRule.get = function () { return EndPointBoundaryNodeRule };\nstaticAccessors$12.MultiValentEndPointBoundaryNodeRule.get = function () { return MultiValentEndPointBoundaryNodeRule };\nstaticAccessors$12.MonoValentEndPointBoundaryNodeRule.get = function () { return MonoValentEndPointBoundaryNodeRule };\nstaticAccessors$12.MOD2_BOUNDARY_RULE.get = function () { return new Mod2BoundaryNodeRule() };\nstaticAccessors$12.ENDPOINT_BOUNDARY_RULE.get = function () { return new EndPointBoundaryNodeRule() };\nstaticAccessors$12.MULTIVALENT_ENDPOINT_BOUNDARY_RULE.get = function () { return new MultiValentEndPointBoundaryNodeRule() };\nstaticAccessors$12.MONOVALENT_ENDPOINT_BOUNDARY_RULE.get = function () { return new MonoValentEndPointBoundaryNodeRule() };\nstaticAccessors$12.OGC_SFS_BOUNDARY_RULE.get = function () { return BoundaryNodeRule.MOD2_BOUNDARY_RULE };\n\nObject.defineProperties( BoundaryNodeRule, staticAccessors$12 );\n\nvar Mod2BoundaryNodeRule = function Mod2BoundaryNodeRule () {};\n\nMod2BoundaryNodeRule.prototype.isInBoundary = function isInBoundary (boundaryCount) {\n  return boundaryCount % 2 === 1\n};\nMod2BoundaryNodeRule.prototype.interfaces_ = function interfaces_ () {\n  return [BoundaryNodeRule]\n};\nMod2BoundaryNodeRule.prototype.getClass = function getClass () {\n  return Mod2BoundaryNodeRule\n};\n\nvar EndPointBoundaryNodeRule = function EndPointBoundaryNodeRule () {};\n\nEndPointBoundaryNodeRule.prototype.isInBoundary = function isInBoundary (boundaryCount) {\n  return boundaryCount > 0\n};\nEndPointBoundaryNodeRule.prototype.interfaces_ = function interfaces_ () {\n  return [BoundaryNodeRule]\n};\nEndPointBoundaryNodeRule.prototype.getClass = function getClass () {\n  return EndPointBoundaryNodeRule\n};\n\nvar MultiValentEndPointBoundaryNodeRule = function MultiValentEndPointBoundaryNodeRule () {};\n\nMultiValentEndPointBoundaryNodeRule.prototype.isInBoundary = function isInBoundary (boundaryCount) {\n  return boundaryCount > 1\n};\nMultiValentEndPointBoundaryNodeRule.prototype.interfaces_ = function interfaces_ () {\n  return [BoundaryNodeRule]\n};\nMultiValentEndPointBoundaryNodeRule.prototype.getClass = function getClass () {\n  return MultiValentEndPointBoundaryNodeRule\n};\n\nvar MonoValentEndPointBoundaryNodeRule = function MonoValentEndPointBoundaryNodeRule () {};\n\nMonoValentEndPointBoundaryNodeRule.prototype.isInBoundary = function isInBoundary (boundaryCount) {\n  return boundaryCount === 1\n};\nMonoValentEndPointBoundaryNodeRule.prototype.interfaces_ = function interfaces_ () {\n  return [BoundaryNodeRule]\n};\nMonoValentEndPointBoundaryNodeRule.prototype.getClass = function getClass () {\n  return MonoValentEndPointBoundaryNodeRule\n};\n\n// import Iterator from './Iterator'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Collection.html\n *\n * @constructor\n * @private\n */\nvar Collection = function Collection () {};\n\nCollection.prototype.add = function add () {};\n\n/**\n * Appends all of the elements in the specified collection to the end of this\n * list, in the order that they are returned by the specified collection's\n * iterator (optional operation).\n * @param {javascript.util.Collection} c\n * @return {boolean}\n */\nCollection.prototype.addAll = function addAll () {};\n\n/**\n * Returns true if this collection contains no elements.\n * @return {boolean}\n */\nCollection.prototype.isEmpty = function isEmpty () {};\n\n/**\n * Returns an iterator over the elements in this collection.\n * @return {javascript.util.Iterator}\n */\nCollection.prototype.iterator = function iterator () {};\n\n/**\n * Returns an iterator over the elements in this collection.\n * @return {number}\n */\nCollection.prototype.size = function size () {};\n\n/**\n * Returns an array containing all of the elements in this collection.\n * @return {Array}\n */\nCollection.prototype.toArray = function toArray () {};\n\n/**\n * Removes a single instance of the specified element from this collection if it\n * is present. (optional)\n * @param {Object} e\n * @return {boolean}\n */\nCollection.prototype.remove = function remove () {};\n\n/**\n * @param {string=} message Optional message\n * @extends {Error}\n * @constructor\n * @private\n */\nfunction IndexOutOfBoundsException (message) {\n  this.message = message || '';\n}\nIndexOutOfBoundsException.prototype = new Error();\n\n/**\n * @type {string}\n */\nIndexOutOfBoundsException.prototype.name = 'IndexOutOfBoundsException';\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Iterator.html\n * @constructor\n * @private\n */\nvar Iterator = function Iterator () {};\n\nIterator.prototype.hasNext = function hasNext () {};\n\n/**\n * Returns the next element in the iteration.\n * @return {Object}\n */\nIterator.prototype.next = function next () {};\n\n/**\n * Removes from the underlying collection the last element returned by the\n * iterator (optional operation).\n */\nIterator.prototype.remove = function remove () {};\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/List.html\n *\n * @extends {javascript.util.Collection}\n * @constructor\n * @private\n */\nvar List = (function (Collection$$1) {\n  function List () {\n    Collection$$1.apply(this, arguments);\n  }\n\n  if ( Collection$$1 ) List.__proto__ = Collection$$1;\n  List.prototype = Object.create( Collection$$1 && Collection$$1.prototype );\n  List.prototype.constructor = List;\n\n  List.prototype.get = function get () { };\n\n  /**\n   * Replaces the element at the specified position in this list with the\n   * specified element (optional operation).\n   * @param {number} index\n   * @param {Object} e\n   * @return {Object}\n   */\n  List.prototype.set = function set () { };\n\n  /**\n   * Returns true if this collection contains no elements.\n   * @return {boolean}\n   */\n  List.prototype.isEmpty = function isEmpty () { };\n\n  return List;\n}(Collection));\n\n/**\n * @param {string=} message Optional message\n * @extends {Error}\n * @constructor\n * @private\n */\nfunction NoSuchElementException (message) {\n  this.message = message || '';\n}\nNoSuchElementException.prototype = new Error();\n\n/**\n * @type {string}\n */\nNoSuchElementException.prototype.name = 'NoSuchElementException';\n\n// import OperationNotSupported from './OperationNotSupported'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/ArrayList.html\n *\n * @extends List\n * @private\n */\nvar ArrayList = (function (List$$1) {\n  function ArrayList () {\n    List$$1.call(this);\n    this.array_ = [];\n\n    if (arguments[0] instanceof Collection) {\n      this.addAll(arguments[0]);\n    }\n  }\n\n  if ( List$$1 ) ArrayList.__proto__ = List$$1;\n  ArrayList.prototype = Object.create( List$$1 && List$$1.prototype );\n  ArrayList.prototype.constructor = ArrayList;\n\n  ArrayList.prototype.ensureCapacity = function ensureCapacity () {};\n  ArrayList.prototype.interfaces_ = function interfaces_ () { return [List$$1, Collection] };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.add = function add (e) {\n    if (arguments.length === 1) {\n      this.array_.push(e);\n    } else {\n      this.array_.splice(arguments[0], arguments[1]);\n    }\n    return true\n  };\n\n  ArrayList.prototype.clear = function clear () {\n    this.array_ = [];\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.addAll = function addAll (c) {\n    var this$1 = this;\n\n    for (var i = c.iterator(); i.hasNext();) {\n      this$1.add(i.next());\n    }\n    return true\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.set = function set (index, element) {\n    var oldElement = this.array_[index];\n    this.array_[index] = element;\n    return oldElement\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.iterator = function iterator () {\n    return new Iterator_(this)\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.get = function get (index) {\n    if (index < 0 || index >= this.size()) {\n      throw new IndexOutOfBoundsException()\n    }\n\n    return this.array_[index]\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.isEmpty = function isEmpty () {\n    return this.array_.length === 0\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.size = function size () {\n    return this.array_.length\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.toArray = function toArray () {\n    var this$1 = this;\n\n    var array = [];\n\n    for (var i = 0, len = this.array_.length; i < len; i++) {\n      array.push(this$1.array_[i]);\n    }\n\n    return array\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.remove = function remove (o) {\n    var this$1 = this;\n\n    var found = false;\n\n    for (var i = 0, len = this.array_.length; i < len; i++) {\n      if (this$1.array_[i] === o) {\n        this$1.array_.splice(i, 1);\n        found = true;\n        break\n      }\n    }\n\n    return found\n  };\n\n  return ArrayList;\n}(List));\n\n/**\n * @extends {Iterator}\n * @param {ArrayList} arrayList\n * @constructor\n * @private\n */\nvar Iterator_ = (function (Iterator$$1) {\n  function Iterator_ (arrayList) {\n    Iterator$$1.call(this);\n    /**\n     * @type {ArrayList}\n     * @private\n    */\n    this.arrayList_ = arrayList;\n    /**\n     * @type {number}\n     * @private\n    */\n    this.position_ = 0;\n  }\n\n  if ( Iterator$$1 ) Iterator_.__proto__ = Iterator$$1;\n  Iterator_.prototype = Object.create( Iterator$$1 && Iterator$$1.prototype );\n  Iterator_.prototype.constructor = Iterator_;\n\n  /**\n   * @override\n   */\n  Iterator_.prototype.next = function next () {\n    if (this.position_ === this.arrayList_.size()) {\n      throw new NoSuchElementException()\n    }\n    return this.arrayList_.get(this.position_++)\n  };\n\n  /**\n   * @override\n   */\n  Iterator_.prototype.hasNext = function hasNext () {\n    if (this.position_ < this.arrayList_.size()) {\n      return true\n    } else {\n      return false\n    }\n  };\n\n  /**\n   * TODO: should be in ListIterator\n   * @override\n   */\n  Iterator_.prototype.set = function set (element) {\n    return this.arrayList_.set(this.position_ - 1, element)\n  };\n\n  /**\n   * @override\n   */\n  Iterator_.prototype.remove = function remove () {\n    this.arrayList_.remove(this.arrayList_.get(this.position_));\n  };\n\n  return Iterator_;\n}(Iterator));\n\nvar CoordinateList = (function (ArrayList$$1) {\n  function CoordinateList () {\n    ArrayList$$1.call(this);\n    if (arguments.length === 0) {\n    } else if (arguments.length === 1) {\n      var coord = arguments[0];\n      this.ensureCapacity(coord.length);\n      this.add(coord, true);\n    } else if (arguments.length === 2) {\n      var coord$1 = arguments[0];\n      var allowRepeated = arguments[1];\n      this.ensureCapacity(coord$1.length);\n      this.add(coord$1, allowRepeated);\n    }\n  }\n\n  if ( ArrayList$$1 ) CoordinateList.__proto__ = ArrayList$$1;\n  CoordinateList.prototype = Object.create( ArrayList$$1 && ArrayList$$1.prototype );\n  CoordinateList.prototype.constructor = CoordinateList;\n\n  var staticAccessors = { coordArrayType: { configurable: true } };\n  staticAccessors.coordArrayType.get = function () { return new Array(0).fill(null) };\n  CoordinateList.prototype.getCoordinate = function getCoordinate (i) {\n    return this.get(i)\n  };\n  CoordinateList.prototype.addAll = function addAll () {\n    var this$1 = this;\n\n    if (arguments.length === 2) {\n      var coll = arguments[0];\n      var allowRepeated = arguments[1];\n      var isChanged = false;\n      for (var i = coll.iterator(); i.hasNext();) {\n        this$1.add(i.next(), allowRepeated);\n        isChanged = true;\n      }\n      return isChanged\n    } else { return ArrayList$$1.prototype.addAll.apply(this, arguments) }\n  };\n  CoordinateList.prototype.clone = function clone () {\n    var this$1 = this;\n\n    var clone = ArrayList$$1.prototype.clone.call(this);\n    for (var i = 0; i < this.size(); i++) {\n      clone.add(i, this$1.get(i).copy());\n    }\n    return clone\n  };\n  CoordinateList.prototype.toCoordinateArray = function toCoordinateArray () {\n    return this.toArray(CoordinateList.coordArrayType)\n  };\n  CoordinateList.prototype.add = function add () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var coord = arguments[0];\n      ArrayList$$1.prototype.add.call(this, coord);\n    } else if (arguments.length === 2) {\n      if (arguments[0] instanceof Array && typeof arguments[1] === 'boolean') {\n        var coord$1 = arguments[0];\n        var allowRepeated = arguments[1];\n        this.add(coord$1, allowRepeated, true);\n        return true\n      } else if (arguments[0] instanceof Coordinate && typeof arguments[1] === 'boolean') {\n        var coord$2 = arguments[0];\n        var allowRepeated$1 = arguments[1];\n        if (!allowRepeated$1) {\n          if (this.size() >= 1) {\n            var last = this.get(this.size() - 1);\n            if (last.equals2D(coord$2)) { return null }\n          }\n        }\n        ArrayList$$1.prototype.add.call(this, coord$2);\n      } else if (arguments[0] instanceof Object && typeof arguments[1] === 'boolean') {\n        var obj = arguments[0];\n        var allowRepeated$2 = arguments[1];\n        this.add(obj, allowRepeated$2);\n        return true\n      }\n    } else if (arguments.length === 3) {\n      if (typeof arguments[2] === 'boolean' && (arguments[0] instanceof Array && typeof arguments[1] === 'boolean')) {\n        var coord$3 = arguments[0];\n        var allowRepeated$3 = arguments[1];\n        var direction = arguments[2];\n        if (direction) {\n          for (var i$1 = 0; i$1 < coord$3.length; i$1++) {\n            this$1.add(coord$3[i$1], allowRepeated$3);\n          }\n        } else {\n          for (var i$2 = coord$3.length - 1; i$2 >= 0; i$2--) {\n            this$1.add(coord$3[i$2], allowRepeated$3);\n          }\n        }\n        return true\n      } else if (typeof arguments[2] === 'boolean' && (Number.isInteger(arguments[0]) && arguments[1] instanceof Coordinate)) {\n        var i$3 = arguments[0];\n        var coord$4 = arguments[1];\n        var allowRepeated$4 = arguments[2];\n        if (!allowRepeated$4) {\n          var size = this.size();\n          if (size > 0) {\n            if (i$3 > 0) {\n              var prev = this.get(i$3 - 1);\n              if (prev.equals2D(coord$4)) { return null }\n            }\n            if (i$3 < size) {\n              var next = this.get(i$3);\n              if (next.equals2D(coord$4)) { return null }\n            }\n          }\n        }\n        ArrayList$$1.prototype.add.call(this, i$3, coord$4);\n      }\n    } else if (arguments.length === 4) {\n      var coord$5 = arguments[0];\n      var allowRepeated$5 = arguments[1];\n      var start = arguments[2];\n      var end = arguments[3];\n      var inc = 1;\n      if (start > end) { inc = -1; }\n      for (var i = start; i !== end; i += inc) {\n        this$1.add(coord$5[i], allowRepeated$5);\n      }\n      return true\n    }\n  };\n  CoordinateList.prototype.closeRing = function closeRing () {\n    if (this.size() > 0) { this.add(new Coordinate(this.get(0)), false); }\n  };\n  CoordinateList.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  CoordinateList.prototype.getClass = function getClass () {\n    return CoordinateList\n  };\n\n  Object.defineProperties( CoordinateList, staticAccessors );\n\n  return CoordinateList;\n}(ArrayList));\n\nvar CoordinateArrays = function CoordinateArrays () {};\n\nvar staticAccessors$13 = { ForwardComparator: { configurable: true },BidirectionalComparator: { configurable: true },coordArrayType: { configurable: true } };\n\nstaticAccessors$13.ForwardComparator.get = function () { return ForwardComparator };\nstaticAccessors$13.BidirectionalComparator.get = function () { return BidirectionalComparator };\nstaticAccessors$13.coordArrayType.get = function () { return new Array(0).fill(null) };\n\nCoordinateArrays.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCoordinateArrays.prototype.getClass = function getClass () {\n  return CoordinateArrays\n};\nCoordinateArrays.isRing = function isRing (pts) {\n  if (pts.length < 4) { return false }\n  if (!pts[0].equals2D(pts[pts.length - 1])) { return false }\n  return true\n};\nCoordinateArrays.ptNotInList = function ptNotInList (testPts, pts) {\n  for (var i = 0; i < testPts.length; i++) {\n    var testPt = testPts[i];\n    if (CoordinateArrays.indexOf(testPt, pts) < 0) { return testPt }\n  }\n  return null\n};\nCoordinateArrays.scroll = function scroll (coordinates, firstCoordinate) {\n  var i = CoordinateArrays.indexOf(firstCoordinate, coordinates);\n  if (i < 0) { return null }\n  var newCoordinates = new Array(coordinates.length).fill(null);\n  System.arraycopy(coordinates, i, newCoordinates, 0, coordinates.length - i);\n  System.arraycopy(coordinates, 0, newCoordinates, coordinates.length - i, i);\n  System.arraycopy(newCoordinates, 0, coordinates, 0, coordinates.length);\n};\nCoordinateArrays.equals = function equals () {\n  if (arguments.length === 2) {\n    var coord1 = arguments[0];\n    var coord2 = arguments[1];\n    if (coord1 === coord2) { return true }\n    if (coord1 === null || coord2 === null) { return false }\n    if (coord1.length !== coord2.length) { return false }\n    for (var i = 0; i < coord1.length; i++) {\n      if (!coord1[i].equals(coord2[i])) { return false }\n    }\n    return true\n  } else if (arguments.length === 3) {\n    var coord1$1 = arguments[0];\n    var coord2$1 = arguments[1];\n    var coordinateComparator = arguments[2];\n    if (coord1$1 === coord2$1) { return true }\n    if (coord1$1 === null || coord2$1 === null) { return false }\n    if (coord1$1.length !== coord2$1.length) { return false }\n    for (var i$1 = 0; i$1 < coord1$1.length; i$1++) {\n      if (coordinateComparator.compare(coord1$1[i$1], coord2$1[i$1]) !== 0) { return false }\n    }\n    return true\n  }\n};\nCoordinateArrays.intersection = function intersection (coordinates, env) {\n  var coordList = new CoordinateList();\n  for (var i = 0; i < coordinates.length; i++) {\n    if (env.intersects(coordinates[i])) { coordList.add(coordinates[i], true); }\n  }\n  return coordList.toCoordinateArray()\n};\nCoordinateArrays.hasRepeatedPoints = function hasRepeatedPoints (coord) {\n  for (var i = 1; i < coord.length; i++) {\n    if (coord[i - 1].equals(coord[i])) {\n      return true\n    }\n  }\n  return false\n};\nCoordinateArrays.removeRepeatedPoints = function removeRepeatedPoints (coord) {\n  if (!CoordinateArrays.hasRepeatedPoints(coord)) { return coord }\n  var coordList = new CoordinateList(coord, false);\n  return coordList.toCoordinateArray()\n};\nCoordinateArrays.reverse = function reverse (coord) {\n  var last = coord.length - 1;\n  var mid = Math.trunc(last / 2);\n  for (var i = 0; i <= mid; i++) {\n    var tmp = coord[i];\n    coord[i] = coord[last - i];\n    coord[last - i] = tmp;\n  }\n};\nCoordinateArrays.removeNull = function removeNull (coord) {\n  var nonNull = 0;\n  for (var i = 0; i < coord.length; i++) {\n    if (coord[i] !== null) { nonNull++; }\n  }\n  var newCoord = new Array(nonNull).fill(null);\n  if (nonNull === 0) { return newCoord }\n  var j = 0;\n  for (var i$1 = 0; i$1 < coord.length; i$1++) {\n    if (coord[i$1] !== null) { newCoord[j++] = coord[i$1]; }\n  }\n  return newCoord\n};\nCoordinateArrays.copyDeep = function copyDeep () {\n  if (arguments.length === 1) {\n    var coordinates = arguments[0];\n    var copy = new Array(coordinates.length).fill(null);\n    for (var i = 0; i < coordinates.length; i++) {\n      copy[i] = new Coordinate(coordinates[i]);\n    }\n    return copy\n  } else if (arguments.length === 5) {\n    var src = arguments[0];\n    var srcStart = arguments[1];\n    var dest = arguments[2];\n    var destStart = arguments[3];\n    var length = arguments[4];\n    for (var i$1 = 0; i$1 < length; i$1++) {\n      dest[destStart + i$1] = new Coordinate(src[srcStart + i$1]);\n    }\n  }\n};\nCoordinateArrays.isEqualReversed = function isEqualReversed (pts1, pts2) {\n  for (var i = 0; i < pts1.length; i++) {\n    var p1 = pts1[i];\n    var p2 = pts2[pts1.length - i - 1];\n    if (p1.compareTo(p2) !== 0) { return false }\n  }\n  return true\n};\nCoordinateArrays.envelope = function envelope (coordinates) {\n  var env = new Envelope();\n  for (var i = 0; i < coordinates.length; i++) {\n    env.expandToInclude(coordinates[i]);\n  }\n  return env\n};\nCoordinateArrays.toCoordinateArray = function toCoordinateArray (coordList) {\n  return coordList.toArray(CoordinateArrays.coordArrayType)\n};\nCoordinateArrays.atLeastNCoordinatesOrNothing = function atLeastNCoordinatesOrNothing (n, c) {\n  return c.length >= n ? c : []\n};\nCoordinateArrays.indexOf = function indexOf (coordinate, coordinates) {\n  for (var i = 0; i < coordinates.length; i++) {\n    if (coordinate.equals(coordinates[i])) {\n      return i\n    }\n  }\n  return -1\n};\nCoordinateArrays.increasingDirection = function increasingDirection (pts) {\n  for (var i = 0; i < Math.trunc(pts.length / 2); i++) {\n    var j = pts.length - 1 - i;\n    var comp = pts[i].compareTo(pts[j]);\n    if (comp !== 0) { return comp }\n  }\n  return 1\n};\nCoordinateArrays.compare = function compare (pts1, pts2) {\n  var i = 0;\n  while (i < pts1.length && i < pts2.length) {\n    var compare = pts1[i].compareTo(pts2[i]);\n    if (compare !== 0) { return compare }\n    i++;\n  }\n  if (i < pts2.length) { return -1 }\n  if (i < pts1.length) { return 1 }\n  return 0\n};\nCoordinateArrays.minCoordinate = function minCoordinate (coordinates) {\n  var minCoord = null;\n  for (var i = 0; i < coordinates.length; i++) {\n    if (minCoord === null || minCoord.compareTo(coordinates[i]) > 0) {\n      minCoord = coordinates[i];\n    }\n  }\n  return minCoord\n};\nCoordinateArrays.extract = function extract (pts, start, end) {\n  start = MathUtil.clamp(start, 0, pts.length);\n  end = MathUtil.clamp(end, -1, pts.length);\n  var npts = end - start + 1;\n  if (end < 0) { npts = 0; }\n  if (start >= pts.length) { npts = 0; }\n  if (end < start) { npts = 0; }\n  var extractPts = new Array(npts).fill(null);\n  if (npts === 0) { return extractPts }\n  var iPts = 0;\n  for (var i = start; i <= end; i++) {\n    extractPts[iPts++] = pts[i];\n  }\n  return extractPts\n};\n\nObject.defineProperties( CoordinateArrays, staticAccessors$13 );\n\nvar ForwardComparator = function ForwardComparator () {};\n\nForwardComparator.prototype.compare = function compare (o1, o2) {\n  var pts1 = o1;\n  var pts2 = o2;\n  return CoordinateArrays.compare(pts1, pts2)\n};\nForwardComparator.prototype.interfaces_ = function interfaces_ () {\n  return [Comparator]\n};\nForwardComparator.prototype.getClass = function getClass () {\n  return ForwardComparator\n};\n\nvar BidirectionalComparator = function BidirectionalComparator () {};\n\nBidirectionalComparator.prototype.compare = function compare (o1, o2) {\n  var pts1 = o1;\n  var pts2 = o2;\n  if (pts1.length < pts2.length) { return -1 }\n  if (pts1.length > pts2.length) { return 1 }\n  if (pts1.length === 0) { return 0 }\n  var forwardComp = CoordinateArrays.compare(pts1, pts2);\n  var isEqualRev = CoordinateArrays.isEqualReversed(pts1, pts2);\n  if (isEqualRev) { return 0 }\n  return forwardComp\n};\nBidirectionalComparator.prototype.OLDcompare = function OLDcompare (o1, o2) {\n  var pts1 = o1;\n  var pts2 = o2;\n  if (pts1.length < pts2.length) { return -1 }\n  if (pts1.length > pts2.length) { return 1 }\n  if (pts1.length === 0) { return 0 }\n  var dir1 = CoordinateArrays.increasingDirection(pts1);\n  var dir2 = CoordinateArrays.increasingDirection(pts2);\n  var i1 = dir1 > 0 ? 0 : pts1.length - 1;\n  var i2 = dir2 > 0 ? 0 : pts1.length - 1;\n  for (var i = 0; i < pts1.length; i++) {\n    var comparePt = pts1[i1].compareTo(pts2[i2]);\n    if (comparePt !== 0) { return comparePt }\n    i1 += dir1;\n    i2 += dir2;\n  }\n  return 0\n};\nBidirectionalComparator.prototype.interfaces_ = function interfaces_ () {\n  return [Comparator]\n};\nBidirectionalComparator.prototype.getClass = function getClass () {\n  return BidirectionalComparator\n};\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Map.html\n *\n * @constructor\n * @private\n */\nvar Map$1 = function Map () {};\n\nMap$1.prototype.get = function get () {};\n/**\n * Associates the specified value with the specified key in this map (optional\n * operation).\n * @param {Object} key\n * @param {Object} value\n * @return {Object}\n */\nMap$1.prototype.put = function put () {};\n\n/**\n * Returns the number of key-value mappings in this map.\n * @return {number}\n */\nMap$1.prototype.size = function size () {};\n\n/**\n * Returns a Collection view of the values contained in this map.\n * @return {javascript.util.Collection}\n */\nMap$1.prototype.values = function values () {};\n\n/**\n * Returns a {@link Set} view of the mappings contained in this map.\n * The set is backed by the map, so changes to the map are\n * reflected in the set, and vice-versa.If the map is modified\n * while an iteration over the set is in progress (except through\n * the iterator's own <tt>remove</tt> operation, or through the\n * <tt>setValue</tt> operation on a map entry returned by the\n * iterator) the results of the iteration are undefined.The set\n * supports element removal, which removes the corresponding\n * mapping from the map, via the <tt>Iterator.remove</tt>,\n * <tt>Set.remove</tt>, <tt>removeAll</tt>, <tt>retainAll</tt> and\n * <tt>clear</tt> operations.It does not support the\n * <tt>add</tt> or <tt>addAll</tt> operations.\n *\n * @return {Set} a set view of the mappings contained in this map\n */\nMap$1.prototype.entrySet = function entrySet () {};\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/SortedMap.html\n *\n * @extends {Map}\n * @constructor\n * @private\n */\nvar SortedMap = (function (Map) {\n\tfunction SortedMap () {\n\t\tMap.apply(this, arguments);\n\t}if ( Map ) SortedMap.__proto__ = Map;\n\tSortedMap.prototype = Object.create( Map && Map.prototype );\n\tSortedMap.prototype.constructor = SortedMap;\n\n\t\n\n\treturn SortedMap;\n}(Map$1));\n\n/**\n * @param {string=} message Optional message\n * @extends {Error}\n * @constructor\n * @private\n */\nfunction OperationNotSupported (message) {\n  this.message = message || '';\n}\nOperationNotSupported.prototype = new Error();\n\n/**\n * @type {string}\n */\nOperationNotSupported.prototype.name = 'OperationNotSupported';\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Set.html\n *\n * @extends {Collection}\n * @constructor\n * @private\n */\nfunction Set() {}\nSet.prototype = new Collection();\n\n\n/**\n * Returns true if this set contains the specified element. More formally,\n * returns true if and only if this set contains an element e such that (o==null ?\n * e==null : o.equals(e)).\n * @param {Object} e\n * @return {boolean}\n */\nSet.prototype.contains = function() {};\n\n/**\n * @see http://docs.oracle.com/javase/6/docs/api/java/util/HashSet.html\n *\n * @extends {javascript.util.Set}\n * @constructor\n * @private\n */\nvar HashSet = (function (Set$$1) {\n  function HashSet () {\n    Set$$1.call(this);\n    this.array_ = [];\n\n    if (arguments[0] instanceof Collection) {\n      this.addAll(arguments[0]);\n    }\n  }\n\n  if ( Set$$1 ) HashSet.__proto__ = Set$$1;\n  HashSet.prototype = Object.create( Set$$1 && Set$$1.prototype );\n  HashSet.prototype.constructor = HashSet;\n\n  /**\n   * @override\n   */\n  HashSet.prototype.contains = function contains (o) {\n    var this$1 = this;\n\n    for (var i = 0, len = this.array_.length; i < len; i++) {\n      var e = this$1.array_[i];\n      if (e === o) {\n        return true\n      }\n    }\n    return false\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.add = function add (o) {\n    if (this.contains(o)) {\n      return false\n    }\n\n    this.array_.push(o);\n\n    return true\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.addAll = function addAll (c) {\n    var this$1 = this;\n\n    for (var i = c.iterator(); i.hasNext();) {\n      this$1.add(i.next());\n    }\n    return true\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.remove = function remove (o) {\n    // throw new javascript.util.OperationNotSupported()\n    throw new Error()\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.size = function size () {\n    return this.array_.length\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.isEmpty = function isEmpty () {\n    return this.array_.length === 0\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.toArray = function toArray () {\n    var this$1 = this;\n\n    var array = [];\n\n    for (var i = 0, len = this.array_.length; i < len; i++) {\n      array.push(this$1.array_[i]);\n    }\n\n    return array\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.iterator = function iterator () {\n    return new Iterator_$1(this)\n  };\n\n  return HashSet;\n}(Set));\n\n/**\n   * @extends {Iterator}\n   * @param {HashSet} hashSet\n   * @constructor\n   * @private\n   */\nvar Iterator_$1 = (function (Iterator$$1) {\n  function Iterator_ (hashSet) {\n    Iterator$$1.call(this);\n    /**\n     * @type {HashSet}\n     * @private\n     */\n    this.hashSet_ = hashSet;\n    /**\n     * @type {number}\n     * @private\n     */\n    this.position_ = 0;\n  }\n\n  if ( Iterator$$1 ) Iterator_.__proto__ = Iterator$$1;\n  Iterator_.prototype = Object.create( Iterator$$1 && Iterator$$1.prototype );\n  Iterator_.prototype.constructor = Iterator_;\n\n  /**\n   * @override\n   */\n  Iterator_.prototype.next = function next () {\n    if (this.position_ === this.hashSet_.size()) {\n      throw new NoSuchElementException()\n    }\n    return this.hashSet_.array_[this.position_++]\n  };\n\n  /**\n   * @override\n   */\n  Iterator_.prototype.hasNext = function hasNext () {\n    if (this.position_ < this.hashSet_.size()) {\n      return true\n    } else {\n      return false\n    }\n  };\n\n  /**\n   * @override\n   */\n  Iterator_.prototype.remove = function remove () {\n    throw new OperationNotSupported()\n  };\n\n  return Iterator_;\n}(Iterator));\n\nvar BLACK = 0;\nvar RED = 1;\nfunction colorOf (p) { return (p === null ? BLACK : p.color) }\nfunction parentOf (p) { return (p === null ? null : p.parent) }\nfunction setColor (p, c) { if (p !== null) { p.color = c; } }\nfunction leftOf (p) { return (p === null ? null : p.left) }\nfunction rightOf (p) { return (p === null ? null : p.right) }\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/TreeMap.html\n *\n * @extends {SortedMap}\n * @constructor\n * @private\n */\nfunction TreeMap () {\n  /**\n   * @type {Object}\n   * @private\n   */\n  this.root_ = null;\n  /**\n   * @type {number}\n   * @private\n  */\n  this.size_ = 0;\n}\nTreeMap.prototype = new SortedMap();\n\n/**\n * @override\n */\nTreeMap.prototype.get = function (key) {\n  var p = this.root_;\n  while (p !== null) {\n    var cmp = key['compareTo'](p.key);\n    if (cmp < 0) { p = p.left; }\n    else if (cmp > 0) { p = p.right; }\n    else { return p.value }\n  }\n  return null\n};\n\n/**\n * @override\n */\nTreeMap.prototype.put = function (key, value) {\n  if (this.root_ === null) {\n    this.root_ = {\n      key: key,\n      value: value,\n      left: null,\n      right: null,\n      parent: null,\n      color: BLACK,\n      getValue: function getValue () { return this.value },\n      getKey: function getKey () { return this.key }\n    };\n    this.size_ = 1;\n    return null\n  }\n  var t = this.root_;\n  var parent;\n  var cmp;\n  do {\n    parent = t;\n    cmp = key['compareTo'](t.key);\n    if (cmp < 0) {\n      t = t.left;\n    } else if (cmp > 0) {\n      t = t.right;\n    } else {\n      var oldValue = t.value;\n      t.value = value;\n      return oldValue\n    }\n  } while (t !== null)\n  var e = {\n    key: key,\n    left: null,\n    right: null,\n    value: value,\n    parent: parent,\n    color: BLACK,\n    getValue: function getValue () { return this.value },\n    getKey: function getKey () { return this.key }\n  };\n  if (cmp < 0) {\n    parent.left = e;\n  } else {\n    parent.right = e;\n  }\n  this.fixAfterInsertion(e);\n  this.size_++;\n  return null\n};\n\n/**\n * @param {Object} x\n */\nTreeMap.prototype.fixAfterInsertion = function (x) {\n  var this$1 = this;\n\n  x.color = RED;\n  while (x != null && x !== this.root_ && x.parent.color === RED) {\n    if (parentOf(x) === leftOf(parentOf(parentOf(x)))) {\n      var y = rightOf(parentOf(parentOf(x)));\n      if (colorOf(y) === RED) {\n        setColor(parentOf(x), BLACK);\n        setColor(y, BLACK);\n        setColor(parentOf(parentOf(x)), RED);\n        x = parentOf(parentOf(x));\n      } else {\n        if (x === rightOf(parentOf(x))) {\n          x = parentOf(x);\n          this$1.rotateLeft(x);\n        }\n        setColor(parentOf(x), BLACK);\n        setColor(parentOf(parentOf(x)), RED);\n        this$1.rotateRight(parentOf(parentOf(x)));\n      }\n    } else {\n      var y$1 = leftOf(parentOf(parentOf(x)));\n      if (colorOf(y$1) === RED) {\n        setColor(parentOf(x), BLACK);\n        setColor(y$1, BLACK);\n        setColor(parentOf(parentOf(x)), RED);\n        x = parentOf(parentOf(x));\n      } else {\n        if (x === leftOf(parentOf(x))) {\n          x = parentOf(x);\n          this$1.rotateRight(x);\n        }\n        setColor(parentOf(x), BLACK);\n        setColor(parentOf(parentOf(x)), RED);\n        this$1.rotateLeft(parentOf(parentOf(x)));\n      }\n    }\n  }\n  this.root_.color = BLACK;\n};\n\n/**\n * @override\n */\nTreeMap.prototype.values = function () {\n  var arrayList = new ArrayList();\n  var p = this.getFirstEntry();\n  if (p !== null) {\n    arrayList.add(p.value);\n    while ((p = TreeMap.successor(p)) !== null) {\n      arrayList.add(p.value);\n    }\n  }\n  return arrayList\n};\n\n/**\n * @override\n */\nTreeMap.prototype.entrySet = function () {\n  var hashSet = new HashSet();\n  var p = this.getFirstEntry();\n  if (p !== null) {\n    hashSet.add(p);\n    while ((p = TreeMap.successor(p)) !== null) {\n      hashSet.add(p);\n    }\n  }\n  return hashSet\n};\n\n/**\n * @param {Object} p\n */\nTreeMap.prototype.rotateLeft = function (p) {\n  if (p != null) {\n    var r = p.right;\n    p.right = r.left;\n    if (r.left != null) { r.left.parent = p; }\n    r.parent = p.parent;\n    if (p.parent === null) { this.root_ = r; } else if (p.parent.left === p) { p.parent.left = r; } else { p.parent.right = r; }\n    r.left = p;\n    p.parent = r;\n  }\n};\n\n/**\n * @param {Object} p\n */\nTreeMap.prototype.rotateRight = function (p) {\n  if (p != null) {\n    var l = p.left;\n    p.left = l.right;\n    if (l.right != null) { l.right.parent = p; }\n    l.parent = p.parent;\n    if (p.parent === null) { this.root_ = l; } else if (p.parent.right === p) { p.parent.right = l; } else { p.parent.left = l; }\n    l.right = p;\n    p.parent = l;\n  }\n};\n\n/**\n * @return {Object}\n */\nTreeMap.prototype.getFirstEntry = function () {\n  var p = this.root_;\n  if (p != null) {\n    while (p.left != null) {\n      p = p.left;\n    }\n  }\n  return p\n};\n\n/**\n * @param {Object} t\n * @return {Object}\n * @private\n */\nTreeMap.successor = function (t) {\n  if (t === null) { return null } else if (t.right !== null) {\n    var p = t.right;\n    while (p.left !== null) {\n      p = p.left;\n    }\n    return p\n  } else {\n    var p$1 = t.parent;\n    var ch = t;\n    while (p$1 !== null && ch === p$1.right) {\n      ch = p$1;\n      p$1 = p$1.parent;\n    }\n    return p$1\n  }\n};\n\n/**\n * @override\n */\nTreeMap.prototype.size = function () {\n  return this.size_\n};\n\nvar Lineal = function Lineal () {};\n\nLineal.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nLineal.prototype.getClass = function getClass () {\n  return Lineal\n};\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/SortedSet.html\n *\n * @extends {Set}\n * @constructor\n * @private\n */\nfunction SortedSet () {}\nSortedSet.prototype = new Set();\n\n// import Iterator from './Iterator'\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/TreeSet.html\n *\n * @extends {SortedSet}\n * @constructor\n * @private\n */\nfunction TreeSet () {\n  /**\n   * @type {Array}\n   * @private\n  */\n  this.array_ = [];\n\n  if (arguments[0] instanceof Collection) {\n    this.addAll(arguments[0]);\n  }\n}\nTreeSet.prototype = new SortedSet();\n\n/**\n * @override\n */\nTreeSet.prototype.contains = function (o) {\n  var this$1 = this;\n\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    var e = this$1.array_[i];\n    if (e['compareTo'](o) === 0) {\n      return true\n    }\n  }\n  return false\n};\n\n/**\n * @override\n */\nTreeSet.prototype.add = function (o) {\n  var this$1 = this;\n\n  if (this.contains(o)) {\n    return false\n  }\n\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    var e = this$1.array_[i];\n    if (e['compareTo'](o) === 1) {\n      this$1.array_.splice(i, 0, o);\n      return true\n    }\n  }\n\n  this.array_.push(o);\n\n  return true\n};\n\n/**\n * @override\n */\nTreeSet.prototype.addAll = function (c) {\n  var this$1 = this;\n\n  for (var i = c.iterator(); i.hasNext();) {\n    this$1.add(i.next());\n  }\n  return true\n};\n\n/**\n * @override\n */\nTreeSet.prototype.remove = function (e) {\n  throw new OperationNotSupported()\n};\n\n/**\n * @override\n */\nTreeSet.prototype.size = function () {\n  return this.array_.length\n};\n\n/**\n * @override\n */\nTreeSet.prototype.isEmpty = function () {\n  return this.array_.length === 0\n};\n\n/**\n * @override\n */\nTreeSet.prototype.toArray = function () {\n  var this$1 = this;\n\n  var array = [];\n\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    array.push(this$1.array_[i]);\n  }\n\n  return array\n};\n\n/**\n * @override\n */\nTreeSet.prototype.iterator = function () {\n  return new Iterator_$2(this)\n};\n\n/**\n * @extends {javascript.util.Iterator}\n * @param {javascript.util.TreeSet} treeSet\n * @constructor\n * @private\n */\nvar Iterator_$2 = function (treeSet) {\n  /**\n   * @type {javascript.util.TreeSet}\n   * @private\n   */\n  this.treeSet_ = treeSet;\n  /**\n   * @type {number}\n   * @private\n   */\n  this.position_ = 0;\n};\n\n/**\n * @override\n */\nIterator_$2.prototype.next = function () {\n  if (this.position_ === this.treeSet_.size()) {\n    throw new NoSuchElementException()\n  }\n  return this.treeSet_.array_[this.position_++]\n};\n\n/**\n * @override\n */\nIterator_$2.prototype.hasNext = function () {\n  if (this.position_ < this.treeSet_.size()) {\n    return true\n  } else {\n    return false\n  }\n};\n\n/**\n * @override\n */\nIterator_$2.prototype.remove = function () {\n  throw new OperationNotSupported()\n};\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Arrays.html\n *\n * @constructor\n * @private\n */\nvar Arrays = function Arrays () {};\n\nArrays.sort = function sort () {\n  var a = arguments[0];\n  var i;\n  var t;\n  var comparator;\n  var compare;\n  if (arguments.length === 1) {\n    compare = function (a, b) {\n      return a.compareTo(b)\n    };\n    a.sort(compare);\n  } else if (arguments.length === 2) {\n    comparator = arguments[1];\n    compare = function (a, b) {\n      return comparator['compare'](a, b)\n    };\n    a.sort(compare);\n  } else if (arguments.length === 3) {\n    t = a.slice(arguments[1], arguments[2]);\n    t.sort();\n    var r = a.slice(0, arguments[1]).concat(t, a.slice(arguments[2], a.length));\n    a.splice(0, a.length);\n    for (i = 0; i < r.length; i++) {\n      a.push(r[i]);\n    }\n  } else if (arguments.length === 4) {\n    t = a.slice(arguments[1], arguments[2]);\n    comparator = arguments[3];\n    compare = function (a, b) {\n      return comparator['compare'](a, b)\n    };\n    t.sort(compare);\n    r = a.slice(0, arguments[1]).concat(t, a.slice(arguments[2], a.length));\n    a.splice(0, a.length);\n    for (i = 0; i < r.length; i++) {\n      a.push(r[i]);\n    }\n  }\n};\n/**\n * @param {Array} array\n * @return {ArrayList}\n */\nArrays.asList = function asList (array) {\n  var arrayList = new ArrayList();\n  for (var i = 0, len = array.length; i < len; i++) {\n    arrayList.add(array[i]);\n  }\n  return arrayList\n};\n\nvar Dimension = function Dimension () {};\n\nvar staticAccessors$14 = { P: { configurable: true },L: { configurable: true },A: { configurable: true },FALSE: { configurable: true },TRUE: { configurable: true },DONTCARE: { configurable: true },SYM_FALSE: { configurable: true },SYM_TRUE: { configurable: true },SYM_DONTCARE: { configurable: true },SYM_P: { configurable: true },SYM_L: { configurable: true },SYM_A: { configurable: true } };\n\nstaticAccessors$14.P.get = function () { return 0 };\nstaticAccessors$14.L.get = function () { return 1 };\nstaticAccessors$14.A.get = function () { return 2 };\nstaticAccessors$14.FALSE.get = function () { return -1 };\nstaticAccessors$14.TRUE.get = function () { return -2 };\nstaticAccessors$14.DONTCARE.get = function () { return -3 };\nstaticAccessors$14.SYM_FALSE.get = function () { return 'F' };\nstaticAccessors$14.SYM_TRUE.get = function () { return 'T' };\nstaticAccessors$14.SYM_DONTCARE.get = function () { return '*' };\nstaticAccessors$14.SYM_P.get = function () { return '0' };\nstaticAccessors$14.SYM_L.get = function () { return '1' };\nstaticAccessors$14.SYM_A.get = function () { return '2' };\n\nDimension.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nDimension.prototype.getClass = function getClass () {\n  return Dimension\n};\nDimension.toDimensionSymbol = function toDimensionSymbol (dimensionValue) {\n  switch (dimensionValue) {\n    case Dimension.FALSE:\n      return Dimension.SYM_FALSE\n    case Dimension.TRUE:\n      return Dimension.SYM_TRUE\n    case Dimension.DONTCARE:\n      return Dimension.SYM_DONTCARE\n    case Dimension.P:\n      return Dimension.SYM_P\n    case Dimension.L:\n      return Dimension.SYM_L\n    case Dimension.A:\n      return Dimension.SYM_A\n    default:\n  }\n  throw new IllegalArgumentException('Unknown dimension value: ' + dimensionValue)\n};\nDimension.toDimensionValue = function toDimensionValue (dimensionSymbol) {\n  switch (Character.toUpperCase(dimensionSymbol)) {\n    case Dimension.SYM_FALSE:\n      return Dimension.FALSE\n    case Dimension.SYM_TRUE:\n      return Dimension.TRUE\n    case Dimension.SYM_DONTCARE:\n      return Dimension.DONTCARE\n    case Dimension.SYM_P:\n      return Dimension.P\n    case Dimension.SYM_L:\n      return Dimension.L\n    case Dimension.SYM_A:\n      return Dimension.A\n    default:\n  }\n  throw new IllegalArgumentException('Unknown dimension symbol: ' + dimensionSymbol)\n};\n\nObject.defineProperties( Dimension, staticAccessors$14 );\n\nvar GeometryFilter = function GeometryFilter () {};\n\nGeometryFilter.prototype.filter = function filter (geom) {};\nGeometryFilter.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryFilter.prototype.getClass = function getClass () {\n  return GeometryFilter\n};\n\nvar CoordinateSequenceFilter = function CoordinateSequenceFilter () {};\n\nCoordinateSequenceFilter.prototype.filter = function filter (seq, i) {};\nCoordinateSequenceFilter.prototype.isDone = function isDone () {};\nCoordinateSequenceFilter.prototype.isGeometryChanged = function isGeometryChanged () {};\nCoordinateSequenceFilter.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCoordinateSequenceFilter.prototype.getClass = function getClass () {\n  return CoordinateSequenceFilter\n};\n\nvar GeometryCollection = (function (Geometry$$1) {\n  function GeometryCollection (geometries, factory) {\n    Geometry$$1.call(this, factory);\n    this._geometries = geometries || [];\n\n    if (Geometry$$1.hasNullElements(this._geometries)) {\n      throw new IllegalArgumentException('geometries must not contain null elements')\n    }\n  }\n\n  if ( Geometry$$1 ) GeometryCollection.__proto__ = Geometry$$1;\n  GeometryCollection.prototype = Object.create( Geometry$$1 && Geometry$$1.prototype );\n  GeometryCollection.prototype.constructor = GeometryCollection;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n  GeometryCollection.prototype.computeEnvelopeInternal = function computeEnvelopeInternal () {\n    var this$1 = this;\n\n    var envelope = new Envelope();\n    for (var i = 0; i < this._geometries.length; i++) {\n      envelope.expandToInclude(this$1._geometries[i].getEnvelopeInternal());\n    }\n    return envelope\n  };\n  GeometryCollection.prototype.getGeometryN = function getGeometryN (n) {\n    return this._geometries[n]\n  };\n  GeometryCollection.prototype.getSortIndex = function getSortIndex () {\n    return Geometry$$1.SORTINDEX_GEOMETRYCOLLECTION\n  };\n  GeometryCollection.prototype.getCoordinates = function getCoordinates () {\n    var this$1 = this;\n\n    var coordinates = new Array(this.getNumPoints()).fill(null);\n    var k = -1;\n    for (var i = 0; i < this._geometries.length; i++) {\n      var childCoordinates = this$1._geometries[i].getCoordinates();\n      for (var j = 0; j < childCoordinates.length; j++) {\n        k++;\n        coordinates[k] = childCoordinates[j];\n      }\n    }\n    return coordinates\n  };\n  GeometryCollection.prototype.getArea = function getArea () {\n    var this$1 = this;\n\n    var area = 0.0;\n    for (var i = 0; i < this._geometries.length; i++) {\n      area += this$1._geometries[i].getArea();\n    }\n    return area\n  };\n  GeometryCollection.prototype.equalsExact = function equalsExact () {\n    var this$1 = this;\n\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      var otherCollection = other;\n      if (this._geometries.length !== otherCollection._geometries.length) {\n        return false\n      }\n      for (var i = 0; i < this._geometries.length; i++) {\n        if (!this$1._geometries[i].equalsExact(otherCollection._geometries[i], tolerance)) {\n          return false\n        }\n      }\n      return true\n    } else { return Geometry$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  GeometryCollection.prototype.normalize = function normalize () {\n    var this$1 = this;\n\n    for (var i = 0; i < this._geometries.length; i++) {\n      this$1._geometries[i].normalize();\n    }\n    Arrays.sort(this._geometries);\n  };\n  GeometryCollection.prototype.getCoordinate = function getCoordinate () {\n    if (this.isEmpty()) { return null }\n    return this._geometries[0].getCoordinate()\n  };\n  GeometryCollection.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    var this$1 = this;\n\n    var dimension = Dimension.FALSE;\n    for (var i = 0; i < this._geometries.length; i++) {\n      dimension = Math.max(dimension, this$1._geometries[i].getBoundaryDimension());\n    }\n    return dimension\n  };\n  GeometryCollection.prototype.getDimension = function getDimension () {\n    var this$1 = this;\n\n    var dimension = Dimension.FALSE;\n    for (var i = 0; i < this._geometries.length; i++) {\n      dimension = Math.max(dimension, this$1._geometries[i].getDimension());\n    }\n    return dimension\n  };\n  GeometryCollection.prototype.getLength = function getLength () {\n    var this$1 = this;\n\n    var sum = 0.0;\n    for (var i = 0; i < this._geometries.length; i++) {\n      sum += this$1._geometries[i].getLength();\n    }\n    return sum\n  };\n  GeometryCollection.prototype.getNumPoints = function getNumPoints () {\n    var this$1 = this;\n\n    var numPoints = 0;\n    for (var i = 0; i < this._geometries.length; i++) {\n      numPoints += this$1._geometries[i].getNumPoints();\n    }\n    return numPoints\n  };\n  GeometryCollection.prototype.getNumGeometries = function getNumGeometries () {\n    return this._geometries.length\n  };\n  GeometryCollection.prototype.reverse = function reverse () {\n    var this$1 = this;\n\n    var n = this._geometries.length;\n    var revGeoms = new Array(n).fill(null);\n    for (var i = 0; i < this._geometries.length; i++) {\n      revGeoms[i] = this$1._geometries[i].reverse();\n    }\n    return this.getFactory().createGeometryCollection(revGeoms)\n  };\n  GeometryCollection.prototype.compareToSameClass = function compareToSameClass () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var o = arguments[0];\n      var theseElements = new TreeSet(Arrays.asList(this._geometries));\n      var otherElements = new TreeSet(Arrays.asList(o._geometries));\n      return this.compare(theseElements, otherElements)\n    } else if (arguments.length === 2) {\n      var o$1 = arguments[0];\n      var comp = arguments[1];\n      var gc = o$1;\n      var n1 = this.getNumGeometries();\n      var n2 = gc.getNumGeometries();\n      var i = 0;\n      while (i < n1 && i < n2) {\n        var thisGeom = this$1.getGeometryN(i);\n        var otherGeom = gc.getGeometryN(i);\n        var holeComp = thisGeom.compareToSameClass(otherGeom, comp);\n        if (holeComp !== 0) { return holeComp }\n        i++;\n      }\n      if (i < n1) { return 1 }\n      if (i < n2) { return -1 }\n      return 0\n    }\n  };\n  GeometryCollection.prototype.apply = function apply () {\n    var this$1 = this;\n\n    if (hasInterface(arguments[0], CoordinateFilter)) {\n      var filter = arguments[0];\n      for (var i = 0; i < this._geometries.length; i++) {\n        this$1._geometries[i].apply(filter);\n      }\n    } else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\n      var filter$1 = arguments[0];\n      if (this._geometries.length === 0) { return null }\n      for (var i$1 = 0; i$1 < this._geometries.length; i$1++) {\n        this$1._geometries[i$1].apply(filter$1);\n        if (filter$1.isDone()) {\n          break\n        }\n      }\n      if (filter$1.isGeometryChanged()) { this.geometryChanged(); }\n    } else if (hasInterface(arguments[0], GeometryFilter)) {\n      var filter$2 = arguments[0];\n      filter$2.filter(this);\n      for (var i$2 = 0; i$2 < this._geometries.length; i$2++) {\n        this$1._geometries[i$2].apply(filter$2);\n      }\n    } else if (hasInterface(arguments[0], GeometryComponentFilter)) {\n      var filter$3 = arguments[0];\n      filter$3.filter(this);\n      for (var i$3 = 0; i$3 < this._geometries.length; i$3++) {\n        this$1._geometries[i$3].apply(filter$3);\n      }\n    }\n  };\n  GeometryCollection.prototype.getBoundary = function getBoundary () {\n    this.checkNotGeometryCollection(this);\n    Assert.shouldNeverReachHere();\n    return null\n  };\n  GeometryCollection.prototype.clone = function clone () {\n    var this$1 = this;\n\n    var gc = Geometry$$1.prototype.clone.call(this);\n    gc._geometries = new Array(this._geometries.length).fill(null);\n    for (var i = 0; i < this._geometries.length; i++) {\n      gc._geometries[i] = this$1._geometries[i].clone();\n    }\n    return gc\n  };\n  GeometryCollection.prototype.getGeometryType = function getGeometryType () {\n    return 'GeometryCollection'\n  };\n  GeometryCollection.prototype.copy = function copy () {\n    var this$1 = this;\n\n    var geometries = new Array(this._geometries.length).fill(null);\n    for (var i = 0; i < geometries.length; i++) {\n      geometries[i] = this$1._geometries[i].copy();\n    }\n    return new GeometryCollection(geometries, this._factory)\n  };\n  GeometryCollection.prototype.isEmpty = function isEmpty () {\n    var this$1 = this;\n\n    for (var i = 0; i < this._geometries.length; i++) {\n      if (!this$1._geometries[i].isEmpty()) {\n        return false\n      }\n    }\n    return true\n  };\n  GeometryCollection.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  GeometryCollection.prototype.getClass = function getClass () {\n    return GeometryCollection\n  };\n  staticAccessors.serialVersionUID.get = function () { return -5694727726395021467 };\n\n  Object.defineProperties( GeometryCollection, staticAccessors );\n\n  return GeometryCollection;\n}(Geometry));\n\nvar MultiLineString = (function (GeometryCollection$$1) {\n  function MultiLineString () {\n    GeometryCollection$$1.apply(this, arguments);\n  }\n\n  if ( GeometryCollection$$1 ) MultiLineString.__proto__ = GeometryCollection$$1;\n  MultiLineString.prototype = Object.create( GeometryCollection$$1 && GeometryCollection$$1.prototype );\n  MultiLineString.prototype.constructor = MultiLineString;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n\n  MultiLineString.prototype.getSortIndex = function getSortIndex () {\n    return Geometry.SORTINDEX_MULTILINESTRING\n  };\n  MultiLineString.prototype.equalsExact = function equalsExact () {\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      return GeometryCollection$$1.prototype.equalsExact.call(this, other, tolerance)\n    } else { return GeometryCollection$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  MultiLineString.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    if (this.isClosed()) {\n      return Dimension.FALSE\n    }\n    return 0\n  };\n  MultiLineString.prototype.isClosed = function isClosed () {\n    var this$1 = this;\n\n    if (this.isEmpty()) {\n      return false\n    }\n    for (var i = 0; i < this._geometries.length; i++) {\n      if (!this$1._geometries[i].isClosed()) {\n        return false\n      }\n    }\n    return true\n  };\n  MultiLineString.prototype.getDimension = function getDimension () {\n    return 1\n  };\n  MultiLineString.prototype.reverse = function reverse () {\n    var this$1 = this;\n\n    var nLines = this._geometries.length;\n    var revLines = new Array(nLines).fill(null);\n    for (var i = 0; i < this._geometries.length; i++) {\n      revLines[nLines - 1 - i] = this$1._geometries[i].reverse();\n    }\n    return this.getFactory().createMultiLineString(revLines)\n  };\n  MultiLineString.prototype.getBoundary = function getBoundary () {\n    return new BoundaryOp(this).getBoundary()\n  };\n  MultiLineString.prototype.getGeometryType = function getGeometryType () {\n    return 'MultiLineString'\n  };\n  MultiLineString.prototype.copy = function copy () {\n    var this$1 = this;\n\n    var lineStrings = new Array(this._geometries.length).fill(null);\n    for (var i = 0; i < lineStrings.length; i++) {\n      lineStrings[i] = this$1._geometries[i].copy();\n    }\n    return new MultiLineString(lineStrings, this._factory)\n  };\n  MultiLineString.prototype.interfaces_ = function interfaces_ () {\n    return [Lineal]\n  };\n  MultiLineString.prototype.getClass = function getClass () {\n    return MultiLineString\n  };\n  staticAccessors.serialVersionUID.get = function () { return 8166665132445433741 };\n\n  Object.defineProperties( MultiLineString, staticAccessors );\n\n  return MultiLineString;\n}(GeometryCollection));\n\nvar BoundaryOp = function BoundaryOp () {\n  this._geom = null;\n  this._geomFact = null;\n  this._bnRule = null;\n  this._endpointMap = null;\n  if (arguments.length === 1) {\n    var geom = arguments[0];\n    var bnRule = BoundaryNodeRule.MOD2_BOUNDARY_RULE;\n    this._geom = geom;\n    this._geomFact = geom.getFactory();\n    this._bnRule = bnRule;\n  } else if (arguments.length === 2) {\n    var geom$1 = arguments[0];\n    var bnRule$1 = arguments[1];\n    this._geom = geom$1;\n    this._geomFact = geom$1.getFactory();\n    this._bnRule = bnRule$1;\n  }\n};\nBoundaryOp.prototype.boundaryMultiLineString = function boundaryMultiLineString (mLine) {\n  if (this._geom.isEmpty()) {\n    return this.getEmptyMultiPoint()\n  }\n  var bdyPts = this.computeBoundaryCoordinates(mLine);\n  if (bdyPts.length === 1) {\n    return this._geomFact.createPoint(bdyPts[0])\n  }\n  return this._geomFact.createMultiPointFromCoords(bdyPts)\n};\nBoundaryOp.prototype.getBoundary = function getBoundary () {\n  if (this._geom instanceof LineString) { return this.boundaryLineString(this._geom) }\n  if (this._geom instanceof MultiLineString) { return this.boundaryMultiLineString(this._geom) }\n  return this._geom.getBoundary()\n};\nBoundaryOp.prototype.boundaryLineString = function boundaryLineString (line) {\n  if (this._geom.isEmpty()) {\n    return this.getEmptyMultiPoint()\n  }\n  if (line.isClosed()) {\n    var closedEndpointOnBoundary = this._bnRule.isInBoundary(2);\n    if (closedEndpointOnBoundary) {\n      return line.getStartPoint()\n    } else {\n      return this._geomFact.createMultiPoint()\n    }\n  }\n  return this._geomFact.createMultiPoint([line.getStartPoint(), line.getEndPoint()])\n};\nBoundaryOp.prototype.getEmptyMultiPoint = function getEmptyMultiPoint () {\n  return this._geomFact.createMultiPoint()\n};\nBoundaryOp.prototype.computeBoundaryCoordinates = function computeBoundaryCoordinates (mLine) {\n    var this$1 = this;\n\n  var bdyPts = new ArrayList();\n  this._endpointMap = new TreeMap();\n  for (var i = 0; i < mLine.getNumGeometries(); i++) {\n    var line = mLine.getGeometryN(i);\n    if (line.getNumPoints() === 0) { continue }\n    this$1.addEndpoint(line.getCoordinateN(0));\n    this$1.addEndpoint(line.getCoordinateN(line.getNumPoints() - 1));\n  }\n  for (var it = this._endpointMap.entrySet().iterator(); it.hasNext();) {\n    var entry = it.next();\n    var counter = entry.getValue();\n    var valence = counter.count;\n    if (this$1._bnRule.isInBoundary(valence)) {\n      bdyPts.add(entry.getKey());\n    }\n  }\n  return CoordinateArrays.toCoordinateArray(bdyPts)\n};\nBoundaryOp.prototype.addEndpoint = function addEndpoint (pt) {\n  var counter = this._endpointMap.get(pt);\n  if (counter === null) {\n    counter = new Counter();\n    this._endpointMap.put(pt, counter);\n  }\n  counter.count++;\n};\nBoundaryOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBoundaryOp.prototype.getClass = function getClass () {\n  return BoundaryOp\n};\nBoundaryOp.getBoundary = function getBoundary () {\n  if (arguments.length === 1) {\n    var g = arguments[0];\n    var bop = new BoundaryOp(g);\n    return bop.getBoundary()\n  } else if (arguments.length === 2) {\n    var g$1 = arguments[0];\n    var bnRule = arguments[1];\n    var bop$1 = new BoundaryOp(g$1, bnRule);\n    return bop$1.getBoundary()\n  }\n};\n\nvar Counter = function Counter () {\n  this.count = null;\n};\nCounter.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCounter.prototype.getClass = function getClass () {\n  return Counter\n};\n\n// boundary\n\nfunction PrintStream () {}\n\nfunction StringReader () {}\n\nvar DecimalFormat = function DecimalFormat () {};\n\nfunction ByteArrayOutputStream () {}\n\nfunction IOException () {}\n\nfunction LineNumberReader () {}\n\nvar StringUtil = function StringUtil () {};\n\nvar staticAccessors$15 = { NEWLINE: { configurable: true },SIMPLE_ORDINATE_FORMAT: { configurable: true } };\n\nStringUtil.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nStringUtil.prototype.getClass = function getClass () {\n  return StringUtil\n};\nStringUtil.chars = function chars (c, n) {\n  var ch = new Array(n).fill(null);\n  for (var i = 0; i < n; i++) {\n    ch[i] = c;\n  }\n  return String(ch)\n};\nStringUtil.getStackTrace = function getStackTrace () {\n  if (arguments.length === 1) {\n    var t = arguments[0];\n    var os = new ByteArrayOutputStream();\n    var ps = new PrintStream(os);\n    t.printStackTrace(ps);\n    return os.toString()\n  } else if (arguments.length === 2) {\n    var t$1 = arguments[0];\n    var depth = arguments[1];\n    var stackTrace = '';\n    var stringReader = new StringReader(StringUtil.getStackTrace(t$1));\n    var lineNumberReader = new LineNumberReader(stringReader);\n    for (var i = 0; i < depth; i++) {\n      try {\n        stackTrace += lineNumberReader.readLine() + StringUtil.NEWLINE;\n      } catch (e) {\n        if (e instanceof IOException) {\n          Assert.shouldNeverReachHere();\n        } else { throw e }\n      } finally {}\n    }\n    return stackTrace\n  }\n};\nStringUtil.split = function split (s, separator) {\n  var separatorlen = separator.length;\n  var tokenList = new ArrayList();\n  var tmpString = '' + s;\n  var pos = tmpString.indexOf(separator);\n  while (pos >= 0) {\n    var token = tmpString.substring(0, pos);\n    tokenList.add(token);\n    tmpString = tmpString.substring(pos + separatorlen);\n    pos = tmpString.indexOf(separator);\n  }\n  if (tmpString.length > 0) { tokenList.add(tmpString); }\n  var res = new Array(tokenList.size()).fill(null);\n  for (var i = 0; i < res.length; i++) {\n    res[i] = tokenList.get(i);\n  }\n  return res\n};\nStringUtil.toString = function toString () {\n  if (arguments.length === 1) {\n    var d = arguments[0];\n    return StringUtil.SIMPLE_ORDINATE_FORMAT.format(d)\n  }\n};\nStringUtil.spaces = function spaces (n) {\n  return StringUtil.chars(' ', n)\n};\nstaticAccessors$15.NEWLINE.get = function () { return System.getProperty('line.separator') };\nstaticAccessors$15.SIMPLE_ORDINATE_FORMAT.get = function () { return new DecimalFormat('0.#') };\n\nObject.defineProperties( StringUtil, staticAccessors$15 );\n\nvar CoordinateSequences = function CoordinateSequences () {};\n\nCoordinateSequences.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCoordinateSequences.prototype.getClass = function getClass () {\n  return CoordinateSequences\n};\nCoordinateSequences.copyCoord = function copyCoord (src, srcPos, dest, destPos) {\n  var minDim = Math.min(src.getDimension(), dest.getDimension());\n  for (var dim = 0; dim < minDim; dim++) {\n    dest.setOrdinate(destPos, dim, src.getOrdinate(srcPos, dim));\n  }\n};\nCoordinateSequences.isRing = function isRing (seq) {\n  var n = seq.size();\n  if (n === 0) { return true }\n  if (n <= 3) { return false }\n  return seq.getOrdinate(0, CoordinateSequence.X) === seq.getOrdinate(n - 1, CoordinateSequence.X) && seq.getOrdinate(0, CoordinateSequence.Y) === seq.getOrdinate(n - 1, CoordinateSequence.Y)\n};\nCoordinateSequences.isEqual = function isEqual (cs1, cs2) {\n  var cs1Size = cs1.size();\n  var cs2Size = cs2.size();\n  if (cs1Size !== cs2Size) { return false }\n  var dim = Math.min(cs1.getDimension(), cs2.getDimension());\n  for (var i = 0; i < cs1Size; i++) {\n    for (var d = 0; d < dim; d++) {\n      var v1 = cs1.getOrdinate(i, d);\n      var v2 = cs2.getOrdinate(i, d);\n      if (cs1.getOrdinate(i, d) === cs2.getOrdinate(i, d)) { continue }\n      if (Double.isNaN(v1) && Double.isNaN(v2)) { continue }\n      return false\n    }\n  }\n  return true\n};\nCoordinateSequences.extend = function extend (fact, seq, size) {\n  var newseq = fact.create(size, seq.getDimension());\n  var n = seq.size();\n  CoordinateSequences.copy(seq, 0, newseq, 0, n);\n  if (n > 0) {\n    for (var i = n; i < size; i++) { CoordinateSequences.copy(seq, n - 1, newseq, i, 1); }\n  }\n  return newseq\n};\nCoordinateSequences.reverse = function reverse (seq) {\n  var last = seq.size() - 1;\n  var mid = Math.trunc(last / 2);\n  for (var i = 0; i <= mid; i++) {\n    CoordinateSequences.swap(seq, i, last - i);\n  }\n};\nCoordinateSequences.swap = function swap (seq, i, j) {\n  if (i === j) { return null }\n  for (var dim = 0; dim < seq.getDimension(); dim++) {\n    var tmp = seq.getOrdinate(i, dim);\n    seq.setOrdinate(i, dim, seq.getOrdinate(j, dim));\n    seq.setOrdinate(j, dim, tmp);\n  }\n};\nCoordinateSequences.copy = function copy (src, srcPos, dest, destPos, length) {\n  for (var i = 0; i < length; i++) {\n    CoordinateSequences.copyCoord(src, srcPos + i, dest, destPos + i);\n  }\n};\nCoordinateSequences.toString = function toString () {\n  if (arguments.length === 1) {\n    var cs = arguments[0];\n    var size = cs.size();\n    if (size === 0) { return '()' }\n    var dim = cs.getDimension();\n    var buf = new StringBuffer();\n    buf.append('(');\n    for (var i = 0; i < size; i++) {\n      if (i > 0) { buf.append(' '); }\n      for (var d = 0; d < dim; d++) {\n        if (d > 0) { buf.append(','); }\n        buf.append(StringUtil.toString(cs.getOrdinate(i, d)));\n      }\n    }\n    buf.append(')');\n    return buf.toString()\n  }\n};\nCoordinateSequences.ensureValidRing = function ensureValidRing (fact, seq) {\n  var n = seq.size();\n  if (n === 0) { return seq }\n  if (n <= 3) { return CoordinateSequences.createClosedRing(fact, seq, 4) }\n  var isClosed = seq.getOrdinate(0, CoordinateSequence.X) === seq.getOrdinate(n - 1, CoordinateSequence.X) && seq.getOrdinate(0, CoordinateSequence.Y) === seq.getOrdinate(n - 1, CoordinateSequence.Y);\n  if (isClosed) { return seq }\n  return CoordinateSequences.createClosedRing(fact, seq, n + 1)\n};\nCoordinateSequences.createClosedRing = function createClosedRing (fact, seq, size) {\n  var newseq = fact.create(size, seq.getDimension());\n  var n = seq.size();\n  CoordinateSequences.copy(seq, 0, newseq, 0, n);\n  for (var i = n; i < size; i++) { CoordinateSequences.copy(seq, 0, newseq, i, 1); }\n  return newseq\n};\n\nvar LineString = (function (Geometry$$1) {\n  function LineString (points, factory) {\n    Geometry$$1.call(this, factory);\n    this._points = null;\n    this.init(points);\n  }\n\n  if ( Geometry$$1 ) LineString.__proto__ = Geometry$$1;\n  LineString.prototype = Object.create( Geometry$$1 && Geometry$$1.prototype );\n  LineString.prototype.constructor = LineString;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n  LineString.prototype.computeEnvelopeInternal = function computeEnvelopeInternal () {\n    if (this.isEmpty()) {\n      return new Envelope()\n    }\n    return this._points.expandEnvelope(new Envelope())\n  };\n  LineString.prototype.isRing = function isRing () {\n    return this.isClosed() && this.isSimple()\n  };\n  LineString.prototype.getSortIndex = function getSortIndex () {\n    return Geometry$$1.SORTINDEX_LINESTRING\n  };\n  LineString.prototype.getCoordinates = function getCoordinates () {\n    return this._points.toCoordinateArray()\n  };\n  LineString.prototype.equalsExact = function equalsExact () {\n    var this$1 = this;\n\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      var otherLineString = other;\n      if (this._points.size() !== otherLineString._points.size()) {\n        return false\n      }\n      for (var i = 0; i < this._points.size(); i++) {\n        if (!this$1.equal(this$1._points.getCoordinate(i), otherLineString._points.getCoordinate(i), tolerance)) {\n          return false\n        }\n      }\n      return true\n    } else { return Geometry$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  LineString.prototype.normalize = function normalize () {\n    var this$1 = this;\n\n    for (var i = 0; i < Math.trunc(this._points.size() / 2); i++) {\n      var j = this$1._points.size() - 1 - i;\n      if (!this$1._points.getCoordinate(i).equals(this$1._points.getCoordinate(j))) {\n        if (this$1._points.getCoordinate(i).compareTo(this$1._points.getCoordinate(j)) > 0) {\n          CoordinateSequences.reverse(this$1._points);\n        }\n        return null\n      }\n    }\n  };\n  LineString.prototype.getCoordinate = function getCoordinate () {\n    if (this.isEmpty()) { return null }\n    return this._points.getCoordinate(0)\n  };\n  LineString.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    if (this.isClosed()) {\n      return Dimension.FALSE\n    }\n    return 0\n  };\n  LineString.prototype.isClosed = function isClosed () {\n    if (this.isEmpty()) {\n      return false\n    }\n    return this.getCoordinateN(0).equals2D(this.getCoordinateN(this.getNumPoints() - 1))\n  };\n  LineString.prototype.getEndPoint = function getEndPoint () {\n    if (this.isEmpty()) {\n      return null\n    }\n    return this.getPointN(this.getNumPoints() - 1)\n  };\n  LineString.prototype.getDimension = function getDimension () {\n    return 1\n  };\n  LineString.prototype.getLength = function getLength () {\n    return CGAlgorithms.computeLength(this._points)\n  };\n  LineString.prototype.getNumPoints = function getNumPoints () {\n    return this._points.size()\n  };\n  LineString.prototype.reverse = function reverse () {\n    var seq = this._points.copy();\n    CoordinateSequences.reverse(seq);\n    var revLine = this.getFactory().createLineString(seq);\n    return revLine\n  };\n  LineString.prototype.compareToSameClass = function compareToSameClass () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var o = arguments[0];\n      var line = o;\n      var i = 0;\n      var j = 0;\n      while (i < this._points.size() && j < line._points.size()) {\n        var comparison = this$1._points.getCoordinate(i).compareTo(line._points.getCoordinate(j));\n        if (comparison !== 0) {\n          return comparison\n        }\n        i++;\n        j++;\n      }\n      if (i < this._points.size()) {\n        return 1\n      }\n      if (j < line._points.size()) {\n        return -1\n      }\n      return 0\n    } else if (arguments.length === 2) {\n      var o$1 = arguments[0];\n      var comp = arguments[1];\n      var line$1 = o$1;\n      return comp.compare(this._points, line$1._points)\n    }\n  };\n  LineString.prototype.apply = function apply () {\n    var this$1 = this;\n\n    if (hasInterface(arguments[0], CoordinateFilter)) {\n      var filter = arguments[0];\n      for (var i = 0; i < this._points.size(); i++) {\n        filter.filter(this$1._points.getCoordinate(i));\n      }\n    } else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\n      var filter$1 = arguments[0];\n      if (this._points.size() === 0) { return null }\n      for (var i$1 = 0; i$1 < this._points.size(); i$1++) {\n        filter$1.filter(this$1._points, i$1);\n        if (filter$1.isDone()) { break }\n      }\n      if (filter$1.isGeometryChanged()) { this.geometryChanged(); }\n    } else if (hasInterface(arguments[0], GeometryFilter)) {\n      var filter$2 = arguments[0];\n      filter$2.filter(this);\n    } else if (hasInterface(arguments[0], GeometryComponentFilter)) {\n      var filter$3 = arguments[0];\n      filter$3.filter(this);\n    }\n  };\n  LineString.prototype.getBoundary = function getBoundary () {\n    return new BoundaryOp(this).getBoundary()\n  };\n  LineString.prototype.isEquivalentClass = function isEquivalentClass (other) {\n    return other instanceof LineString\n  };\n  LineString.prototype.clone = function clone () {\n    var ls = Geometry$$1.prototype.clone.call(this);\n    ls._points = this._points.clone();\n    return ls\n  };\n  LineString.prototype.getCoordinateN = function getCoordinateN (n) {\n    return this._points.getCoordinate(n)\n  };\n  LineString.prototype.getGeometryType = function getGeometryType () {\n    return 'LineString'\n  };\n  LineString.prototype.copy = function copy () {\n    return new LineString(this._points.copy(), this._factory)\n  };\n  LineString.prototype.getCoordinateSequence = function getCoordinateSequence () {\n    return this._points\n  };\n  LineString.prototype.isEmpty = function isEmpty () {\n    return this._points.size() === 0\n  };\n  LineString.prototype.init = function init (points) {\n    if (points === null) {\n      points = this.getFactory().getCoordinateSequenceFactory().create([]);\n    }\n    if (points.size() === 1) {\n      throw new IllegalArgumentException('Invalid number of points in LineString (found ' + points.size() + ' - must be 0 or >= 2)')\n    }\n    this._points = points;\n  };\n  LineString.prototype.isCoordinate = function isCoordinate (pt) {\n    var this$1 = this;\n\n    for (var i = 0; i < this._points.size(); i++) {\n      if (this$1._points.getCoordinate(i).equals(pt)) {\n        return true\n      }\n    }\n    return false\n  };\n  LineString.prototype.getStartPoint = function getStartPoint () {\n    if (this.isEmpty()) {\n      return null\n    }\n    return this.getPointN(0)\n  };\n  LineString.prototype.getPointN = function getPointN (n) {\n    return this.getFactory().createPoint(this._points.getCoordinate(n))\n  };\n  LineString.prototype.interfaces_ = function interfaces_ () {\n    return [Lineal]\n  };\n  LineString.prototype.getClass = function getClass () {\n    return LineString\n  };\n  staticAccessors.serialVersionUID.get = function () { return 3110669828065365560 };\n\n  Object.defineProperties( LineString, staticAccessors );\n\n  return LineString;\n}(Geometry));\n\nvar Puntal = function Puntal () {};\n\nPuntal.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPuntal.prototype.getClass = function getClass () {\n  return Puntal\n};\n\nvar Point = (function (Geometry$$1) {\n  function Point (coordinates, factory) {\n    Geometry$$1.call(this, factory);\n    this._coordinates = coordinates || null;\n    this.init(this._coordinates);\n  }\n\n  if ( Geometry$$1 ) Point.__proto__ = Geometry$$1;\n  Point.prototype = Object.create( Geometry$$1 && Geometry$$1.prototype );\n  Point.prototype.constructor = Point;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n  Point.prototype.computeEnvelopeInternal = function computeEnvelopeInternal () {\n    if (this.isEmpty()) {\n      return new Envelope()\n    }\n    var env = new Envelope();\n    env.expandToInclude(this._coordinates.getX(0), this._coordinates.getY(0));\n    return env\n  };\n  Point.prototype.getSortIndex = function getSortIndex () {\n    return Geometry$$1.SORTINDEX_POINT\n  };\n  Point.prototype.getCoordinates = function getCoordinates () {\n    return this.isEmpty() ? [] : [this.getCoordinate()]\n  };\n  Point.prototype.equalsExact = function equalsExact () {\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      if (this.isEmpty() && other.isEmpty()) {\n        return true\n      }\n      if (this.isEmpty() !== other.isEmpty()) {\n        return false\n      }\n      return this.equal(other.getCoordinate(), this.getCoordinate(), tolerance)\n    } else { return Geometry$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  Point.prototype.normalize = function normalize () {};\n  Point.prototype.getCoordinate = function getCoordinate () {\n    return this._coordinates.size() !== 0 ? this._coordinates.getCoordinate(0) : null\n  };\n  Point.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    return Dimension.FALSE\n  };\n  Point.prototype.getDimension = function getDimension () {\n    return 0\n  };\n  Point.prototype.getNumPoints = function getNumPoints () {\n    return this.isEmpty() ? 0 : 1\n  };\n  Point.prototype.reverse = function reverse () {\n    return this.copy()\n  };\n  Point.prototype.getX = function getX () {\n    if (this.getCoordinate() === null) {\n      throw new Error('getX called on empty Point')\n    }\n    return this.getCoordinate().x\n  };\n  Point.prototype.compareToSameClass = function compareToSameClass () {\n    if (arguments.length === 1) {\n      var other = arguments[0];\n      var point$1 = other;\n      return this.getCoordinate().compareTo(point$1.getCoordinate())\n    } else if (arguments.length === 2) {\n      var other$1 = arguments[0];\n      var comp = arguments[1];\n      var point = other$1;\n      return comp.compare(this._coordinates, point._coordinates)\n    }\n  };\n  Point.prototype.apply = function apply () {\n    if (hasInterface(arguments[0], CoordinateFilter)) {\n      var filter = arguments[0];\n      if (this.isEmpty()) {\n        return null\n      }\n      filter.filter(this.getCoordinate());\n    } else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\n      var filter$1 = arguments[0];\n      if (this.isEmpty()) { return null }\n      filter$1.filter(this._coordinates, 0);\n      if (filter$1.isGeometryChanged()) { this.geometryChanged(); }\n    } else if (hasInterface(arguments[0], GeometryFilter)) {\n      var filter$2 = arguments[0];\n      filter$2.filter(this);\n    } else if (hasInterface(arguments[0], GeometryComponentFilter)) {\n      var filter$3 = arguments[0];\n      filter$3.filter(this);\n    }\n  };\n  Point.prototype.getBoundary = function getBoundary () {\n    return this.getFactory().createGeometryCollection(null)\n  };\n  Point.prototype.clone = function clone () {\n    var p = Geometry$$1.prototype.clone.call(this);\n    p._coordinates = this._coordinates.clone();\n    return p\n  };\n  Point.prototype.getGeometryType = function getGeometryType () {\n    return 'Point'\n  };\n  Point.prototype.copy = function copy () {\n    return new Point(this._coordinates.copy(), this._factory)\n  };\n  Point.prototype.getCoordinateSequence = function getCoordinateSequence () {\n    return this._coordinates\n  };\n  Point.prototype.getY = function getY () {\n    if (this.getCoordinate() === null) {\n      throw new Error('getY called on empty Point')\n    }\n    return this.getCoordinate().y\n  };\n  Point.prototype.isEmpty = function isEmpty () {\n    return this._coordinates.size() === 0\n  };\n  Point.prototype.init = function init (coordinates) {\n    if (coordinates === null) {\n      coordinates = this.getFactory().getCoordinateSequenceFactory().create([]);\n    }\n    Assert.isTrue(coordinates.size() <= 1);\n    this._coordinates = coordinates;\n  };\n  Point.prototype.isSimple = function isSimple () {\n    return true\n  };\n  Point.prototype.interfaces_ = function interfaces_ () {\n    return [Puntal]\n  };\n  Point.prototype.getClass = function getClass () {\n    return Point\n  };\n  staticAccessors.serialVersionUID.get = function () { return 4902022702746614570 };\n\n  Object.defineProperties( Point, staticAccessors );\n\n  return Point;\n}(Geometry));\n\nvar Polygonal = function Polygonal () {};\n\nPolygonal.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPolygonal.prototype.getClass = function getClass () {\n  return Polygonal\n};\n\nvar Polygon = (function (Geometry$$1) {\n  function Polygon (shell, holes, factory) {\n    Geometry$$1.call(this, factory);\n    this._shell = null;\n    this._holes = null;\n    if (shell === null) {\n      shell = this.getFactory().createLinearRing();\n    }\n    if (holes === null) {\n      holes = [];\n    }\n    if (Geometry$$1.hasNullElements(holes)) {\n      throw new IllegalArgumentException('holes must not contain null elements')\n    }\n    if (shell.isEmpty() && Geometry$$1.hasNonEmptyElements(holes)) {\n      throw new IllegalArgumentException('shell is empty but holes are not')\n    }\n    this._shell = shell;\n    this._holes = holes;\n  }\n\n  if ( Geometry$$1 ) Polygon.__proto__ = Geometry$$1;\n  Polygon.prototype = Object.create( Geometry$$1 && Geometry$$1.prototype );\n  Polygon.prototype.constructor = Polygon;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n  Polygon.prototype.computeEnvelopeInternal = function computeEnvelopeInternal () {\n    return this._shell.getEnvelopeInternal()\n  };\n  Polygon.prototype.getSortIndex = function getSortIndex () {\n    return Geometry$$1.SORTINDEX_POLYGON\n  };\n  Polygon.prototype.getCoordinates = function getCoordinates () {\n    var this$1 = this;\n\n    if (this.isEmpty()) {\n      return []\n    }\n    var coordinates = new Array(this.getNumPoints()).fill(null);\n    var k = -1;\n    var shellCoordinates = this._shell.getCoordinates();\n    for (var x = 0; x < shellCoordinates.length; x++) {\n      k++;\n      coordinates[k] = shellCoordinates[x];\n    }\n    for (var i = 0; i < this._holes.length; i++) {\n      var childCoordinates = this$1._holes[i].getCoordinates();\n      for (var j = 0; j < childCoordinates.length; j++) {\n        k++;\n        coordinates[k] = childCoordinates[j];\n      }\n    }\n    return coordinates\n  };\n  Polygon.prototype.getArea = function getArea () {\n    var this$1 = this;\n\n    var area = 0.0;\n    area += Math.abs(CGAlgorithms.signedArea(this._shell.getCoordinateSequence()));\n    for (var i = 0; i < this._holes.length; i++) {\n      area -= Math.abs(CGAlgorithms.signedArea(this$1._holes[i].getCoordinateSequence()));\n    }\n    return area\n  };\n  Polygon.prototype.isRectangle = function isRectangle () {\n    if (this.getNumInteriorRing() !== 0) { return false }\n    if (this._shell === null) { return false }\n    if (this._shell.getNumPoints() !== 5) { return false }\n    var seq = this._shell.getCoordinateSequence();\n    var env = this.getEnvelopeInternal();\n    for (var i = 0; i < 5; i++) {\n      var x = seq.getX(i);\n      if (!(x === env.getMinX() || x === env.getMaxX())) { return false }\n      var y = seq.getY(i);\n      if (!(y === env.getMinY() || y === env.getMaxY())) { return false }\n    }\n    var prevX = seq.getX(0);\n    var prevY = seq.getY(0);\n    for (var i$1 = 1; i$1 <= 4; i$1++) {\n      var x$1 = seq.getX(i$1);\n      var y$1 = seq.getY(i$1);\n      var xChanged = x$1 !== prevX;\n      var yChanged = y$1 !== prevY;\n      if (xChanged === yChanged) { return false }\n      prevX = x$1;\n      prevY = y$1;\n    }\n    return true\n  };\n  Polygon.prototype.equalsExact = function equalsExact () {\n    var this$1 = this;\n\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      var otherPolygon = other;\n      var thisShell = this._shell;\n      var otherPolygonShell = otherPolygon._shell;\n      if (!thisShell.equalsExact(otherPolygonShell, tolerance)) {\n        return false\n      }\n      if (this._holes.length !== otherPolygon._holes.length) {\n        return false\n      }\n      for (var i = 0; i < this._holes.length; i++) {\n        if (!this$1._holes[i].equalsExact(otherPolygon._holes[i], tolerance)) {\n          return false\n        }\n      }\n      return true\n    } else { return Geometry$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  Polygon.prototype.normalize = function normalize () {\n    var this$1 = this;\n\n    if (arguments.length === 0) {\n      this.normalize(this._shell, true);\n      for (var i = 0; i < this._holes.length; i++) {\n        this$1.normalize(this$1._holes[i], false);\n      }\n      Arrays.sort(this._holes);\n    } else if (arguments.length === 2) {\n      var ring = arguments[0];\n      var clockwise = arguments[1];\n      if (ring.isEmpty()) {\n        return null\n      }\n      var uniqueCoordinates = new Array(ring.getCoordinates().length - 1).fill(null);\n      System.arraycopy(ring.getCoordinates(), 0, uniqueCoordinates, 0, uniqueCoordinates.length);\n      var minCoordinate = CoordinateArrays.minCoordinate(ring.getCoordinates());\n      CoordinateArrays.scroll(uniqueCoordinates, minCoordinate);\n      System.arraycopy(uniqueCoordinates, 0, ring.getCoordinates(), 0, uniqueCoordinates.length);\n      ring.getCoordinates()[uniqueCoordinates.length] = uniqueCoordinates[0];\n      if (CGAlgorithms.isCCW(ring.getCoordinates()) === clockwise) {\n        CoordinateArrays.reverse(ring.getCoordinates());\n      }\n    }\n  };\n  Polygon.prototype.getCoordinate = function getCoordinate () {\n    return this._shell.getCoordinate()\n  };\n  Polygon.prototype.getNumInteriorRing = function getNumInteriorRing () {\n    return this._holes.length\n  };\n  Polygon.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    return 1\n  };\n  Polygon.prototype.getDimension = function getDimension () {\n    return 2\n  };\n  Polygon.prototype.getLength = function getLength () {\n    var this$1 = this;\n\n    var len = 0.0;\n    len += this._shell.getLength();\n    for (var i = 0; i < this._holes.length; i++) {\n      len += this$1._holes[i].getLength();\n    }\n    return len\n  };\n  Polygon.prototype.getNumPoints = function getNumPoints () {\n    var this$1 = this;\n\n    var numPoints = this._shell.getNumPoints();\n    for (var i = 0; i < this._holes.length; i++) {\n      numPoints += this$1._holes[i].getNumPoints();\n    }\n    return numPoints\n  };\n  Polygon.prototype.reverse = function reverse () {\n    var this$1 = this;\n\n    var poly = this.copy();\n    poly._shell = this._shell.copy().reverse();\n    poly._holes = new Array(this._holes.length).fill(null);\n    for (var i = 0; i < this._holes.length; i++) {\n      poly._holes[i] = this$1._holes[i].copy().reverse();\n    }\n    return poly\n  };\n  Polygon.prototype.convexHull = function convexHull () {\n    return this.getExteriorRing().convexHull()\n  };\n  Polygon.prototype.compareToSameClass = function compareToSameClass () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var o = arguments[0];\n      var thisShell = this._shell;\n      var otherShell = o._shell;\n      return thisShell.compareToSameClass(otherShell)\n    } else if (arguments.length === 2) {\n      var o$1 = arguments[0];\n      var comp = arguments[1];\n      var poly = o$1;\n      var thisShell$1 = this._shell;\n      var otherShell$1 = poly._shell;\n      var shellComp = thisShell$1.compareToSameClass(otherShell$1, comp);\n      if (shellComp !== 0) { return shellComp }\n      var nHole1 = this.getNumInteriorRing();\n      var nHole2 = poly.getNumInteriorRing();\n      var i = 0;\n      while (i < nHole1 && i < nHole2) {\n        var thisHole = this$1.getInteriorRingN(i);\n        var otherHole = poly.getInteriorRingN(i);\n        var holeComp = thisHole.compareToSameClass(otherHole, comp);\n        if (holeComp !== 0) { return holeComp }\n        i++;\n      }\n      if (i < nHole1) { return 1 }\n      if (i < nHole2) { return -1 }\n      return 0\n    }\n  };\n  Polygon.prototype.apply = function apply (filter) {\n    var this$1 = this;\n\n    if (hasInterface(filter, CoordinateFilter)) {\n      this._shell.apply(filter);\n      for (var i$1 = 0; i$1 < this._holes.length; i$1++) {\n        this$1._holes[i$1].apply(filter);\n      }\n    } else if (hasInterface(filter, CoordinateSequenceFilter)) {\n      this._shell.apply(filter);\n      if (!filter.isDone()) {\n        for (var i$2 = 0; i$2 < this._holes.length; i$2++) {\n          this$1._holes[i$2].apply(filter);\n          if (filter.isDone()) { break }\n        }\n      }\n      if (filter.isGeometryChanged()) { this.geometryChanged(); }\n    } else if (hasInterface(filter, GeometryFilter)) {\n      filter.filter(this);\n    } else if (hasInterface(filter, GeometryComponentFilter)) {\n      filter.filter(this);\n      this._shell.apply(filter);\n      for (var i = 0; i < this._holes.length; i++) {\n        this$1._holes[i].apply(filter);\n      }\n    }\n  };\n  Polygon.prototype.getBoundary = function getBoundary () {\n    var this$1 = this;\n\n    if (this.isEmpty()) {\n      return this.getFactory().createMultiLineString()\n    }\n    var rings = new Array(this._holes.length + 1).fill(null);\n    rings[0] = this._shell;\n    for (var i = 0; i < this._holes.length; i++) {\n      rings[i + 1] = this$1._holes[i];\n    }\n    if (rings.length <= 1) { return this.getFactory().createLinearRing(rings[0].getCoordinateSequence()) }\n    return this.getFactory().createMultiLineString(rings)\n  };\n  Polygon.prototype.clone = function clone () {\n    var this$1 = this;\n\n    var poly = Geometry$$1.prototype.clone.call(this);\n    poly._shell = this._shell.clone();\n    poly._holes = new Array(this._holes.length).fill(null);\n    for (var i = 0; i < this._holes.length; i++) {\n      poly._holes[i] = this$1._holes[i].clone();\n    }\n    return poly\n  };\n  Polygon.prototype.getGeometryType = function getGeometryType () {\n    return 'Polygon'\n  };\n  Polygon.prototype.copy = function copy () {\n    var this$1 = this;\n\n    var shell = this._shell.copy();\n    var holes = new Array(this._holes.length).fill(null);\n    for (var i = 0; i < holes.length; i++) {\n      holes[i] = this$1._holes[i].copy();\n    }\n    return new Polygon(shell, holes, this._factory)\n  };\n  Polygon.prototype.getExteriorRing = function getExteriorRing () {\n    return this._shell\n  };\n  Polygon.prototype.isEmpty = function isEmpty () {\n    return this._shell.isEmpty()\n  };\n  Polygon.prototype.getInteriorRingN = function getInteriorRingN (n) {\n    return this._holes[n]\n  };\n  Polygon.prototype.interfaces_ = function interfaces_ () {\n    return [Polygonal]\n  };\n  Polygon.prototype.getClass = function getClass () {\n    return Polygon\n  };\n  staticAccessors.serialVersionUID.get = function () { return -3494792200821764533 };\n\n  Object.defineProperties( Polygon, staticAccessors );\n\n  return Polygon;\n}(Geometry));\n\nvar MultiPoint = (function (GeometryCollection$$1) {\n  function MultiPoint () {\n    GeometryCollection$$1.apply(this, arguments);\n  }\n\n  if ( GeometryCollection$$1 ) MultiPoint.__proto__ = GeometryCollection$$1;\n  MultiPoint.prototype = Object.create( GeometryCollection$$1 && GeometryCollection$$1.prototype );\n  MultiPoint.prototype.constructor = MultiPoint;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n\n  MultiPoint.prototype.getSortIndex = function getSortIndex () {\n    return Geometry.SORTINDEX_MULTIPOINT\n  };\n  MultiPoint.prototype.isValid = function isValid () {\n    return true\n  };\n  MultiPoint.prototype.equalsExact = function equalsExact () {\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      return GeometryCollection$$1.prototype.equalsExact.call(this, other, tolerance)\n    } else { return GeometryCollection$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  MultiPoint.prototype.getCoordinate = function getCoordinate () {\n    if (arguments.length === 1) {\n      var n = arguments[0];\n      return this._geometries[n].getCoordinate()\n    } else { return GeometryCollection$$1.prototype.getCoordinate.apply(this, arguments) }\n  };\n  MultiPoint.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    return Dimension.FALSE\n  };\n  MultiPoint.prototype.getDimension = function getDimension () {\n    return 0\n  };\n  MultiPoint.prototype.getBoundary = function getBoundary () {\n    return this.getFactory().createGeometryCollection(null)\n  };\n  MultiPoint.prototype.getGeometryType = function getGeometryType () {\n    return 'MultiPoint'\n  };\n  MultiPoint.prototype.copy = function copy () {\n    var this$1 = this;\n\n    var points = new Array(this._geometries.length).fill(null);\n    for (var i = 0; i < points.length; i++) {\n      points[i] = this$1._geometries[i].copy();\n    }\n    return new MultiPoint(points, this._factory)\n  };\n  MultiPoint.prototype.interfaces_ = function interfaces_ () {\n    return [Puntal]\n  };\n  MultiPoint.prototype.getClass = function getClass () {\n    return MultiPoint\n  };\n  staticAccessors.serialVersionUID.get = function () { return -8048474874175355449 };\n\n  Object.defineProperties( MultiPoint, staticAccessors );\n\n  return MultiPoint;\n}(GeometryCollection));\n\nvar LinearRing = (function (LineString$$1) {\n  function LinearRing (points, factory) {\n    if (points instanceof Coordinate && factory instanceof GeometryFactory) {\n      points = factory.getCoordinateSequenceFactory().create(points);\n    }\n    LineString$$1.call(this, points, factory);\n    this.validateConstruction();\n  }\n\n  if ( LineString$$1 ) LinearRing.__proto__ = LineString$$1;\n  LinearRing.prototype = Object.create( LineString$$1 && LineString$$1.prototype );\n  LinearRing.prototype.constructor = LinearRing;\n\n  var staticAccessors = { MINIMUM_VALID_SIZE: { configurable: true },serialVersionUID: { configurable: true } };\n  LinearRing.prototype.getSortIndex = function getSortIndex () {\n    return Geometry.SORTINDEX_LINEARRING\n  };\n  LinearRing.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    return Dimension.FALSE\n  };\n  LinearRing.prototype.isClosed = function isClosed () {\n    if (this.isEmpty()) {\n      return true\n    }\n    return LineString$$1.prototype.isClosed.call(this)\n  };\n  LinearRing.prototype.reverse = function reverse () {\n    var seq = this._points.copy();\n    CoordinateSequences.reverse(seq);\n    var rev = this.getFactory().createLinearRing(seq);\n    return rev\n  };\n  LinearRing.prototype.validateConstruction = function validateConstruction () {\n    if (!this.isEmpty() && !LineString$$1.prototype.isClosed.call(this)) {\n      throw new IllegalArgumentException('Points of LinearRing do not form a closed linestring')\n    }\n    if (this.getCoordinateSequence().size() >= 1 && this.getCoordinateSequence().size() < LinearRing.MINIMUM_VALID_SIZE) {\n      throw new IllegalArgumentException('Invalid number of points in LinearRing (found ' + this.getCoordinateSequence().size() + ' - must be 0 or >= 4)')\n    }\n  };\n  LinearRing.prototype.getGeometryType = function getGeometryType () {\n    return 'LinearRing'\n  };\n  LinearRing.prototype.copy = function copy () {\n    return new LinearRing(this._points.copy(), this._factory)\n  };\n  LinearRing.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  LinearRing.prototype.getClass = function getClass () {\n    return LinearRing\n  };\n  staticAccessors.MINIMUM_VALID_SIZE.get = function () { return 4 };\n  staticAccessors.serialVersionUID.get = function () { return -4261142084085851829 };\n\n  Object.defineProperties( LinearRing, staticAccessors );\n\n  return LinearRing;\n}(LineString));\n\nvar MultiPolygon = (function (GeometryCollection$$1) {\n  function MultiPolygon () {\n    GeometryCollection$$1.apply(this, arguments);\n  }\n\n  if ( GeometryCollection$$1 ) MultiPolygon.__proto__ = GeometryCollection$$1;\n  MultiPolygon.prototype = Object.create( GeometryCollection$$1 && GeometryCollection$$1.prototype );\n  MultiPolygon.prototype.constructor = MultiPolygon;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n\n  MultiPolygon.prototype.getSortIndex = function getSortIndex () {\n    return Geometry.SORTINDEX_MULTIPOLYGON\n  };\n  MultiPolygon.prototype.equalsExact = function equalsExact () {\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      return GeometryCollection$$1.prototype.equalsExact.call(this, other, tolerance)\n    } else { return GeometryCollection$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  MultiPolygon.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    return 1\n  };\n  MultiPolygon.prototype.getDimension = function getDimension () {\n    return 2\n  };\n  MultiPolygon.prototype.reverse = function reverse () {\n    var this$1 = this;\n\n    var n = this._geometries.length;\n    var revGeoms = new Array(n).fill(null);\n    for (var i = 0; i < this._geometries.length; i++) {\n      revGeoms[i] = this$1._geometries[i].reverse();\n    }\n    return this.getFactory().createMultiPolygon(revGeoms)\n  };\n  MultiPolygon.prototype.getBoundary = function getBoundary () {\n    var this$1 = this;\n\n    if (this.isEmpty()) {\n      return this.getFactory().createMultiLineString()\n    }\n    var allRings = new ArrayList();\n    for (var i = 0; i < this._geometries.length; i++) {\n      var polygon = this$1._geometries[i];\n      var rings = polygon.getBoundary();\n      for (var j = 0; j < rings.getNumGeometries(); j++) {\n        allRings.add(rings.getGeometryN(j));\n      }\n    }\n    var allRingsArray = new Array(allRings.size()).fill(null);\n    return this.getFactory().createMultiLineString(allRings.toArray(allRingsArray))\n  };\n  MultiPolygon.prototype.getGeometryType = function getGeometryType () {\n    return 'MultiPolygon'\n  };\n  MultiPolygon.prototype.copy = function copy () {\n    var this$1 = this;\n\n    var polygons = new Array(this._geometries.length).fill(null);\n    for (var i = 0; i < polygons.length; i++) {\n      polygons[i] = this$1._geometries[i].copy();\n    }\n    return new MultiPolygon(polygons, this._factory)\n  };\n  MultiPolygon.prototype.interfaces_ = function interfaces_ () {\n    return [Polygonal]\n  };\n  MultiPolygon.prototype.getClass = function getClass () {\n    return MultiPolygon\n  };\n  staticAccessors.serialVersionUID.get = function () { return -551033529766975875 };\n\n  Object.defineProperties( MultiPolygon, staticAccessors );\n\n  return MultiPolygon;\n}(GeometryCollection));\n\nvar GeometryEditor = function GeometryEditor (factory) {\n  this._factory = factory || null;\n  this._isUserDataCopied = false;\n};\n\nvar staticAccessors$16 = { NoOpGeometryOperation: { configurable: true },CoordinateOperation: { configurable: true },CoordinateSequenceOperation: { configurable: true } };\nGeometryEditor.prototype.setCopyUserData = function setCopyUserData (isUserDataCopied) {\n  this._isUserDataCopied = isUserDataCopied;\n};\nGeometryEditor.prototype.edit = function edit (geometry, operation) {\n  if (geometry === null) { return null }\n  var result = this.editInternal(geometry, operation);\n  if (this._isUserDataCopied) {\n    result.setUserData(geometry.getUserData());\n  }\n  return result\n};\nGeometryEditor.prototype.editInternal = function editInternal (geometry, operation) {\n  if (this._factory === null) { this._factory = geometry.getFactory(); }\n  if (geometry instanceof GeometryCollection) {\n    return this.editGeometryCollection(geometry, operation)\n  }\n  if (geometry instanceof Polygon) {\n    return this.editPolygon(geometry, operation)\n  }\n  if (geometry instanceof Point) {\n    return operation.edit(geometry, this._factory)\n  }\n  if (geometry instanceof LineString) {\n    return operation.edit(geometry, this._factory)\n  }\n  Assert.shouldNeverReachHere('Unsupported Geometry class: ' + geometry.getClass().getName());\n  return null\n};\nGeometryEditor.prototype.editGeometryCollection = function editGeometryCollection (collection, operation) {\n    var this$1 = this;\n\n  var collectionForType = operation.edit(collection, this._factory);\n  var geometries = new ArrayList();\n  for (var i = 0; i < collectionForType.getNumGeometries(); i++) {\n    var geometry = this$1.edit(collectionForType.getGeometryN(i), operation);\n    if (geometry === null || geometry.isEmpty()) {\n      continue\n    }\n    geometries.add(geometry);\n  }\n  if (collectionForType.getClass() === MultiPoint) {\n    return this._factory.createMultiPoint(geometries.toArray([]))\n  }\n  if (collectionForType.getClass() === MultiLineString) {\n    return this._factory.createMultiLineString(geometries.toArray([]))\n  }\n  if (collectionForType.getClass() === MultiPolygon) {\n    return this._factory.createMultiPolygon(geometries.toArray([]))\n  }\n  return this._factory.createGeometryCollection(geometries.toArray([]))\n};\nGeometryEditor.prototype.editPolygon = function editPolygon (polygon, operation) {\n    var this$1 = this;\n\n  var newPolygon = operation.edit(polygon, this._factory);\n  if (newPolygon === null) { newPolygon = this._factory.createPolygon(null); }\n  if (newPolygon.isEmpty()) {\n    return newPolygon\n  }\n  var shell = this.edit(newPolygon.getExteriorRing(), operation);\n  if (shell === null || shell.isEmpty()) {\n    return this._factory.createPolygon()\n  }\n  var holes = new ArrayList();\n  for (var i = 0; i < newPolygon.getNumInteriorRing(); i++) {\n    var hole = this$1.edit(newPolygon.getInteriorRingN(i), operation);\n    if (hole === null || hole.isEmpty()) {\n      continue\n    }\n    holes.add(hole);\n  }\n  return this._factory.createPolygon(shell, holes.toArray([]))\n};\nGeometryEditor.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryEditor.prototype.getClass = function getClass () {\n  return GeometryEditor\n};\nGeometryEditor.GeometryEditorOperation = function GeometryEditorOperation () {};\nstaticAccessors$16.NoOpGeometryOperation.get = function () { return NoOpGeometryOperation };\nstaticAccessors$16.CoordinateOperation.get = function () { return CoordinateOperation };\nstaticAccessors$16.CoordinateSequenceOperation.get = function () { return CoordinateSequenceOperation };\n\nObject.defineProperties( GeometryEditor, staticAccessors$16 );\n\nvar NoOpGeometryOperation = function NoOpGeometryOperation () {};\n\nNoOpGeometryOperation.prototype.edit = function edit (geometry, factory) {\n  return geometry\n};\nNoOpGeometryOperation.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryEditor.GeometryEditorOperation]\n};\nNoOpGeometryOperation.prototype.getClass = function getClass () {\n  return NoOpGeometryOperation\n};\n\nvar CoordinateOperation = function CoordinateOperation () {};\n\nCoordinateOperation.prototype.edit = function edit (geometry, factory) {\n  var coords = this.editCoordinates(geometry.getCoordinates(), geometry);\n  if (coords === null) { return geometry }\n  if (geometry instanceof LinearRing) {\n    return factory.createLinearRing(coords)\n  }\n  if (geometry instanceof LineString) {\n    return factory.createLineString(coords)\n  }\n  if (geometry instanceof Point) {\n    if (coords.length > 0) {\n      return factory.createPoint(coords[0])\n    } else {\n      return factory.createPoint()\n    }\n  }\n  return geometry\n};\nCoordinateOperation.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryEditor.GeometryEditorOperation]\n};\nCoordinateOperation.prototype.getClass = function getClass () {\n  return CoordinateOperation\n};\n\nvar CoordinateSequenceOperation = function CoordinateSequenceOperation () {};\n\nCoordinateSequenceOperation.prototype.edit = function edit (geometry, factory) {\n  if (geometry instanceof LinearRing) {\n    return factory.createLinearRing(this.edit(geometry.getCoordinateSequence(), geometry))\n  }\n  if (geometry instanceof LineString) {\n    return factory.createLineString(this.edit(geometry.getCoordinateSequence(), geometry))\n  }\n  if (geometry instanceof Point) {\n    return factory.createPoint(this.edit(geometry.getCoordinateSequence(), geometry))\n  }\n  return geometry\n};\nCoordinateSequenceOperation.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryEditor.GeometryEditorOperation]\n};\nCoordinateSequenceOperation.prototype.getClass = function getClass () {\n  return CoordinateSequenceOperation\n};\n\nvar CoordinateArraySequence = function CoordinateArraySequence () {\n  var this$1 = this;\n\n  this._dimension = 3;\n  this._coordinates = null;\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Array) {\n      this._coordinates = arguments[0];\n      this._dimension = 3;\n    } else if (Number.isInteger(arguments[0])) {\n      var size = arguments[0];\n      this._coordinates = new Array(size).fill(null);\n      for (var i = 0; i < size; i++) {\n        this$1._coordinates[i] = new Coordinate();\n      }\n    } else if (hasInterface(arguments[0], CoordinateSequence)) {\n      var coordSeq = arguments[0];\n      if (coordSeq === null) {\n        this._coordinates = new Array(0).fill(null);\n        return null\n      }\n      this._dimension = coordSeq.getDimension();\n      this._coordinates = new Array(coordSeq.size()).fill(null);\n      for (var i$1 = 0; i$1 < this._coordinates.length; i$1++) {\n        this$1._coordinates[i$1] = coordSeq.getCoordinateCopy(i$1);\n      }\n    }\n  } else if (arguments.length === 2) {\n    if (arguments[0] instanceof Array && Number.isInteger(arguments[1])) {\n      var coordinates = arguments[0];\n      var dimension = arguments[1];\n      this._coordinates = coordinates;\n      this._dimension = dimension;\n      if (coordinates === null) { this._coordinates = new Array(0).fill(null); }\n    } else if (Number.isInteger(arguments[0]) && Number.isInteger(arguments[1])) {\n      var size$1 = arguments[0];\n      var dimension$1 = arguments[1];\n      this._coordinates = new Array(size$1).fill(null);\n      this._dimension = dimension$1;\n      for (var i$2 = 0; i$2 < size$1; i$2++) {\n        this$1._coordinates[i$2] = new Coordinate();\n      }\n    }\n  }\n};\n\nvar staticAccessors$18 = { serialVersionUID: { configurable: true } };\nCoordinateArraySequence.prototype.setOrdinate = function setOrdinate (index, ordinateIndex, value) {\n  switch (ordinateIndex) {\n    case CoordinateSequence.X:\n      this._coordinates[index].x = value;\n      break\n    case CoordinateSequence.Y:\n      this._coordinates[index].y = value;\n      break\n    case CoordinateSequence.Z:\n      this._coordinates[index].z = value;\n      break\n    default:\n      throw new IllegalArgumentException('invalid ordinateIndex')\n  }\n};\nCoordinateArraySequence.prototype.size = function size () {\n  return this._coordinates.length\n};\nCoordinateArraySequence.prototype.getOrdinate = function getOrdinate (index, ordinateIndex) {\n  switch (ordinateIndex) {\n    case CoordinateSequence.X:\n      return this._coordinates[index].x\n    case CoordinateSequence.Y:\n      return this._coordinates[index].y\n    case CoordinateSequence.Z:\n      return this._coordinates[index].z\n    default:\n  }\n  return Double.NaN\n};\nCoordinateArraySequence.prototype.getCoordinate = function getCoordinate () {\n  if (arguments.length === 1) {\n    var i = arguments[0];\n    return this._coordinates[i]\n  } else if (arguments.length === 2) {\n    var index = arguments[0];\n    var coord = arguments[1];\n    coord.x = this._coordinates[index].x;\n    coord.y = this._coordinates[index].y;\n    coord.z = this._coordinates[index].z;\n  }\n};\nCoordinateArraySequence.prototype.getCoordinateCopy = function getCoordinateCopy (i) {\n  return new Coordinate(this._coordinates[i])\n};\nCoordinateArraySequence.prototype.getDimension = function getDimension () {\n  return this._dimension\n};\nCoordinateArraySequence.prototype.getX = function getX (index) {\n  return this._coordinates[index].x\n};\nCoordinateArraySequence.prototype.clone = function clone () {\n    var this$1 = this;\n\n  var cloneCoordinates = new Array(this.size()).fill(null);\n  for (var i = 0; i < this._coordinates.length; i++) {\n    cloneCoordinates[i] = this$1._coordinates[i].clone();\n  }\n  return new CoordinateArraySequence(cloneCoordinates, this._dimension)\n};\nCoordinateArraySequence.prototype.expandEnvelope = function expandEnvelope (env) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._coordinates.length; i++) {\n    env.expandToInclude(this$1._coordinates[i]);\n  }\n  return env\n};\nCoordinateArraySequence.prototype.copy = function copy () {\n    var this$1 = this;\n\n  var cloneCoordinates = new Array(this.size()).fill(null);\n  for (var i = 0; i < this._coordinates.length; i++) {\n    cloneCoordinates[i] = this$1._coordinates[i].copy();\n  }\n  return new CoordinateArraySequence(cloneCoordinates, this._dimension)\n};\nCoordinateArraySequence.prototype.toString = function toString () {\n    var this$1 = this;\n\n  if (this._coordinates.length > 0) {\n    var strBuf = new StringBuffer(17 * this._coordinates.length);\n    strBuf.append('(');\n    strBuf.append(this._coordinates[0]);\n    for (var i = 1; i < this._coordinates.length; i++) {\n      strBuf.append(', ');\n      strBuf.append(this$1._coordinates[i]);\n    }\n    strBuf.append(')');\n    return strBuf.toString()\n  } else {\n    return '()'\n  }\n};\nCoordinateArraySequence.prototype.getY = function getY (index) {\n  return this._coordinates[index].y\n};\nCoordinateArraySequence.prototype.toCoordinateArray = function toCoordinateArray () {\n  return this._coordinates\n};\nCoordinateArraySequence.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateSequence, Serializable]\n};\nCoordinateArraySequence.prototype.getClass = function getClass () {\n  return CoordinateArraySequence\n};\nstaticAccessors$18.serialVersionUID.get = function () { return -915438501601840650 };\n\nObject.defineProperties( CoordinateArraySequence, staticAccessors$18 );\n\nvar CoordinateArraySequenceFactory = function CoordinateArraySequenceFactory () {};\n\nvar staticAccessors$17 = { serialVersionUID: { configurable: true },instanceObject: { configurable: true } };\n\nCoordinateArraySequenceFactory.prototype.readResolve = function readResolve () {\n  return CoordinateArraySequenceFactory.instance()\n};\nCoordinateArraySequenceFactory.prototype.create = function create () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Array) {\n      var coordinates = arguments[0];\n      return new CoordinateArraySequence(coordinates)\n    } else if (hasInterface(arguments[0], CoordinateSequence)) {\n      var coordSeq = arguments[0];\n      return new CoordinateArraySequence(coordSeq)\n    }\n  } else if (arguments.length === 2) {\n    var size = arguments[0];\n    var dimension = arguments[1];\n    if (dimension > 3) { dimension = 3; }\n    if (dimension < 2) { return new CoordinateArraySequence(size) }\n    return new CoordinateArraySequence(size, dimension)\n  }\n};\nCoordinateArraySequenceFactory.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateSequenceFactory, Serializable]\n};\nCoordinateArraySequenceFactory.prototype.getClass = function getClass () {\n  return CoordinateArraySequenceFactory\n};\nCoordinateArraySequenceFactory.instance = function instance () {\n  return CoordinateArraySequenceFactory.instanceObject\n};\n\nstaticAccessors$17.serialVersionUID.get = function () { return -4099577099607551657 };\nstaticAccessors$17.instanceObject.get = function () { return new CoordinateArraySequenceFactory() };\n\nObject.defineProperties( CoordinateArraySequenceFactory, staticAccessors$17 );\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/HashMap.html\n *\n * @extends {javascript.util.Map}\n * @constructor\n * @private\n */\nvar HashMap = (function (MapInterface) {\n  function HashMap () {\n    MapInterface.call(this);\n    this.map_ = new Map();\n  }\n\n  if ( MapInterface ) HashMap.__proto__ = MapInterface;\n  HashMap.prototype = Object.create( MapInterface && MapInterface.prototype );\n  HashMap.prototype.constructor = HashMap;\n  /**\n   * @override\n   */\n  HashMap.prototype.get = function get (key) {\n    return this.map_.get(key) || null\n  };\n\n  /**\n   * @override\n   */\n  HashMap.prototype.put = function put (key, value) {\n    this.map_.set(key, value);\n    return value\n  };\n\n  /**\n   * @override\n   */\n  HashMap.prototype.values = function values () {\n    var arrayList = new ArrayList();\n    var it = this.map_.values();\n    var o = it.next();\n    while (!o.done) {\n      arrayList.add(o.value);\n      o = it.next();\n    }\n    return arrayList\n  };\n\n  /**\n   * @override\n   */\n  HashMap.prototype.entrySet = function entrySet () {\n    var hashSet = new HashSet();\n    this.map_.entries().forEach(function (entry) { return hashSet.add(entry); });\n    return hashSet\n  };\n\n  /**\n   * @override\n   */\n  HashMap.prototype.size = function size () {\n    return this.map_.size()\n  };\n\n  return HashMap;\n}(Map$1));\n\nvar PrecisionModel = function PrecisionModel () {\n  this._modelType = null;\n  this._scale = null;\n  if (arguments.length === 0) {\n    this._modelType = PrecisionModel.FLOATING;\n  } else if (arguments.length === 1) {\n    if (arguments[0] instanceof Type) {\n      var modelType = arguments[0];\n      this._modelType = modelType;\n      if (modelType === PrecisionModel.FIXED) {\n        this.setScale(1.0);\n      }\n    } else if (typeof arguments[0] === 'number') {\n      var scale = arguments[0];\n      this._modelType = PrecisionModel.FIXED;\n      this.setScale(scale);\n    } else if (arguments[0] instanceof PrecisionModel) {\n      var pm = arguments[0];\n      this._modelType = pm._modelType;\n      this._scale = pm._scale;\n    }\n  }\n};\n\nvar staticAccessors$19 = { serialVersionUID: { configurable: true },maximumPreciseValue: { configurable: true } };\nPrecisionModel.prototype.equals = function equals (other) {\n  if (!(other instanceof PrecisionModel)) {\n    return false\n  }\n  var otherPrecisionModel = other;\n  return this._modelType === otherPrecisionModel._modelType && this._scale === otherPrecisionModel._scale\n};\nPrecisionModel.prototype.compareTo = function compareTo (o) {\n  var other = o;\n  var sigDigits = this.getMaximumSignificantDigits();\n  var otherSigDigits = other.getMaximumSignificantDigits();\n  return new Integer(sigDigits).compareTo(new Integer(otherSigDigits))\n};\nPrecisionModel.prototype.getScale = function getScale () {\n  return this._scale\n};\nPrecisionModel.prototype.isFloating = function isFloating () {\n  return this._modelType === PrecisionModel.FLOATING || this._modelType === PrecisionModel.FLOATING_SINGLE\n};\nPrecisionModel.prototype.getType = function getType () {\n  return this._modelType\n};\nPrecisionModel.prototype.toString = function toString () {\n  var description = 'UNKNOWN';\n  if (this._modelType === PrecisionModel.FLOATING) {\n    description = 'Floating';\n  } else if (this._modelType === PrecisionModel.FLOATING_SINGLE) {\n    description = 'Floating-Single';\n  } else if (this._modelType === PrecisionModel.FIXED) {\n    description = 'Fixed (Scale=' + this.getScale() + ')';\n  }\n  return description\n};\nPrecisionModel.prototype.makePrecise = function makePrecise () {\n  if (typeof arguments[0] === 'number') {\n    var val = arguments[0];\n    if (Double.isNaN(val)) { return val }\n    if (this._modelType === PrecisionModel.FLOATING_SINGLE) {\n      var floatSingleVal = val;\n      return floatSingleVal\n    }\n    if (this._modelType === PrecisionModel.FIXED) {\n      return Math.round(val * this._scale) / this._scale\n    }\n    return val\n  } else if (arguments[0] instanceof Coordinate) {\n    var coord = arguments[0];\n    if (this._modelType === PrecisionModel.FLOATING) { return null }\n    coord.x = this.makePrecise(coord.x);\n    coord.y = this.makePrecise(coord.y);\n  }\n};\nPrecisionModel.prototype.getMaximumSignificantDigits = function getMaximumSignificantDigits () {\n  var maxSigDigits = 16;\n  if (this._modelType === PrecisionModel.FLOATING) {\n    maxSigDigits = 16;\n  } else if (this._modelType === PrecisionModel.FLOATING_SINGLE) {\n    maxSigDigits = 6;\n  } else if (this._modelType === PrecisionModel.FIXED) {\n    maxSigDigits = 1 + Math.trunc(Math.ceil(Math.log(this.getScale()) / Math.log(10)));\n  }\n  return maxSigDigits\n};\nPrecisionModel.prototype.setScale = function setScale (scale) {\n  this._scale = Math.abs(scale);\n};\nPrecisionModel.prototype.interfaces_ = function interfaces_ () {\n  return [Serializable, Comparable]\n};\nPrecisionModel.prototype.getClass = function getClass () {\n  return PrecisionModel\n};\nPrecisionModel.mostPrecise = function mostPrecise (pm1, pm2) {\n  if (pm1.compareTo(pm2) >= 0) { return pm1 }\n  return pm2\n};\nstaticAccessors$19.serialVersionUID.get = function () { return 7777263578777803835 };\nstaticAccessors$19.maximumPreciseValue.get = function () { return 9007199254740992.0 };\n\nObject.defineProperties( PrecisionModel, staticAccessors$19 );\n\nvar Type = function Type (name) {\n  this._name = name || null;\n  Type.nameToTypeMap.put(name, this);\n};\n\nvar staticAccessors$1$1 = { serialVersionUID: { configurable: true },nameToTypeMap: { configurable: true } };\nType.prototype.readResolve = function readResolve () {\n  return Type.nameToTypeMap.get(this._name)\n};\nType.prototype.toString = function toString () {\n  return this._name\n};\nType.prototype.interfaces_ = function interfaces_ () {\n  return [Serializable]\n};\nType.prototype.getClass = function getClass () {\n  return Type\n};\nstaticAccessors$1$1.serialVersionUID.get = function () { return -5528602631731589822 };\nstaticAccessors$1$1.nameToTypeMap.get = function () { return new HashMap() };\n\nObject.defineProperties( Type, staticAccessors$1$1 );\n\nPrecisionModel.Type = Type;\nPrecisionModel.FIXED = new Type('FIXED');\nPrecisionModel.FLOATING = new Type('FLOATING');\nPrecisionModel.FLOATING_SINGLE = new Type('FLOATING SINGLE');\n\nvar GeometryFactory = function GeometryFactory () {\n  this._precisionModel = new PrecisionModel();\n  this._SRID = 0;\n  this._coordinateSequenceFactory = GeometryFactory.getDefaultCoordinateSequenceFactory();\n\n  if (arguments.length === 0) {\n  } else if (arguments.length === 1) {\n    if (hasInterface(arguments[0], CoordinateSequenceFactory)) {\n      this._coordinateSequenceFactory = arguments[0];\n    } else if (arguments[0] instanceof PrecisionModel) {\n      this._precisionModel = arguments[0];\n    }\n  } else if (arguments.length === 2) {\n    this._precisionModel = arguments[0];\n    this._SRID = arguments[1];\n  } else if (arguments.length === 3) {\n    this._precisionModel = arguments[0];\n    this._SRID = arguments[1];\n    this._coordinateSequenceFactory = arguments[2];\n  }\n};\n\nvar staticAccessors$2 = { serialVersionUID: { configurable: true } };\nGeometryFactory.prototype.toGeometry = function toGeometry (envelope) {\n  if (envelope.isNull()) {\n    return this.createPoint(null)\n  }\n  if (envelope.getMinX() === envelope.getMaxX() && envelope.getMinY() === envelope.getMaxY()) {\n    return this.createPoint(new Coordinate(envelope.getMinX(), envelope.getMinY()))\n  }\n  if (envelope.getMinX() === envelope.getMaxX() || envelope.getMinY() === envelope.getMaxY()) {\n    return this.createLineString([new Coordinate(envelope.getMinX(), envelope.getMinY()), new Coordinate(envelope.getMaxX(), envelope.getMaxY())])\n  }\n  return this.createPolygon(this.createLinearRing([new Coordinate(envelope.getMinX(), envelope.getMinY()), new Coordinate(envelope.getMinX(), envelope.getMaxY()), new Coordinate(envelope.getMaxX(), envelope.getMaxY()), new Coordinate(envelope.getMaxX(), envelope.getMinY()), new Coordinate(envelope.getMinX(), envelope.getMinY())]), null)\n};\nGeometryFactory.prototype.createLineString = function createLineString (coordinates) {\n  if (!coordinates) { return new LineString(this.getCoordinateSequenceFactory().create([]), this) }\n  else if (coordinates instanceof Array) { return new LineString(this.getCoordinateSequenceFactory().create(coordinates), this) }\n  else if (hasInterface(coordinates, CoordinateSequence)) { return new LineString(coordinates, this) }\n};\nGeometryFactory.prototype.createMultiLineString = function createMultiLineString () {\n  if (arguments.length === 0) {\n    return new MultiLineString(null, this)\n  } else if (arguments.length === 1) {\n    var lineStrings = arguments[0];\n    return new MultiLineString(lineStrings, this)\n  }\n};\nGeometryFactory.prototype.buildGeometry = function buildGeometry (geomList) {\n  var geomClass = null;\n  var isHeterogeneous = false;\n  var hasGeometryCollection = false;\n  for (var i = geomList.iterator(); i.hasNext();) {\n    var geom = i.next();\n    var partClass = geom.getClass();\n    if (geomClass === null) {\n      geomClass = partClass;\n    }\n    if (partClass !== geomClass) {\n      isHeterogeneous = true;\n    }\n    if (geom.isGeometryCollectionOrDerived()) { hasGeometryCollection = true; }\n  }\n  if (geomClass === null) {\n    return this.createGeometryCollection()\n  }\n  if (isHeterogeneous || hasGeometryCollection) {\n    return this.createGeometryCollection(GeometryFactory.toGeometryArray(geomList))\n  }\n  var geom0 = geomList.iterator().next();\n  var isCollection = geomList.size() > 1;\n  if (isCollection) {\n    if (geom0 instanceof Polygon) {\n      return this.createMultiPolygon(GeometryFactory.toPolygonArray(geomList))\n    } else if (geom0 instanceof LineString) {\n      return this.createMultiLineString(GeometryFactory.toLineStringArray(geomList))\n    } else if (geom0 instanceof Point) {\n      return this.createMultiPoint(GeometryFactory.toPointArray(geomList))\n    }\n    Assert.shouldNeverReachHere('Unhandled class: ' + geom0.getClass().getName());\n  }\n  return geom0\n};\nGeometryFactory.prototype.createMultiPointFromCoords = function createMultiPointFromCoords (coordinates) {\n  return this.createMultiPoint(coordinates !== null ? this.getCoordinateSequenceFactory().create(coordinates) : null)\n};\nGeometryFactory.prototype.createPoint = function createPoint () {\n  if (arguments.length === 0) {\n    return this.createPoint(this.getCoordinateSequenceFactory().create([]))\n  } else if (arguments.length === 1) {\n    if (arguments[0] instanceof Coordinate) {\n      var coordinate = arguments[0];\n      return this.createPoint(coordinate !== null ? this.getCoordinateSequenceFactory().create([coordinate]) : null)\n    } else if (hasInterface(arguments[0], CoordinateSequence)) {\n      var coordinates = arguments[0];\n      return new Point(coordinates, this)\n    }\n  }\n};\nGeometryFactory.prototype.getCoordinateSequenceFactory = function getCoordinateSequenceFactory () {\n  return this._coordinateSequenceFactory\n};\nGeometryFactory.prototype.createPolygon = function createPolygon () {\n  if (arguments.length === 0) {\n    return new Polygon(null, null, this)\n  } else if (arguments.length === 1) {\n    if (hasInterface(arguments[0], CoordinateSequence)) {\n      var coordinates = arguments[0];\n      return this.createPolygon(this.createLinearRing(coordinates))\n    } else if (arguments[0] instanceof Array) {\n      var coordinates$1 = arguments[0];\n      return this.createPolygon(this.createLinearRing(coordinates$1))\n    } else if (arguments[0] instanceof LinearRing) {\n      var shell = arguments[0];\n      return this.createPolygon(shell, null)\n    }\n  } else if (arguments.length === 2) {\n    var shell$1 = arguments[0];\n    var holes = arguments[1];\n    return new Polygon(shell$1, holes, this)\n  }\n};\nGeometryFactory.prototype.getSRID = function getSRID () {\n  return this._SRID\n};\nGeometryFactory.prototype.createGeometryCollection = function createGeometryCollection () {\n  if (arguments.length === 0) {\n    return new GeometryCollection(null, this)\n  } else if (arguments.length === 1) {\n    var geometries = arguments[0];\n    return new GeometryCollection(geometries, this)\n  }\n};\nGeometryFactory.prototype.createGeometry = function createGeometry (g) {\n  var editor = new GeometryEditor(this);\n  return editor.edit(g, {\n    edit: function () {\n      if (arguments.length === 2) {\n        var coordSeq = arguments[0];\n        // const geometry = arguments[1]\n        return this._coordinateSequenceFactory.create(coordSeq)\n      }\n    }\n  })\n};\nGeometryFactory.prototype.getPrecisionModel = function getPrecisionModel () {\n  return this._precisionModel\n};\nGeometryFactory.prototype.createLinearRing = function createLinearRing () {\n  if (arguments.length === 0) {\n    return this.createLinearRing(this.getCoordinateSequenceFactory().create([]))\n  } else if (arguments.length === 1) {\n    if (arguments[0] instanceof Array) {\n      var coordinates = arguments[0];\n      return this.createLinearRing(coordinates !== null ? this.getCoordinateSequenceFactory().create(coordinates) : null)\n    } else if (hasInterface(arguments[0], CoordinateSequence)) {\n      var coordinates$1 = arguments[0];\n      return new LinearRing(coordinates$1, this)\n    }\n  }\n};\nGeometryFactory.prototype.createMultiPolygon = function createMultiPolygon () {\n  if (arguments.length === 0) {\n    return new MultiPolygon(null, this)\n  } else if (arguments.length === 1) {\n    var polygons = arguments[0];\n    return new MultiPolygon(polygons, this)\n  }\n};\nGeometryFactory.prototype.createMultiPoint = function createMultiPoint () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    return new MultiPoint(null, this)\n  } else if (arguments.length === 1) {\n    if (arguments[0] instanceof Array) {\n      var point = arguments[0];\n      return new MultiPoint(point, this)\n    } else if (arguments[0] instanceof Array) {\n      var coordinates = arguments[0];\n      return this.createMultiPoint(coordinates !== null ? this.getCoordinateSequenceFactory().create(coordinates) : null)\n    } else if (hasInterface(arguments[0], CoordinateSequence)) {\n      var coordinates$1 = arguments[0];\n      if (coordinates$1 === null) {\n        return this.createMultiPoint(new Array(0).fill(null))\n      }\n      var points = new Array(coordinates$1.size()).fill(null);\n      for (var i = 0; i < coordinates$1.size(); i++) {\n        var ptSeq = this$1.getCoordinateSequenceFactory().create(1, coordinates$1.getDimension());\n        CoordinateSequences.copy(coordinates$1, i, ptSeq, 0, 1);\n        points[i] = this$1.createPoint(ptSeq);\n      }\n      return this.createMultiPoint(points)\n    }\n  }\n};\nGeometryFactory.prototype.interfaces_ = function interfaces_ () {\n  return [Serializable]\n};\nGeometryFactory.prototype.getClass = function getClass () {\n  return GeometryFactory\n};\nGeometryFactory.toMultiPolygonArray = function toMultiPolygonArray (multiPolygons) {\n  var multiPolygonArray = new Array(multiPolygons.size()).fill(null);\n  return multiPolygons.toArray(multiPolygonArray)\n};\nGeometryFactory.toGeometryArray = function toGeometryArray (geometries) {\n  if (geometries === null) { return null }\n  var geometryArray = new Array(geometries.size()).fill(null);\n  return geometries.toArray(geometryArray)\n};\nGeometryFactory.getDefaultCoordinateSequenceFactory = function getDefaultCoordinateSequenceFactory () {\n  return CoordinateArraySequenceFactory.instance()\n};\nGeometryFactory.toMultiLineStringArray = function toMultiLineStringArray (multiLineStrings) {\n  var multiLineStringArray = new Array(multiLineStrings.size()).fill(null);\n  return multiLineStrings.toArray(multiLineStringArray)\n};\nGeometryFactory.toLineStringArray = function toLineStringArray (lineStrings) {\n  var lineStringArray = new Array(lineStrings.size()).fill(null);\n  return lineStrings.toArray(lineStringArray)\n};\nGeometryFactory.toMultiPointArray = function toMultiPointArray (multiPoints) {\n  var multiPointArray = new Array(multiPoints.size()).fill(null);\n  return multiPoints.toArray(multiPointArray)\n};\nGeometryFactory.toLinearRingArray = function toLinearRingArray (linearRings) {\n  var linearRingArray = new Array(linearRings.size()).fill(null);\n  return linearRings.toArray(linearRingArray)\n};\nGeometryFactory.toPointArray = function toPointArray (points) {\n  var pointArray = new Array(points.size()).fill(null);\n  return points.toArray(pointArray)\n};\nGeometryFactory.toPolygonArray = function toPolygonArray (polygons) {\n  var polygonArray = new Array(polygons.size()).fill(null);\n  return polygons.toArray(polygonArray)\n};\nGeometryFactory.createPointFromInternalCoord = function createPointFromInternalCoord (coord, exemplar) {\n  exemplar.getPrecisionModel().makePrecise(coord);\n  return exemplar.getFactory().createPoint(coord)\n};\nstaticAccessors$2.serialVersionUID.get = function () { return -6820524753094095635 };\n\nObject.defineProperties( GeometryFactory, staticAccessors$2 );\n\nvar geometryTypes = ['Point', 'MultiPoint', 'LineString', 'MultiLineString', 'Polygon', 'MultiPolygon'];\n\n/**\n * Class for reading and writing Well-Known Text.Create a new parser for GeoJSON\n * NOTE: Adapted from OpenLayers 2.11 implementation.\n */\n\n/**\n * Create a new parser for GeoJSON\n *\n * @param {GeometryFactory} geometryFactory\n * @return An instance of GeoJsonParser.\n * @constructor\n * @private\n */\nvar GeoJSONParser = function GeoJSONParser (geometryFactory) {\n  this.geometryFactory = geometryFactory || new GeometryFactory();\n};\n/**\n * Deserialize a GeoJSON object and return the Geometry or Feature(Collection) with JSTS Geometries\n *\n * @param {}\n *        A GeoJSON object.\n * @return {} A Geometry instance or object representing a Feature(Collection) with Geometry instances.\n * @private\n */\nGeoJSONParser.prototype.read = function read (json) {\n  var obj;\n  if (typeof json === 'string') {\n    obj = JSON.parse(json);\n  } else {\n    obj = json;\n  }\n\n  var type = obj.type;\n\n  if (!parse[type]) {\n    throw new Error('Unknown GeoJSON type: ' + obj.type)\n  }\n\n  if (geometryTypes.indexOf(type) !== -1) {\n    return parse[type].apply(this, [obj.coordinates])\n  } else if (type === 'GeometryCollection') {\n    return parse[type].apply(this, [obj.geometries])\n  }\n\n  // feature or feature collection\n  return parse[type].apply(this, [obj])\n};\n\n/**\n * Serialize a Geometry object into GeoJSON\n *\n * @param {Geometry}\n *        geometry A Geometry or array of Geometries.\n * @return {Object} A GeoJSON object represting the input Geometry/Geometries.\n * @private\n */\nGeoJSONParser.prototype.write = function write (geometry) {\n  var type = geometry.getGeometryType();\n\n  if (!extract[type]) {\n    throw new Error('Geometry is not supported')\n  }\n\n  return extract[type].apply(this, [geometry])\n};\n\nvar parse = {\n  /**\n   * Parse a GeoJSON Feature object\n   *\n   * @param {Object}\n   *          obj Object to parse.\n   *\n   * @return {Object} Feature with geometry/bbox converted to JSTS Geometries.\n   */\n  Feature: function (obj) {\n    var feature = {};\n\n    // copy features\n    for (var key in obj) {\n      feature[key] = obj[key];\n    }\n\n    // parse geometry\n    if (obj.geometry) {\n      var type = obj.geometry.type;\n      if (!parse[type]) {\n        throw new Error('Unknown GeoJSON type: ' + obj.type)\n      }\n      feature.geometry = this.read(obj.geometry);\n    }\n\n    // bbox\n    if (obj.bbox) {\n      feature.bbox = parse.bbox.apply(this, [obj.bbox]);\n    }\n\n    return feature\n  },\n\n  /**\n   * Parse a GeoJSON FeatureCollection object\n   *\n   * @param {Object}\n   *          obj Object to parse.\n   *\n   * @return {Object} FeatureCollection with geometry/bbox converted to JSTS Geometries.\n   */\n  FeatureCollection: function (obj) {\n    var this$1 = this;\n\n    var featureCollection = {};\n\n    if (obj.features) {\n      featureCollection.features = [];\n\n      for (var i = 0; i < obj.features.length; ++i) {\n        featureCollection.features.push(this$1.read(obj.features[i]));\n      }\n    }\n\n    if (obj.bbox) {\n      featureCollection.bbox = this.parse.bbox.apply(this, [obj.bbox]);\n    }\n\n    return featureCollection\n  },\n\n  /**\n   * Convert the ordinates in an array to an array of Coordinates\n   *\n   * @param {Array}\n   *          array Array with {Number}s.\n   *\n   * @return {Array} Array with Coordinates.\n   */\n  coordinates: function (array) {\n    var coordinates = [];\n    for (var i = 0; i < array.length; ++i) {\n      var sub = array[i];\n      coordinates.push(new Coordinate(sub[0], sub[1]));\n    }\n    return coordinates\n  },\n\n  /**\n   * Convert the bbox to a LinearRing\n   *\n   * @param {Array}\n   *          array Array with [xMin, yMin, xMax, yMax].\n   *\n   * @return {Array} Array with Coordinates.\n   */\n  bbox: function (array) {\n    return this.geometryFactory.createLinearRing([\n      new Coordinate(array[0], array[1]),\n      new Coordinate(array[2], array[1]),\n      new Coordinate(array[2], array[3]),\n      new Coordinate(array[0], array[3]),\n      new Coordinate(array[0], array[1])\n    ])\n  },\n\n  /**\n   * Convert an Array with ordinates to a Point\n   *\n   * @param {Array}\n   *          array Array with ordinates.\n   *\n   * @return {Point} Point.\n   */\n  Point: function (array) {\n    var coordinate = new Coordinate(array[0], array[1]);\n    return this.geometryFactory.createPoint(coordinate)\n  },\n\n  /**\n   * Convert an Array with coordinates to a MultiPoint\n   *\n   * @param {Array}\n   *          array Array with coordinates.\n   *\n   * @return {MultiPoint} MultiPoint.\n   */\n  MultiPoint: function (array) {\n    var this$1 = this;\n\n    var points = [];\n    for (var i = 0; i < array.length; ++i) {\n      points.push(parse.Point.apply(this$1, [array[i]]));\n    }\n    return this.geometryFactory.createMultiPoint(points)\n  },\n\n  /**\n   * Convert an Array with coordinates to a LineString\n   *\n   * @param {Array}\n   *          array Array with coordinates.\n   *\n   * @return {LineString} LineString.\n   */\n  LineString: function (array) {\n    var coordinates = parse.coordinates.apply(this, [array]);\n    return this.geometryFactory.createLineString(coordinates)\n  },\n\n  /**\n   * Convert an Array with coordinates to a MultiLineString\n   *\n   * @param {Array}\n   *          array Array with coordinates.\n   *\n   * @return {MultiLineString} MultiLineString.\n   */\n  MultiLineString: function (array) {\n    var this$1 = this;\n\n    var lineStrings = [];\n    for (var i = 0; i < array.length; ++i) {\n      lineStrings.push(parse.LineString.apply(this$1, [array[i]]));\n    }\n    return this.geometryFactory.createMultiLineString(lineStrings)\n  },\n\n  /**\n   * Convert an Array to a Polygon\n   *\n   * @param {Array}\n   *          array Array with shell and holes.\n   *\n   * @return {Polygon} Polygon.\n   */\n  Polygon: function (array) {\n    var this$1 = this;\n\n    var shellCoordinates = parse.coordinates.apply(this, [array[0]]);\n    var shell = this.geometryFactory.createLinearRing(shellCoordinates);\n    var holes = [];\n    for (var i = 1; i < array.length; ++i) {\n      var hole = array[i];\n      var coordinates = parse.coordinates.apply(this$1, [hole]);\n      var linearRing = this$1.geometryFactory.createLinearRing(coordinates);\n      holes.push(linearRing);\n    }\n    return this.geometryFactory.createPolygon(shell, holes)\n  },\n\n  /**\n   * Convert an Array to a MultiPolygon\n   *\n   * @param {Array}\n   *          array Array of arrays with shell and rings.\n   *\n   * @return {MultiPolygon} MultiPolygon.\n   */\n  MultiPolygon: function (array) {\n    var this$1 = this;\n\n    var polygons = [];\n    for (var i = 0; i < array.length; ++i) {\n      var polygon = array[i];\n      polygons.push(parse.Polygon.apply(this$1, [polygon]));\n    }\n    return this.geometryFactory.createMultiPolygon(polygons)\n  },\n\n  /**\n   * Convert an Array to a GeometryCollection\n   *\n   * @param {Array}\n   *          array Array of GeoJSON geometries.\n   *\n   * @return {GeometryCollection} GeometryCollection.\n   */\n  GeometryCollection: function (array) {\n    var this$1 = this;\n\n    var geometries = [];\n    for (var i = 0; i < array.length; ++i) {\n      var geometry = array[i];\n      geometries.push(this$1.read(geometry));\n    }\n    return this.geometryFactory.createGeometryCollection(geometries)\n  }\n};\n\nvar extract = {\n  /**\n   * Convert a Coordinate to an Array\n   *\n   * @param {Coordinate}\n   *          coordinate Coordinate to convert.\n   *\n   * @return {Array} Array of ordinates.\n   */\n  coordinate: function (coordinate) {\n    return [coordinate.x, coordinate.y]\n  },\n\n  /**\n   * Convert a Point to a GeoJSON object\n   *\n   * @param {Point}\n   *          point Point to convert.\n   *\n   * @return {Array} Array of 2 ordinates (paired to a coordinate).\n   */\n  Point: function (point) {\n    var array = extract.coordinate.apply(this, [point.getCoordinate()]);\n    return {\n      type: 'Point',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a MultiPoint to a GeoJSON object\n   *\n   * @param {MultiPoint}\n   *          multipoint MultiPoint to convert.\n   *\n   * @return {Array} Array of coordinates.\n   */\n  MultiPoint: function (multipoint) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0; i < multipoint._geometries.length; ++i) {\n      var point = multipoint._geometries[i];\n      var geoJson = extract.Point.apply(this$1, [point]);\n      array.push(geoJson.coordinates);\n    }\n    return {\n      type: 'MultiPoint',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a LineString to a GeoJSON object\n   *\n   * @param {LineString}\n   *          linestring LineString to convert.\n   *\n   * @return {Array} Array of coordinates.\n   */\n  LineString: function (linestring) {\n    var this$1 = this;\n\n    var array = [];\n    var coordinates = linestring.getCoordinates();\n    for (var i = 0; i < coordinates.length; ++i) {\n      var coordinate = coordinates[i];\n      array.push(extract.coordinate.apply(this$1, [coordinate]));\n    }\n    return {\n      type: 'LineString',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a MultiLineString to a GeoJSON object\n   *\n   * @param {MultiLineString}\n   *          multilinestring MultiLineString to convert.\n   *\n   * @return {Array} Array of Array of coordinates.\n   */\n  MultiLineString: function (multilinestring) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0; i < multilinestring._geometries.length; ++i) {\n      var linestring = multilinestring._geometries[i];\n      var geoJson = extract.LineString.apply(this$1, [linestring]);\n      array.push(geoJson.coordinates);\n    }\n    return {\n      type: 'MultiLineString',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a Polygon to a GeoJSON object\n   *\n   * @param {Polygon}\n   *          polygon Polygon to convert.\n   *\n   * @return {Array} Array with shell, holes.\n   */\n  Polygon: function (polygon) {\n    var this$1 = this;\n\n    var array = [];\n    var shellGeoJson = extract.LineString.apply(this, [polygon._shell]);\n    array.push(shellGeoJson.coordinates);\n    for (var i = 0; i < polygon._holes.length; ++i) {\n      var hole = polygon._holes[i];\n      var holeGeoJson = extract.LineString.apply(this$1, [hole]);\n      array.push(holeGeoJson.coordinates);\n    }\n    return {\n      type: 'Polygon',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a MultiPolygon to a GeoJSON object\n   *\n   * @param {MultiPolygon}\n   *          multipolygon MultiPolygon to convert.\n   *\n   * @return {Array} Array of polygons.\n   */\n  MultiPolygon: function (multipolygon) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0; i < multipolygon._geometries.length; ++i) {\n      var polygon = multipolygon._geometries[i];\n      var geoJson = extract.Polygon.apply(this$1, [polygon]);\n      array.push(geoJson.coordinates);\n    }\n    return {\n      type: 'MultiPolygon',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a GeometryCollection to a GeoJSON object\n   *\n   * @param {GeometryCollection}\n   *          collection GeometryCollection to convert.\n   *\n   * @return {Array} Array of geometries.\n   */\n  GeometryCollection: function (collection) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0; i < collection._geometries.length; ++i) {\n      var geometry = collection._geometries[i];\n      var type = geometry.getGeometryType();\n      array.push(extract[type].apply(this$1, [geometry]));\n    }\n    return {\n      type: 'GeometryCollection',\n      geometries: array\n    }\n  }\n};\n\n/**\n * Converts a geometry in GeoJSON to a {@link Geometry}.\n */\n\n/**\n * A <code>GeoJSONReader</code> is parameterized by a <code>GeometryFactory</code>,\n * to allow it to create <code>Geometry</code> objects of the appropriate\n * implementation. In particular, the <code>GeometryFactory</code> determines\n * the <code>PrecisionModel</code> and <code>SRID</code> that is used.\n *\n * @param {GeometryFactory} geometryFactory\n * @constructor\n */\nvar GeoJSONReader = function GeoJSONReader (geometryFactory) {\n  this.geometryFactory = geometryFactory || new GeometryFactory();\n  this.precisionModel = this.geometryFactory.getPrecisionModel();\n  this.parser = new GeoJSONParser(this.geometryFactory);\n};\n/**\n * Reads a GeoJSON representation of a {@link Geometry}\n *\n * Will also parse GeoJSON Features/FeatureCollections as custom objects.\n *\n * @param {Object|String} geoJson a GeoJSON Object or String.\n * @return {Geometry|Object} a <code>Geometry or Feature/FeatureCollection representation.</code>\n * @memberof GeoJSONReader\n */\nGeoJSONReader.prototype.read = function read (geoJson) {\n  var geometry = this.parser.read(geoJson);\n\n  if (this.precisionModel.getType() === PrecisionModel.FIXED) {\n    this.reducePrecision(geometry);\n  }\n\n  return geometry\n};\n\n// NOTE: this is a hack\nGeoJSONReader.prototype.reducePrecision = function reducePrecision (geometry) {\n    var this$1 = this;\n\n  var i, len;\n\n  if (geometry.coordinate) {\n    this.precisionModel.makePrecise(geometry.coordinate);\n  } else if (geometry.points) {\n    for (i = 0, len = geometry.points.length; i < len; i++) {\n      this$1.precisionModel.makePrecise(geometry.points[i]);\n    }\n  } else if (geometry.geometries) {\n    for (i = 0, len = geometry.geometries.length; i < len; i++) {\n      this$1.reducePrecision(geometry.geometries[i]);\n    }\n  }\n};\n\n/**\n * @module GeoJSONWriter\n */\n\n/**\n * Writes the GeoJSON representation of a {@link Geometry}. The\n * The GeoJSON format is defined <A\n * HREF=\"http://geojson.org/geojson-spec.html\">here</A>.\n */\n\n/**\n * The <code>GeoJSONWriter</code> outputs coordinates rounded to the precision\n * model. Only the maximum number of decimal places necessary to represent the\n * ordinates to the required precision will be output.\n *\n * @param {GeometryFactory} geometryFactory\n * @constructor\n */\nvar GeoJSONWriter = function GeoJSONWriter () {\n  this.parser = new GeoJSONParser(this.geometryFactory);\n};\n/**\n * Converts a <code>Geometry</code> to its GeoJSON representation.\n *\n * @param {Geometry}\n *        geometry a <code>Geometry</code> to process.\n * @return {Object} The GeoJSON representation of the Geometry.\n * @memberof GeoJSONWriter\n */\nGeoJSONWriter.prototype.write = function write (geometry) {\n  return this.parser.write(geometry)\n};\n\n/* eslint-disable no-undef */\n\n// io\n\nvar Position = function Position () {};\n\nvar staticAccessors$20 = { ON: { configurable: true },LEFT: { configurable: true },RIGHT: { configurable: true } };\n\nPosition.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPosition.prototype.getClass = function getClass () {\n  return Position\n};\nPosition.opposite = function opposite (position) {\n  if (position === Position.LEFT) { return Position.RIGHT }\n  if (position === Position.RIGHT) { return Position.LEFT }\n  return position\n};\nstaticAccessors$20.ON.get = function () { return 0 };\nstaticAccessors$20.LEFT.get = function () { return 1 };\nstaticAccessors$20.RIGHT.get = function () { return 2 };\n\nObject.defineProperties( Position, staticAccessors$20 );\n\n/**\n * @param {string=} message Optional message\n * @extends {Error}\n * @constructor\n * @private\n */\nfunction EmptyStackException (message) {\n  this.message = message || '';\n}\nEmptyStackException.prototype = new Error();\n\n/**\n * @type {string}\n */\nEmptyStackException.prototype.name = 'EmptyStackException';\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Stack.html\n *\n * @extends {List}\n * @constructor\n * @private\n */\nfunction Stack () {\n  /**\n   * @type {Array}\n   * @private\n   */\n  this.array_ = [];\n}\nStack.prototype = new List();\n\n/**\n * @override\n */\nStack.prototype.add = function (e) {\n  this.array_.push(e);\n  return true\n};\n\n/**\n * @override\n */\nStack.prototype.get = function (index) {\n  if (index < 0 || index >= this.size()) {\n    throw new Error()\n  }\n\n  return this.array_[index]\n};\n\n/**\n * Pushes an item onto the top of this stack.\n * @param {Object} e\n * @return {Object}\n */\nStack.prototype.push = function (e) {\n  this.array_.push(e);\n  return e\n};\n\n/**\n * Pushes an item onto the top of this stack.\n * @param {Object} e\n * @return {Object}\n */\nStack.prototype.pop = function (e) {\n  if (this.array_.length === 0) {\n    throw new EmptyStackException()\n  }\n\n  return this.array_.pop()\n};\n\n/**\n * Looks at the object at the top of this stack without removing it from the\n * stack.\n * @return {Object}\n */\nStack.prototype.peek = function () {\n  if (this.array_.length === 0) {\n    throw new EmptyStackException()\n  }\n\n  return this.array_[this.array_.length - 1]\n};\n\n/**\n * Tests if this stack is empty.\n * @return {boolean} true if and only if this stack contains no items; false\n *         otherwise.\n */\nStack.prototype.empty = function () {\n  if (this.array_.length === 0) {\n    return true\n  } else {\n    return false\n  }\n};\n\n/**\n * @return {boolean}\n */\nStack.prototype.isEmpty = function () {\n  return this.empty()\n};\n\n/**\n * Returns the 1-based position where an object is on this stack. If the object\n * o occurs as an item in this stack, this method returns the distance from the\n * top of the stack of the occurrence nearest the top of the stack; the topmost\n * item on the stack is considered to be at distance 1. The equals method is\n * used to compare o to the items in this stack.\n *\n * NOTE: does not currently actually use equals. (=== is used)\n *\n * @param {Object} o\n * @return {number} the 1-based position from the top of the stack where the\n *         object is located; the return value -1 indicates that the object is\n *         not on the stack.\n */\nStack.prototype.search = function (o) {\n  return this.array_.indexOf(o)\n};\n\n/**\n * @return {number}\n * @export\n */\nStack.prototype.size = function () {\n  return this.array_.length\n};\n\n/**\n * @return {Array}\n */\nStack.prototype.toArray = function () {\n  var this$1 = this;\n\n  var array = [];\n\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    array.push(this$1.array_[i]);\n  }\n\n  return array\n};\n\nvar RightmostEdgeFinder = function RightmostEdgeFinder () {\n  this._minIndex = -1;\n  this._minCoord = null;\n  this._minDe = null;\n  this._orientedDe = null;\n};\nRightmostEdgeFinder.prototype.getCoordinate = function getCoordinate () {\n  return this._minCoord\n};\nRightmostEdgeFinder.prototype.getRightmostSide = function getRightmostSide (de, index) {\n  var side = this.getRightmostSideOfSegment(de, index);\n  if (side < 0) { side = this.getRightmostSideOfSegment(de, index - 1); }\n  if (side < 0) {\n    this._minCoord = null;\n    this.checkForRightmostCoordinate(de);\n  }\n  return side\n};\nRightmostEdgeFinder.prototype.findRightmostEdgeAtVertex = function findRightmostEdgeAtVertex () {\n  var pts = this._minDe.getEdge().getCoordinates();\n  Assert.isTrue(this._minIndex > 0 && this._minIndex < pts.length, 'rightmost point expected to be interior vertex of edge');\n  var pPrev = pts[this._minIndex - 1];\n  var pNext = pts[this._minIndex + 1];\n  var orientation = CGAlgorithms.computeOrientation(this._minCoord, pNext, pPrev);\n  var usePrev = false;\n  if (pPrev.y < this._minCoord.y && pNext.y < this._minCoord.y && orientation === CGAlgorithms.COUNTERCLOCKWISE) {\n    usePrev = true;\n  } else if (pPrev.y > this._minCoord.y && pNext.y > this._minCoord.y && orientation === CGAlgorithms.CLOCKWISE) {\n    usePrev = true;\n  }\n  if (usePrev) {\n    this._minIndex = this._minIndex - 1;\n  }\n};\nRightmostEdgeFinder.prototype.getRightmostSideOfSegment = function getRightmostSideOfSegment (de, i) {\n  var e = de.getEdge();\n  var coord = e.getCoordinates();\n  if (i < 0 || i + 1 >= coord.length) { return -1 }\n  if (coord[i].y === coord[i + 1].y) { return -1 }\n  var pos = Position.LEFT;\n  if (coord[i].y < coord[i + 1].y) { pos = Position.RIGHT; }\n  return pos\n};\nRightmostEdgeFinder.prototype.getEdge = function getEdge () {\n  return this._orientedDe\n};\nRightmostEdgeFinder.prototype.checkForRightmostCoordinate = function checkForRightmostCoordinate (de) {\n    var this$1 = this;\n\n  var coord = de.getEdge().getCoordinates();\n  for (var i = 0; i < coord.length - 1; i++) {\n    if (this$1._minCoord === null || coord[i].x > this$1._minCoord.x) {\n      this$1._minDe = de;\n      this$1._minIndex = i;\n      this$1._minCoord = coord[i];\n    }\n  }\n};\nRightmostEdgeFinder.prototype.findRightmostEdgeAtNode = function findRightmostEdgeAtNode () {\n  var node = this._minDe.getNode();\n  var star = node.getEdges();\n  this._minDe = star.getRightmostEdge();\n  if (!this._minDe.isForward()) {\n    this._minDe = this._minDe.getSym();\n    this._minIndex = this._minDe.getEdge().getCoordinates().length - 1;\n  }\n};\nRightmostEdgeFinder.prototype.findEdge = function findEdge (dirEdgeList) {\n    var this$1 = this;\n\n  for (var i = dirEdgeList.iterator(); i.hasNext();) {\n    var de = i.next();\n    if (!de.isForward()) { continue }\n    this$1.checkForRightmostCoordinate(de);\n  }\n  Assert.isTrue(this._minIndex !== 0 || this._minCoord.equals(this._minDe.getCoordinate()), 'inconsistency in rightmost processing');\n  if (this._minIndex === 0) {\n    this.findRightmostEdgeAtNode();\n  } else {\n    this.findRightmostEdgeAtVertex();\n  }\n  this._orientedDe = this._minDe;\n  var rightmostSide = this.getRightmostSide(this._minDe, this._minIndex);\n  if (rightmostSide === Position.LEFT) {\n    this._orientedDe = this._minDe.getSym();\n  }\n};\nRightmostEdgeFinder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nRightmostEdgeFinder.prototype.getClass = function getClass () {\n  return RightmostEdgeFinder\n};\n\nvar TopologyException = (function (RuntimeException$$1) {\n  function TopologyException (msg, pt) {\n    RuntimeException$$1.call(this, TopologyException.msgWithCoord(msg, pt));\n    this.pt = pt ? new Coordinate(pt) : null;\n    this.name = 'TopologyException';\n  }\n\n  if ( RuntimeException$$1 ) TopologyException.__proto__ = RuntimeException$$1;\n  TopologyException.prototype = Object.create( RuntimeException$$1 && RuntimeException$$1.prototype );\n  TopologyException.prototype.constructor = TopologyException;\n  TopologyException.prototype.getCoordinate = function getCoordinate () {\n    return this.pt\n  };\n  TopologyException.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  TopologyException.prototype.getClass = function getClass () {\n    return TopologyException\n  };\n  TopologyException.msgWithCoord = function msgWithCoord (msg, pt) {\n    if (!pt) { return msg + ' [ ' + pt + ' ]' }\n    return msg\n  };\n\n  return TopologyException;\n}(RuntimeException));\n\nvar LinkedList = function LinkedList () {\n  this.array_ = [];\n};\nLinkedList.prototype.addLast = function addLast (e) {\n  this.array_.push(e);\n};\nLinkedList.prototype.removeFirst = function removeFirst () {\n  return this.array_.shift()\n};\nLinkedList.prototype.isEmpty = function isEmpty () {\n  return this.array_.length === 0\n};\n\nvar BufferSubgraph = function BufferSubgraph () {\n  this._finder = null;\n  this._dirEdgeList = new ArrayList();\n  this._nodes = new ArrayList();\n  this._rightMostCoord = null;\n  this._env = null;\n  this._finder = new RightmostEdgeFinder();\n};\nBufferSubgraph.prototype.clearVisitedEdges = function clearVisitedEdges () {\n  for (var it = this._dirEdgeList.iterator(); it.hasNext();) {\n    var de = it.next();\n    de.setVisited(false);\n  }\n};\nBufferSubgraph.prototype.getRightmostCoordinate = function getRightmostCoordinate () {\n  return this._rightMostCoord\n};\nBufferSubgraph.prototype.computeNodeDepth = function computeNodeDepth (n) {\n    var this$1 = this;\n\n  var startEdge = null;\n  for (var i = n.getEdges().iterator(); i.hasNext();) {\n    var de = i.next();\n    if (de.isVisited() || de.getSym().isVisited()) {\n      startEdge = de;\n      break\n    }\n  }\n  if (startEdge === null) { throw new TopologyException('unable to find edge to compute depths at ' + n.getCoordinate()) }\n  n.getEdges().computeDepths(startEdge);\n  for (var i$1 = n.getEdges().iterator(); i$1.hasNext();) {\n    var de$1 = i$1.next();\n    de$1.setVisited(true);\n    this$1.copySymDepths(de$1);\n  }\n};\nBufferSubgraph.prototype.computeDepth = function computeDepth (outsideDepth) {\n  this.clearVisitedEdges();\n  var de = this._finder.getEdge();\n  // const n = de.getNode()\n  // const label = de.getLabel()\n  de.setEdgeDepths(Position.RIGHT, outsideDepth);\n  this.copySymDepths(de);\n  this.computeDepths(de);\n};\nBufferSubgraph.prototype.create = function create (node) {\n  this.addReachable(node);\n  this._finder.findEdge(this._dirEdgeList);\n  this._rightMostCoord = this._finder.getCoordinate();\n};\nBufferSubgraph.prototype.findResultEdges = function findResultEdges () {\n  for (var it = this._dirEdgeList.iterator(); it.hasNext();) {\n    var de = it.next();\n    if (de.getDepth(Position.RIGHT) >= 1 && de.getDepth(Position.LEFT) <= 0 && !de.isInteriorAreaEdge()) {\n      de.setInResult(true);\n    }\n  }\n};\nBufferSubgraph.prototype.computeDepths = function computeDepths (startEdge) {\n    var this$1 = this;\n\n  var nodesVisited = new HashSet();\n  var nodeQueue = new LinkedList();\n  var startNode = startEdge.getNode();\n  nodeQueue.addLast(startNode);\n  nodesVisited.add(startNode);\n  startEdge.setVisited(true);\n  while (!nodeQueue.isEmpty()) {\n    var n = nodeQueue.removeFirst();\n    nodesVisited.add(n);\n    this$1.computeNodeDepth(n);\n    for (var i = n.getEdges().iterator(); i.hasNext();) {\n      var de = i.next();\n      var sym = de.getSym();\n      if (sym.isVisited()) { continue }\n      var adjNode = sym.getNode();\n      if (!nodesVisited.contains(adjNode)) {\n        nodeQueue.addLast(adjNode);\n        nodesVisited.add(adjNode);\n      }\n    }\n  }\n};\nBufferSubgraph.prototype.compareTo = function compareTo (o) {\n  var graph = o;\n  if (this._rightMostCoord.x < graph._rightMostCoord.x) {\n    return -1\n  }\n  if (this._rightMostCoord.x > graph._rightMostCoord.x) {\n    return 1\n  }\n  return 0\n};\nBufferSubgraph.prototype.getEnvelope = function getEnvelope () {\n  if (this._env === null) {\n    var edgeEnv = new Envelope();\n    for (var it = this._dirEdgeList.iterator(); it.hasNext();) {\n      var dirEdge = it.next();\n      var pts = dirEdge.getEdge().getCoordinates();\n      for (var i = 0; i < pts.length - 1; i++) {\n        edgeEnv.expandToInclude(pts[i]);\n      }\n    }\n    this._env = edgeEnv;\n  }\n  return this._env\n};\nBufferSubgraph.prototype.addReachable = function addReachable (startNode) {\n    var this$1 = this;\n\n  var nodeStack = new Stack();\n  nodeStack.add(startNode);\n  while (!nodeStack.empty()) {\n    var node = nodeStack.pop();\n    this$1.add(node, nodeStack);\n  }\n};\nBufferSubgraph.prototype.copySymDepths = function copySymDepths (de) {\n  var sym = de.getSym();\n  sym.setDepth(Position.LEFT, de.getDepth(Position.RIGHT));\n  sym.setDepth(Position.RIGHT, de.getDepth(Position.LEFT));\n};\nBufferSubgraph.prototype.add = function add (node, nodeStack) {\n    var this$1 = this;\n\n  node.setVisited(true);\n  this._nodes.add(node);\n  for (var i = node.getEdges().iterator(); i.hasNext();) {\n    var de = i.next();\n    this$1._dirEdgeList.add(de);\n    var sym = de.getSym();\n    var symNode = sym.getNode();\n    if (!symNode.isVisited()) { nodeStack.push(symNode); }\n  }\n};\nBufferSubgraph.prototype.getNodes = function getNodes () {\n  return this._nodes\n};\nBufferSubgraph.prototype.getDirectedEdges = function getDirectedEdges () {\n  return this._dirEdgeList\n};\nBufferSubgraph.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nBufferSubgraph.prototype.getClass = function getClass () {\n  return BufferSubgraph\n};\n\nvar TopologyLocation = function TopologyLocation () {\n  var this$1 = this;\n\n  this.location = null;\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Array) {\n      var location = arguments[0];\n      this.init(location.length);\n    } else if (Number.isInteger(arguments[0])) {\n      var on = arguments[0];\n      this.init(1);\n      this.location[Position.ON] = on;\n    } else if (arguments[0] instanceof TopologyLocation) {\n      var gl = arguments[0];\n      this.init(gl.location.length);\n      if (gl !== null) {\n        for (var i = 0; i < this.location.length; i++) {\n          this$1.location[i] = gl.location[i];\n        }\n      }\n    }\n  } else if (arguments.length === 3) {\n    var on$1 = arguments[0];\n    var left = arguments[1];\n    var right = arguments[2];\n    this.init(3);\n    this.location[Position.ON] = on$1;\n    this.location[Position.LEFT] = left;\n    this.location[Position.RIGHT] = right;\n  }\n};\nTopologyLocation.prototype.setAllLocations = function setAllLocations (locValue) {\n    var this$1 = this;\n\n  for (var i = 0; i < this.location.length; i++) {\n    this$1.location[i] = locValue;\n  }\n};\nTopologyLocation.prototype.isNull = function isNull () {\n    var this$1 = this;\n\n  for (var i = 0; i < this.location.length; i++) {\n    if (this$1.location[i] !== Location.NONE) { return false }\n  }\n  return true\n};\nTopologyLocation.prototype.setAllLocationsIfNull = function setAllLocationsIfNull (locValue) {\n    var this$1 = this;\n\n  for (var i = 0; i < this.location.length; i++) {\n    if (this$1.location[i] === Location.NONE) { this$1.location[i] = locValue; }\n  }\n};\nTopologyLocation.prototype.isLine = function isLine () {\n  return this.location.length === 1\n};\nTopologyLocation.prototype.merge = function merge (gl) {\n    var this$1 = this;\n\n  if (gl.location.length > this.location.length) {\n    var newLoc = new Array(3).fill(null);\n    newLoc[Position.ON] = this.location[Position.ON];\n    newLoc[Position.LEFT] = Location.NONE;\n    newLoc[Position.RIGHT] = Location.NONE;\n    this.location = newLoc;\n  }\n  for (var i = 0; i < this.location.length; i++) {\n    if (this$1.location[i] === Location.NONE && i < gl.location.length) { this$1.location[i] = gl.location[i]; }\n  }\n};\nTopologyLocation.prototype.getLocations = function getLocations () {\n  return this.location\n};\nTopologyLocation.prototype.flip = function flip () {\n  if (this.location.length <= 1) { return null }\n  var temp = this.location[Position.LEFT];\n  this.location[Position.LEFT] = this.location[Position.RIGHT];\n  this.location[Position.RIGHT] = temp;\n};\nTopologyLocation.prototype.toString = function toString () {\n  var buf = new StringBuffer();\n  if (this.location.length > 1) { buf.append(Location.toLocationSymbol(this.location[Position.LEFT])); }\n  buf.append(Location.toLocationSymbol(this.location[Position.ON]));\n  if (this.location.length > 1) { buf.append(Location.toLocationSymbol(this.location[Position.RIGHT])); }\n  return buf.toString()\n};\nTopologyLocation.prototype.setLocations = function setLocations (on, left, right) {\n  this.location[Position.ON] = on;\n  this.location[Position.LEFT] = left;\n  this.location[Position.RIGHT] = right;\n};\nTopologyLocation.prototype.get = function get (posIndex) {\n  if (posIndex < this.location.length) { return this.location[posIndex] }\n  return Location.NONE\n};\nTopologyLocation.prototype.isArea = function isArea () {\n  return this.location.length > 1\n};\nTopologyLocation.prototype.isAnyNull = function isAnyNull () {\n    var this$1 = this;\n\n  for (var i = 0; i < this.location.length; i++) {\n    if (this$1.location[i] === Location.NONE) { return true }\n  }\n  return false\n};\nTopologyLocation.prototype.setLocation = function setLocation () {\n  if (arguments.length === 1) {\n    var locValue = arguments[0];\n    this.setLocation(Position.ON, locValue);\n  } else if (arguments.length === 2) {\n    var locIndex = arguments[0];\n    var locValue$1 = arguments[1];\n    this.location[locIndex] = locValue$1;\n  }\n};\nTopologyLocation.prototype.init = function init (size) {\n  this.location = new Array(size).fill(null);\n  this.setAllLocations(Location.NONE);\n};\nTopologyLocation.prototype.isEqualOnSide = function isEqualOnSide (le, locIndex) {\n  return this.location[locIndex] === le.location[locIndex]\n};\nTopologyLocation.prototype.allPositionsEqual = function allPositionsEqual (loc) {\n    var this$1 = this;\n\n  for (var i = 0; i < this.location.length; i++) {\n    if (this$1.location[i] !== loc) { return false }\n  }\n  return true\n};\nTopologyLocation.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nTopologyLocation.prototype.getClass = function getClass () {\n  return TopologyLocation\n};\n\nvar Label = function Label () {\n  this.elt = new Array(2).fill(null);\n  if (arguments.length === 1) {\n    if (Number.isInteger(arguments[0])) {\n      var onLoc = arguments[0];\n      this.elt[0] = new TopologyLocation(onLoc);\n      this.elt[1] = new TopologyLocation(onLoc);\n    } else if (arguments[0] instanceof Label) {\n      var lbl = arguments[0];\n      this.elt[0] = new TopologyLocation(lbl.elt[0]);\n      this.elt[1] = new TopologyLocation(lbl.elt[1]);\n    }\n  } else if (arguments.length === 2) {\n    var geomIndex = arguments[0];\n    var onLoc$1 = arguments[1];\n    this.elt[0] = new TopologyLocation(Location.NONE);\n    this.elt[1] = new TopologyLocation(Location.NONE);\n    this.elt[geomIndex].setLocation(onLoc$1);\n  } else if (arguments.length === 3) {\n    var onLoc$2 = arguments[0];\n    var leftLoc = arguments[1];\n    var rightLoc = arguments[2];\n    this.elt[0] = new TopologyLocation(onLoc$2, leftLoc, rightLoc);\n    this.elt[1] = new TopologyLocation(onLoc$2, leftLoc, rightLoc);\n  } else if (arguments.length === 4) {\n    var geomIndex$1 = arguments[0];\n    var onLoc$3 = arguments[1];\n    var leftLoc$1 = arguments[2];\n    var rightLoc$1 = arguments[3];\n    this.elt[0] = new TopologyLocation(Location.NONE, Location.NONE, Location.NONE);\n    this.elt[1] = new TopologyLocation(Location.NONE, Location.NONE, Location.NONE);\n    this.elt[geomIndex$1].setLocations(onLoc$3, leftLoc$1, rightLoc$1);\n  }\n};\nLabel.prototype.getGeometryCount = function getGeometryCount () {\n  var count = 0;\n  if (!this.elt[0].isNull()) { count++; }\n  if (!this.elt[1].isNull()) { count++; }\n  return count\n};\nLabel.prototype.setAllLocations = function setAllLocations (geomIndex, location) {\n  this.elt[geomIndex].setAllLocations(location);\n};\nLabel.prototype.isNull = function isNull (geomIndex) {\n  return this.elt[geomIndex].isNull()\n};\nLabel.prototype.setAllLocationsIfNull = function setAllLocationsIfNull () {\n  if (arguments.length === 1) {\n    var location = arguments[0];\n    this.setAllLocationsIfNull(0, location);\n    this.setAllLocationsIfNull(1, location);\n  } else if (arguments.length === 2) {\n    var geomIndex = arguments[0];\n    var location$1 = arguments[1];\n    this.elt[geomIndex].setAllLocationsIfNull(location$1);\n  }\n};\nLabel.prototype.isLine = function isLine (geomIndex) {\n  return this.elt[geomIndex].isLine()\n};\nLabel.prototype.merge = function merge (lbl) {\n    var this$1 = this;\n\n  for (var i = 0; i < 2; i++) {\n    if (this$1.elt[i] === null && lbl.elt[i] !== null) {\n      this$1.elt[i] = new TopologyLocation(lbl.elt[i]);\n    } else {\n      this$1.elt[i].merge(lbl.elt[i]);\n    }\n  }\n};\nLabel.prototype.flip = function flip () {\n  this.elt[0].flip();\n  this.elt[1].flip();\n};\nLabel.prototype.getLocation = function getLocation () {\n  if (arguments.length === 1) {\n    var geomIndex = arguments[0];\n    return this.elt[geomIndex].get(Position.ON)\n  } else if (arguments.length === 2) {\n    var geomIndex$1 = arguments[0];\n    var posIndex = arguments[1];\n    return this.elt[geomIndex$1].get(posIndex)\n  }\n};\nLabel.prototype.toString = function toString () {\n  var buf = new StringBuffer();\n  if (this.elt[0] !== null) {\n    buf.append('A:');\n    buf.append(this.elt[0].toString());\n  }\n  if (this.elt[1] !== null) {\n    buf.append(' B:');\n    buf.append(this.elt[1].toString());\n  }\n  return buf.toString()\n};\nLabel.prototype.isArea = function isArea () {\n  if (arguments.length === 0) {\n    return this.elt[0].isArea() || this.elt[1].isArea()\n  } else if (arguments.length === 1) {\n    var geomIndex = arguments[0];\n    return this.elt[geomIndex].isArea()\n  }\n};\nLabel.prototype.isAnyNull = function isAnyNull (geomIndex) {\n  return this.elt[geomIndex].isAnyNull()\n};\nLabel.prototype.setLocation = function setLocation () {\n  if (arguments.length === 2) {\n    var geomIndex = arguments[0];\n    var location = arguments[1];\n    this.elt[geomIndex].setLocation(Position.ON, location);\n  } else if (arguments.length === 3) {\n    var geomIndex$1 = arguments[0];\n    var posIndex = arguments[1];\n    var location$1 = arguments[2];\n    this.elt[geomIndex$1].setLocation(posIndex, location$1);\n  }\n};\nLabel.prototype.isEqualOnSide = function isEqualOnSide (lbl, side) {\n  return this.elt[0].isEqualOnSide(lbl.elt[0], side) && this.elt[1].isEqualOnSide(lbl.elt[1], side)\n};\nLabel.prototype.allPositionsEqual = function allPositionsEqual (geomIndex, loc) {\n  return this.elt[geomIndex].allPositionsEqual(loc)\n};\nLabel.prototype.toLine = function toLine (geomIndex) {\n  if (this.elt[geomIndex].isArea()) { this.elt[geomIndex] = new TopologyLocation(this.elt[geomIndex].location[0]); }\n};\nLabel.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nLabel.prototype.getClass = function getClass () {\n  return Label\n};\nLabel.toLineLabel = function toLineLabel (label) {\n  var lineLabel = new Label(Location.NONE);\n  for (var i = 0; i < 2; i++) {\n    lineLabel.setLocation(i, label.getLocation(i));\n  }\n  return lineLabel\n};\n\nvar EdgeRing = function EdgeRing () {\n  this._startDe = null;\n  this._maxNodeDegree = -1;\n  this._edges = new ArrayList();\n  this._pts = new ArrayList();\n  this._label = new Label(Location.NONE);\n  this._ring = null;\n  this._isHole = null;\n  this._shell = null;\n  this._holes = new ArrayList();\n  this._geometryFactory = null;\n  var start = arguments[0];\n  var geometryFactory = arguments[1];\n  this._geometryFactory = geometryFactory;\n  this.computePoints(start);\n  this.computeRing();\n};\nEdgeRing.prototype.computeRing = function computeRing () {\n    var this$1 = this;\n\n  if (this._ring !== null) { return null }\n  var coord = new Array(this._pts.size()).fill(null);\n  for (var i = 0; i < this._pts.size(); i++) {\n    coord[i] = this$1._pts.get(i);\n  }\n  this._ring = this._geometryFactory.createLinearRing(coord);\n  this._isHole = CGAlgorithms.isCCW(this._ring.getCoordinates());\n};\nEdgeRing.prototype.isIsolated = function isIsolated () {\n  return this._label.getGeometryCount() === 1\n};\nEdgeRing.prototype.computePoints = function computePoints (start) {\n    var this$1 = this;\n\n  this._startDe = start;\n  var de = start;\n  var isFirstEdge = true;\n  do {\n    if (de === null) { throw new TopologyException('Found null DirectedEdge') }\n    if (de.getEdgeRing() === this$1) { throw new TopologyException('Directed Edge visited twice during ring-building at ' + de.getCoordinate()) }\n    this$1._edges.add(de);\n    var label = de.getLabel();\n    Assert.isTrue(label.isArea());\n    this$1.mergeLabel(label);\n    this$1.addPoints(de.getEdge(), de.isForward(), isFirstEdge);\n    isFirstEdge = false;\n    this$1.setEdgeRing(de, this$1);\n    de = this$1.getNext(de);\n  } while (de !== this._startDe)\n};\nEdgeRing.prototype.getLinearRing = function getLinearRing () {\n  return this._ring\n};\nEdgeRing.prototype.getCoordinate = function getCoordinate (i) {\n  return this._pts.get(i)\n};\nEdgeRing.prototype.computeMaxNodeDegree = function computeMaxNodeDegree () {\n    var this$1 = this;\n\n  this._maxNodeDegree = 0;\n  var de = this._startDe;\n  do {\n    var node = de.getNode();\n    var degree = node.getEdges().getOutgoingDegree(this$1);\n    if (degree > this$1._maxNodeDegree) { this$1._maxNodeDegree = degree; }\n    de = this$1.getNext(de);\n  } while (de !== this._startDe)\n  this._maxNodeDegree *= 2;\n};\nEdgeRing.prototype.addPoints = function addPoints (edge, isForward, isFirstEdge) {\n    var this$1 = this;\n\n  var edgePts = edge.getCoordinates();\n  if (isForward) {\n    var startIndex = 1;\n    if (isFirstEdge) { startIndex = 0; }\n    for (var i = startIndex; i < edgePts.length; i++) {\n      this$1._pts.add(edgePts[i]);\n    }\n  } else {\n    var startIndex$1 = edgePts.length - 2;\n    if (isFirstEdge) { startIndex$1 = edgePts.length - 1; }\n    for (var i$1 = startIndex$1; i$1 >= 0; i$1--) {\n      this$1._pts.add(edgePts[i$1]);\n    }\n  }\n};\nEdgeRing.prototype.isHole = function isHole () {\n  return this._isHole\n};\nEdgeRing.prototype.setInResult = function setInResult () {\n  var de = this._startDe;\n  do {\n    de.getEdge().setInResult(true);\n    de = de.getNext();\n  } while (de !== this._startDe)\n};\nEdgeRing.prototype.containsPoint = function containsPoint (p) {\n  var shell = this.getLinearRing();\n  var env = shell.getEnvelopeInternal();\n  if (!env.contains(p)) { return false }\n  if (!CGAlgorithms.isPointInRing(p, shell.getCoordinates())) { return false }\n  for (var i = this._holes.iterator(); i.hasNext();) {\n    var hole = i.next();\n    if (hole.containsPoint(p)) { return false }\n  }\n  return true\n};\nEdgeRing.prototype.addHole = function addHole (ring) {\n  this._holes.add(ring);\n};\nEdgeRing.prototype.isShell = function isShell () {\n  return this._shell === null\n};\nEdgeRing.prototype.getLabel = function getLabel () {\n  return this._label\n};\nEdgeRing.prototype.getEdges = function getEdges () {\n  return this._edges\n};\nEdgeRing.prototype.getMaxNodeDegree = function getMaxNodeDegree () {\n  if (this._maxNodeDegree < 0) { this.computeMaxNodeDegree(); }\n  return this._maxNodeDegree\n};\nEdgeRing.prototype.getShell = function getShell () {\n  return this._shell\n};\nEdgeRing.prototype.mergeLabel = function mergeLabel () {\n  if (arguments.length === 1) {\n    var deLabel = arguments[0];\n    this.mergeLabel(deLabel, 0);\n    this.mergeLabel(deLabel, 1);\n  } else if (arguments.length === 2) {\n    var deLabel$1 = arguments[0];\n    var geomIndex = arguments[1];\n    var loc = deLabel$1.getLocation(geomIndex, Position.RIGHT);\n    if (loc === Location.NONE) { return null }\n    if (this._label.getLocation(geomIndex) === Location.NONE) {\n      this._label.setLocation(geomIndex, loc);\n      return null\n    }\n  }\n};\nEdgeRing.prototype.setShell = function setShell (shell) {\n  this._shell = shell;\n  if (shell !== null) { shell.addHole(this); }\n};\nEdgeRing.prototype.toPolygon = function toPolygon (geometryFactory) {\n    var this$1 = this;\n\n  var holeLR = new Array(this._holes.size()).fill(null);\n  for (var i = 0; i < this._holes.size(); i++) {\n    holeLR[i] = this$1._holes.get(i).getLinearRing();\n  }\n  var poly = geometryFactory.createPolygon(this.getLinearRing(), holeLR);\n  return poly\n};\nEdgeRing.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nEdgeRing.prototype.getClass = function getClass () {\n  return EdgeRing\n};\n\nvar MinimalEdgeRing = (function (EdgeRing$$1) {\n  function MinimalEdgeRing () {\n    var start = arguments[0];\n    var geometryFactory = arguments[1];\n    EdgeRing$$1.call(this, start, geometryFactory);\n  }\n\n  if ( EdgeRing$$1 ) MinimalEdgeRing.__proto__ = EdgeRing$$1;\n  MinimalEdgeRing.prototype = Object.create( EdgeRing$$1 && EdgeRing$$1.prototype );\n  MinimalEdgeRing.prototype.constructor = MinimalEdgeRing;\n  MinimalEdgeRing.prototype.setEdgeRing = function setEdgeRing (de, er) {\n    de.setMinEdgeRing(er);\n  };\n  MinimalEdgeRing.prototype.getNext = function getNext (de) {\n    return de.getNextMin()\n  };\n  MinimalEdgeRing.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  MinimalEdgeRing.prototype.getClass = function getClass () {\n    return MinimalEdgeRing\n  };\n\n  return MinimalEdgeRing;\n}(EdgeRing));\n\nvar MaximalEdgeRing = (function (EdgeRing$$1) {\n  function MaximalEdgeRing () {\n    var start = arguments[0];\n    var geometryFactory = arguments[1];\n    EdgeRing$$1.call(this, start, geometryFactory);\n  }\n\n  if ( EdgeRing$$1 ) MaximalEdgeRing.__proto__ = EdgeRing$$1;\n  MaximalEdgeRing.prototype = Object.create( EdgeRing$$1 && EdgeRing$$1.prototype );\n  MaximalEdgeRing.prototype.constructor = MaximalEdgeRing;\n  MaximalEdgeRing.prototype.buildMinimalRings = function buildMinimalRings () {\n    var this$1 = this;\n\n    var minEdgeRings = new ArrayList();\n    var de = this._startDe;\n    do {\n      if (de.getMinEdgeRing() === null) {\n        var minEr = new MinimalEdgeRing(de, this$1._geometryFactory);\n        minEdgeRings.add(minEr);\n      }\n      de = de.getNext();\n    } while (de !== this._startDe)\n    return minEdgeRings\n  };\n  MaximalEdgeRing.prototype.setEdgeRing = function setEdgeRing (de, er) {\n    de.setEdgeRing(er);\n  };\n  MaximalEdgeRing.prototype.linkDirectedEdgesForMinimalEdgeRings = function linkDirectedEdgesForMinimalEdgeRings () {\n    var this$1 = this;\n\n    var de = this._startDe;\n    do {\n      var node = de.getNode();\n      node.getEdges().linkMinimalDirectedEdges(this$1);\n      de = de.getNext();\n    } while (de !== this._startDe)\n  };\n  MaximalEdgeRing.prototype.getNext = function getNext (de) {\n    return de.getNext()\n  };\n  MaximalEdgeRing.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  MaximalEdgeRing.prototype.getClass = function getClass () {\n    return MaximalEdgeRing\n  };\n\n  return MaximalEdgeRing;\n}(EdgeRing));\n\nvar GraphComponent = function GraphComponent () {\n  this._label = null;\n  this._isInResult = false;\n  this._isCovered = false;\n  this._isCoveredSet = false;\n  this._isVisited = false;\n  if (arguments.length === 0) {} else if (arguments.length === 1) {\n    var label = arguments[0];\n    this._label = label;\n  }\n};\nGraphComponent.prototype.setVisited = function setVisited (isVisited) {\n  this._isVisited = isVisited;\n};\nGraphComponent.prototype.setInResult = function setInResult (isInResult) {\n  this._isInResult = isInResult;\n};\nGraphComponent.prototype.isCovered = function isCovered () {\n  return this._isCovered\n};\nGraphComponent.prototype.isCoveredSet = function isCoveredSet () {\n  return this._isCoveredSet\n};\nGraphComponent.prototype.setLabel = function setLabel (label) {\n  this._label = label;\n};\nGraphComponent.prototype.getLabel = function getLabel () {\n  return this._label\n};\nGraphComponent.prototype.setCovered = function setCovered (isCovered) {\n  this._isCovered = isCovered;\n  this._isCoveredSet = true;\n};\nGraphComponent.prototype.updateIM = function updateIM (im) {\n  Assert.isTrue(this._label.getGeometryCount() >= 2, 'found partial label');\n  this.computeIM(im);\n};\nGraphComponent.prototype.isInResult = function isInResult () {\n  return this._isInResult\n};\nGraphComponent.prototype.isVisited = function isVisited () {\n  return this._isVisited\n};\nGraphComponent.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGraphComponent.prototype.getClass = function getClass () {\n  return GraphComponent\n};\n\nvar Node = (function (GraphComponent$$1) {\n  function Node () {\n    GraphComponent$$1.call(this);\n    this._coord = null;\n    this._edges = null;\n    var coord = arguments[0];\n    var edges = arguments[1];\n    this._coord = coord;\n    this._edges = edges;\n    this._label = new Label(0, Location.NONE);\n  }\n\n  if ( GraphComponent$$1 ) Node.__proto__ = GraphComponent$$1;\n  Node.prototype = Object.create( GraphComponent$$1 && GraphComponent$$1.prototype );\n  Node.prototype.constructor = Node;\n  Node.prototype.isIncidentEdgeInResult = function isIncidentEdgeInResult () {\n    for (var it = this.getEdges().getEdges().iterator(); it.hasNext();) {\n      var de = it.next();\n      if (de.getEdge().isInResult()) { return true }\n    }\n    return false\n  };\n  Node.prototype.isIsolated = function isIsolated () {\n    return this._label.getGeometryCount() === 1\n  };\n  Node.prototype.getCoordinate = function getCoordinate () {\n    return this._coord\n  };\n  Node.prototype.print = function print (out) {\n    out.println('node ' + this._coord + ' lbl: ' + this._label);\n  };\n  Node.prototype.computeIM = function computeIM (im) {};\n  Node.prototype.computeMergedLocation = function computeMergedLocation (label2, eltIndex) {\n    var loc = Location.NONE;\n    loc = this._label.getLocation(eltIndex);\n    if (!label2.isNull(eltIndex)) {\n      var nLoc = label2.getLocation(eltIndex);\n      if (loc !== Location.BOUNDARY) { loc = nLoc; }\n    }\n    return loc\n  };\n  Node.prototype.setLabel = function setLabel () {\n    if (arguments.length === 2) {\n      var argIndex = arguments[0];\n      var onLocation = arguments[1];\n      if (this._label === null) {\n        this._label = new Label(argIndex, onLocation);\n      } else { this._label.setLocation(argIndex, onLocation); }\n    } else { return GraphComponent$$1.prototype.setLabel.apply(this, arguments) }\n  };\n  Node.prototype.getEdges = function getEdges () {\n    return this._edges\n  };\n  Node.prototype.mergeLabel = function mergeLabel () {\n    var this$1 = this;\n\n    if (arguments[0] instanceof Node) {\n      var n = arguments[0];\n      this.mergeLabel(n._label);\n    } else if (arguments[0] instanceof Label) {\n      var label2 = arguments[0];\n      for (var i = 0; i < 2; i++) {\n        var loc = this$1.computeMergedLocation(label2, i);\n        var thisLoc = this$1._label.getLocation(i);\n        if (thisLoc === Location.NONE) { this$1._label.setLocation(i, loc); }\n      }\n    }\n  };\n  Node.prototype.add = function add (e) {\n    this._edges.insert(e);\n    e.setNode(this);\n  };\n  Node.prototype.setLabelBoundary = function setLabelBoundary (argIndex) {\n    if (this._label === null) { return null }\n    var loc = Location.NONE;\n    if (this._label !== null) { loc = this._label.getLocation(argIndex); }\n    var newLoc = null;\n    switch (loc) {\n      case Location.BOUNDARY:\n        newLoc = Location.INTERIOR;\n        break\n      case Location.INTERIOR:\n        newLoc = Location.BOUNDARY;\n        break\n      default:\n        newLoc = Location.BOUNDARY;\n        break\n    }\n    this._label.setLocation(argIndex, newLoc);\n  };\n  Node.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  Node.prototype.getClass = function getClass () {\n    return Node\n  };\n\n  return Node;\n}(GraphComponent));\n\nvar NodeMap = function NodeMap () {\n  this.nodeMap = new TreeMap();\n  this.nodeFact = null;\n  var nodeFact = arguments[0];\n  this.nodeFact = nodeFact;\n};\nNodeMap.prototype.find = function find (coord) {\n  return this.nodeMap.get(coord)\n};\nNodeMap.prototype.addNode = function addNode () {\n  if (arguments[0] instanceof Coordinate) {\n    var coord = arguments[0];\n    var node = this.nodeMap.get(coord);\n    if (node === null) {\n      node = this.nodeFact.createNode(coord);\n      this.nodeMap.put(coord, node);\n    }\n    return node\n  } else if (arguments[0] instanceof Node) {\n    var n = arguments[0];\n    var node$1 = this.nodeMap.get(n.getCoordinate());\n    if (node$1 === null) {\n      this.nodeMap.put(n.getCoordinate(), n);\n      return n\n    }\n    node$1.mergeLabel(n);\n    return node$1\n  }\n};\nNodeMap.prototype.print = function print (out) {\n  for (var it = this.iterator(); it.hasNext();) {\n    var n = it.next();\n    n.print(out);\n  }\n};\nNodeMap.prototype.iterator = function iterator () {\n  return this.nodeMap.values().iterator()\n};\nNodeMap.prototype.values = function values () {\n  return this.nodeMap.values()\n};\nNodeMap.prototype.getBoundaryNodes = function getBoundaryNodes (geomIndex) {\n  var bdyNodes = new ArrayList();\n  for (var i = this.iterator(); i.hasNext();) {\n    var node = i.next();\n    if (node.getLabel().getLocation(geomIndex) === Location.BOUNDARY) { bdyNodes.add(node); }\n  }\n  return bdyNodes\n};\nNodeMap.prototype.add = function add (e) {\n  var p = e.getCoordinate();\n  var n = this.addNode(p);\n  n.add(e);\n};\nNodeMap.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nNodeMap.prototype.getClass = function getClass () {\n  return NodeMap\n};\n\nvar Quadrant = function Quadrant () {};\n\nvar staticAccessors$21 = { NE: { configurable: true },NW: { configurable: true },SW: { configurable: true },SE: { configurable: true } };\n\nQuadrant.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nQuadrant.prototype.getClass = function getClass () {\n  return Quadrant\n};\nQuadrant.isNorthern = function isNorthern (quad) {\n  return quad === Quadrant.NE || quad === Quadrant.NW\n};\nQuadrant.isOpposite = function isOpposite (quad1, quad2) {\n  if (quad1 === quad2) { return false }\n  var diff = (quad1 - quad2 + 4) % 4;\n  if (diff === 2) { return true }\n  return false\n};\nQuadrant.commonHalfPlane = function commonHalfPlane (quad1, quad2) {\n  if (quad1 === quad2) { return quad1 }\n  var diff = (quad1 - quad2 + 4) % 4;\n  if (diff === 2) { return -1 }\n  var min = quad1 < quad2 ? quad1 : quad2;\n  var max = quad1 > quad2 ? quad1 : quad2;\n  if (min === 0 && max === 3) { return 3 }\n  return min\n};\nQuadrant.isInHalfPlane = function isInHalfPlane (quad, halfPlane) {\n  if (halfPlane === Quadrant.SE) {\n    return quad === Quadrant.SE || quad === Quadrant.SW\n  }\n  return quad === halfPlane || quad === halfPlane + 1\n};\nQuadrant.quadrant = function quadrant () {\n  if (typeof arguments[0] === 'number' && typeof arguments[1] === 'number') {\n    var dx = arguments[0];\n    var dy = arguments[1];\n    if (dx === 0.0 && dy === 0.0) { throw new IllegalArgumentException('Cannot compute the quadrant for point ( ' + dx + ', ' + dy + ' )') }\n    if (dx >= 0.0) {\n      if (dy >= 0.0) { return Quadrant.NE; } else { return Quadrant.SE }\n    } else {\n      if (dy >= 0.0) { return Quadrant.NW; } else { return Quadrant.SW }\n    }\n  } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    if (p1.x === p0.x && p1.y === p0.y) { throw new IllegalArgumentException('Cannot compute the quadrant for two identical points ' + p0) }\n    if (p1.x >= p0.x) {\n      if (p1.y >= p0.y) { return Quadrant.NE; } else { return Quadrant.SE }\n    } else {\n      if (p1.y >= p0.y) { return Quadrant.NW; } else { return Quadrant.SW }\n    }\n  }\n};\nstaticAccessors$21.NE.get = function () { return 0 };\nstaticAccessors$21.NW.get = function () { return 1 };\nstaticAccessors$21.SW.get = function () { return 2 };\nstaticAccessors$21.SE.get = function () { return 3 };\n\nObject.defineProperties( Quadrant, staticAccessors$21 );\n\nvar EdgeEnd = function EdgeEnd () {\n  this._edge = null;\n  this._label = null;\n  this._node = null;\n  this._p0 = null;\n  this._p1 = null;\n  this._dx = null;\n  this._dy = null;\n  this._quadrant = null;\n  if (arguments.length === 1) {\n    var edge = arguments[0];\n    this._edge = edge;\n  } else if (arguments.length === 3) {\n    var edge$1 = arguments[0];\n    var p0 = arguments[1];\n    var p1 = arguments[2];\n    var label = null;\n    this._edge = edge$1;\n    this.init(p0, p1);\n    this._label = label;\n  } else if (arguments.length === 4) {\n    var edge$2 = arguments[0];\n    var p0$1 = arguments[1];\n    var p1$1 = arguments[2];\n    var label$1 = arguments[3];\n    this._edge = edge$2;\n    this.init(p0$1, p1$1);\n    this._label = label$1;\n  }\n};\nEdgeEnd.prototype.compareDirection = function compareDirection (e) {\n  if (this._dx === e._dx && this._dy === e._dy) { return 0 }\n  if (this._quadrant > e._quadrant) { return 1 }\n  if (this._quadrant < e._quadrant) { return -1 }\n  return CGAlgorithms.computeOrientation(e._p0, e._p1, this._p1)\n};\nEdgeEnd.prototype.getDy = function getDy () {\n  return this._dy\n};\nEdgeEnd.prototype.getCoordinate = function getCoordinate () {\n  return this._p0\n};\nEdgeEnd.prototype.setNode = function setNode (node) {\n  this._node = node;\n};\nEdgeEnd.prototype.print = function print (out) {\n  var angle = Math.atan2(this._dy, this._dx);\n  var className = this.getClass().getName();\n  var lastDotPos = className.lastIndexOf('.');\n  var name = className.substring(lastDotPos + 1);\n  out.print('  ' + name + ': ' + this._p0 + ' - ' + this._p1 + ' ' + this._quadrant + ':' + angle + '   ' + this._label);\n};\nEdgeEnd.prototype.compareTo = function compareTo (obj) {\n  var e = obj;\n  return this.compareDirection(e)\n};\nEdgeEnd.prototype.getDirectedCoordinate = function getDirectedCoordinate () {\n  return this._p1\n};\nEdgeEnd.prototype.getDx = function getDx () {\n  return this._dx\n};\nEdgeEnd.prototype.getLabel = function getLabel () {\n  return this._label\n};\nEdgeEnd.prototype.getEdge = function getEdge () {\n  return this._edge\n};\nEdgeEnd.prototype.getQuadrant = function getQuadrant () {\n  return this._quadrant\n};\nEdgeEnd.prototype.getNode = function getNode () {\n  return this._node\n};\nEdgeEnd.prototype.toString = function toString () {\n  var angle = Math.atan2(this._dy, this._dx);\n  var className = this.getClass().getName();\n  var lastDotPos = className.lastIndexOf('.');\n  var name = className.substring(lastDotPos + 1);\n  return '  ' + name + ': ' + this._p0 + ' - ' + this._p1 + ' ' + this._quadrant + ':' + angle + '   ' + this._label\n};\nEdgeEnd.prototype.computeLabel = function computeLabel (boundaryNodeRule) {};\nEdgeEnd.prototype.init = function init (p0, p1) {\n  this._p0 = p0;\n  this._p1 = p1;\n  this._dx = p1.x - p0.x;\n  this._dy = p1.y - p0.y;\n  this._quadrant = Quadrant.quadrant(this._dx, this._dy);\n  Assert.isTrue(!(this._dx === 0 && this._dy === 0), 'EdgeEnd with identical endpoints found');\n};\nEdgeEnd.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nEdgeEnd.prototype.getClass = function getClass () {\n  return EdgeEnd\n};\n\nvar DirectedEdge = (function (EdgeEnd$$1) {\n  function DirectedEdge () {\n    var edge = arguments[0];\n    var isForward = arguments[1];\n    EdgeEnd$$1.call(this, edge);\n    this._isForward = null;\n    this._isInResult = false;\n    this._isVisited = false;\n    this._sym = null;\n    this._next = null;\n    this._nextMin = null;\n    this._edgeRing = null;\n    this._minEdgeRing = null;\n    this._depth = [0, -999, -999];\n    this._isForward = isForward;\n    if (isForward) {\n      this.init(edge.getCoordinate(0), edge.getCoordinate(1));\n    } else {\n      var n = edge.getNumPoints() - 1;\n      this.init(edge.getCoordinate(n), edge.getCoordinate(n - 1));\n    }\n    this.computeDirectedLabel();\n  }\n\n  if ( EdgeEnd$$1 ) DirectedEdge.__proto__ = EdgeEnd$$1;\n  DirectedEdge.prototype = Object.create( EdgeEnd$$1 && EdgeEnd$$1.prototype );\n  DirectedEdge.prototype.constructor = DirectedEdge;\n  DirectedEdge.prototype.getNextMin = function getNextMin () {\n    return this._nextMin\n  };\n  DirectedEdge.prototype.getDepth = function getDepth (position) {\n    return this._depth[position]\n  };\n  DirectedEdge.prototype.setVisited = function setVisited (isVisited) {\n    this._isVisited = isVisited;\n  };\n  DirectedEdge.prototype.computeDirectedLabel = function computeDirectedLabel () {\n    this._label = new Label(this._edge.getLabel());\n    if (!this._isForward) { this._label.flip(); }\n  };\n  DirectedEdge.prototype.getNext = function getNext () {\n    return this._next\n  };\n  DirectedEdge.prototype.setDepth = function setDepth (position, depthVal) {\n    if (this._depth[position] !== -999) {\n      if (this._depth[position] !== depthVal) { throw new TopologyException('assigned depths do not match', this.getCoordinate()) }\n    }\n    this._depth[position] = depthVal;\n  };\n  DirectedEdge.prototype.isInteriorAreaEdge = function isInteriorAreaEdge () {\n    var this$1 = this;\n\n    var isInteriorAreaEdge = true;\n    for (var i = 0; i < 2; i++) {\n      if (!(this$1._label.isArea(i) && this$1._label.getLocation(i, Position.LEFT) === Location.INTERIOR && this$1._label.getLocation(i, Position.RIGHT) === Location.INTERIOR)) {\n        isInteriorAreaEdge = false;\n      }\n    }\n    return isInteriorAreaEdge\n  };\n  DirectedEdge.prototype.setNextMin = function setNextMin (nextMin) {\n    this._nextMin = nextMin;\n  };\n  DirectedEdge.prototype.print = function print (out) {\n    EdgeEnd$$1.prototype.print.call(this, out);\n    out.print(' ' + this._depth[Position.LEFT] + '/' + this._depth[Position.RIGHT]);\n    out.print(' (' + this.getDepthDelta() + ')');\n    if (this._isInResult) { out.print(' inResult'); }\n  };\n  DirectedEdge.prototype.setMinEdgeRing = function setMinEdgeRing (minEdgeRing) {\n    this._minEdgeRing = minEdgeRing;\n  };\n  DirectedEdge.prototype.isLineEdge = function isLineEdge () {\n    var isLine = this._label.isLine(0) || this._label.isLine(1);\n    var isExteriorIfArea0 = !this._label.isArea(0) || this._label.allPositionsEqual(0, Location.EXTERIOR);\n    var isExteriorIfArea1 = !this._label.isArea(1) || this._label.allPositionsEqual(1, Location.EXTERIOR);\n    return isLine && isExteriorIfArea0 && isExteriorIfArea1\n  };\n  DirectedEdge.prototype.setEdgeRing = function setEdgeRing (edgeRing) {\n    this._edgeRing = edgeRing;\n  };\n  DirectedEdge.prototype.getMinEdgeRing = function getMinEdgeRing () {\n    return this._minEdgeRing\n  };\n  DirectedEdge.prototype.getDepthDelta = function getDepthDelta () {\n    var depthDelta = this._edge.getDepthDelta();\n    if (!this._isForward) { depthDelta = -depthDelta; }\n    return depthDelta\n  };\n  DirectedEdge.prototype.setInResult = function setInResult (isInResult) {\n    this._isInResult = isInResult;\n  };\n  DirectedEdge.prototype.getSym = function getSym () {\n    return this._sym\n  };\n  DirectedEdge.prototype.isForward = function isForward () {\n    return this._isForward\n  };\n  DirectedEdge.prototype.getEdge = function getEdge () {\n    return this._edge\n  };\n  DirectedEdge.prototype.printEdge = function printEdge (out) {\n    this.print(out);\n    out.print(' ');\n    if (this._isForward) { this._edge.print(out); } else { this._edge.printReverse(out); }\n  };\n  DirectedEdge.prototype.setSym = function setSym (de) {\n    this._sym = de;\n  };\n  DirectedEdge.prototype.setVisitedEdge = function setVisitedEdge (isVisited) {\n    this.setVisited(isVisited);\n    this._sym.setVisited(isVisited);\n  };\n  DirectedEdge.prototype.setEdgeDepths = function setEdgeDepths (position, depth) {\n    var depthDelta = this.getEdge().getDepthDelta();\n    if (!this._isForward) { depthDelta = -depthDelta; }\n    var directionFactor = 1;\n    if (position === Position.LEFT) { directionFactor = -1; }\n    var oppositePos = Position.opposite(position);\n    var delta = depthDelta * directionFactor;\n    var oppositeDepth = depth + delta;\n    this.setDepth(position, depth);\n    this.setDepth(oppositePos, oppositeDepth);\n  };\n  DirectedEdge.prototype.getEdgeRing = function getEdgeRing () {\n    return this._edgeRing\n  };\n  DirectedEdge.prototype.isInResult = function isInResult () {\n    return this._isInResult\n  };\n  DirectedEdge.prototype.setNext = function setNext (next) {\n    this._next = next;\n  };\n  DirectedEdge.prototype.isVisited = function isVisited () {\n    return this._isVisited\n  };\n  DirectedEdge.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  DirectedEdge.prototype.getClass = function getClass () {\n    return DirectedEdge\n  };\n  DirectedEdge.depthFactor = function depthFactor (currLocation, nextLocation) {\n    if (currLocation === Location.EXTERIOR && nextLocation === Location.INTERIOR) { return 1; } else if (currLocation === Location.INTERIOR && nextLocation === Location.EXTERIOR) { return -1 }\n    return 0\n  };\n\n  return DirectedEdge;\n}(EdgeEnd));\n\nvar NodeFactory = function NodeFactory () {};\n\nNodeFactory.prototype.createNode = function createNode (coord) {\n  return new Node(coord, null)\n};\nNodeFactory.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nNodeFactory.prototype.getClass = function getClass () {\n  return NodeFactory\n};\n\nvar PlanarGraph = function PlanarGraph () {\n  this._edges = new ArrayList();\n  this._nodes = null;\n  this._edgeEndList = new ArrayList();\n  if (arguments.length === 0) {\n    this._nodes = new NodeMap(new NodeFactory());\n  } else if (arguments.length === 1) {\n    var nodeFact = arguments[0];\n    this._nodes = new NodeMap(nodeFact);\n  }\n};\nPlanarGraph.prototype.printEdges = function printEdges (out) {\n    var this$1 = this;\n\n  out.println('Edges:');\n  for (var i = 0; i < this._edges.size(); i++) {\n    out.println('edge ' + i + ':');\n    var e = this$1._edges.get(i);\n    e.print(out);\n    e.eiList.print(out);\n  }\n};\nPlanarGraph.prototype.find = function find (coord) {\n  return this._nodes.find(coord)\n};\nPlanarGraph.prototype.addNode = function addNode () {\n  if (arguments[0] instanceof Node) {\n    var node = arguments[0];\n    return this._nodes.addNode(node)\n  } else if (arguments[0] instanceof Coordinate) {\n    var coord = arguments[0];\n    return this._nodes.addNode(coord)\n  }\n};\nPlanarGraph.prototype.getNodeIterator = function getNodeIterator () {\n  return this._nodes.iterator()\n};\nPlanarGraph.prototype.linkResultDirectedEdges = function linkResultDirectedEdges () {\n  for (var nodeit = this._nodes.iterator(); nodeit.hasNext();) {\n    var node = nodeit.next();\n    node.getEdges().linkResultDirectedEdges();\n  }\n};\nPlanarGraph.prototype.debugPrintln = function debugPrintln (o) {\n  System.out.println(o);\n};\nPlanarGraph.prototype.isBoundaryNode = function isBoundaryNode (geomIndex, coord) {\n  var node = this._nodes.find(coord);\n  if (node === null) { return false }\n  var label = node.getLabel();\n  if (label !== null && label.getLocation(geomIndex) === Location.BOUNDARY) { return true }\n  return false\n};\nPlanarGraph.prototype.linkAllDirectedEdges = function linkAllDirectedEdges () {\n  for (var nodeit = this._nodes.iterator(); nodeit.hasNext();) {\n    var node = nodeit.next();\n    node.getEdges().linkAllDirectedEdges();\n  }\n};\nPlanarGraph.prototype.matchInSameDirection = function matchInSameDirection (p0, p1, ep0, ep1) {\n  if (!p0.equals(ep0)) { return false }\n  if (CGAlgorithms.computeOrientation(p0, p1, ep1) === CGAlgorithms.COLLINEAR && Quadrant.quadrant(p0, p1) === Quadrant.quadrant(ep0, ep1)) { return true }\n  return false\n};\nPlanarGraph.prototype.getEdgeEnds = function getEdgeEnds () {\n  return this._edgeEndList\n};\nPlanarGraph.prototype.debugPrint = function debugPrint (o) {\n  System.out.print(o);\n};\nPlanarGraph.prototype.getEdgeIterator = function getEdgeIterator () {\n  return this._edges.iterator()\n};\nPlanarGraph.prototype.findEdgeInSameDirection = function findEdgeInSameDirection (p0, p1) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._edges.size(); i++) {\n    var e = this$1._edges.get(i);\n    var eCoord = e.getCoordinates();\n    if (this$1.matchInSameDirection(p0, p1, eCoord[0], eCoord[1])) { return e }\n    if (this$1.matchInSameDirection(p0, p1, eCoord[eCoord.length - 1], eCoord[eCoord.length - 2])) { return e }\n  }\n  return null\n};\nPlanarGraph.prototype.insertEdge = function insertEdge (e) {\n  this._edges.add(e);\n};\nPlanarGraph.prototype.findEdgeEnd = function findEdgeEnd (e) {\n  for (var i = this.getEdgeEnds().iterator(); i.hasNext();) {\n    var ee = i.next();\n    if (ee.getEdge() === e) { return ee }\n  }\n  return null\n};\nPlanarGraph.prototype.addEdges = function addEdges (edgesToAdd) {\n    var this$1 = this;\n\n  for (var it = edgesToAdd.iterator(); it.hasNext();) {\n    var e = it.next();\n    this$1._edges.add(e);\n    var de1 = new DirectedEdge(e, true);\n    var de2 = new DirectedEdge(e, false);\n    de1.setSym(de2);\n    de2.setSym(de1);\n    this$1.add(de1);\n    this$1.add(de2);\n  }\n};\nPlanarGraph.prototype.add = function add (e) {\n  this._nodes.add(e);\n  this._edgeEndList.add(e);\n};\nPlanarGraph.prototype.getNodes = function getNodes () {\n  return this._nodes.values()\n};\nPlanarGraph.prototype.findEdge = function findEdge (p0, p1) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._edges.size(); i++) {\n    var e = this$1._edges.get(i);\n    var eCoord = e.getCoordinates();\n    if (p0.equals(eCoord[0]) && p1.equals(eCoord[1])) { return e }\n  }\n  return null\n};\nPlanarGraph.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPlanarGraph.prototype.getClass = function getClass () {\n  return PlanarGraph\n};\nPlanarGraph.linkResultDirectedEdges = function linkResultDirectedEdges (nodes) {\n  for (var nodeit = nodes.iterator(); nodeit.hasNext();) {\n    var node = nodeit.next();\n    node.getEdges().linkResultDirectedEdges();\n  }\n};\n\nvar PolygonBuilder = function PolygonBuilder () {\n  this._geometryFactory = null;\n  this._shellList = new ArrayList();\n  var geometryFactory = arguments[0];\n  this._geometryFactory = geometryFactory;\n};\nPolygonBuilder.prototype.sortShellsAndHoles = function sortShellsAndHoles (edgeRings, shellList, freeHoleList) {\n  for (var it = edgeRings.iterator(); it.hasNext();) {\n    var er = it.next();\n    if (er.isHole()) {\n      freeHoleList.add(er);\n    } else {\n      shellList.add(er);\n    }\n  }\n};\nPolygonBuilder.prototype.computePolygons = function computePolygons (shellList) {\n    var this$1 = this;\n\n  var resultPolyList = new ArrayList();\n  for (var it = shellList.iterator(); it.hasNext();) {\n    var er = it.next();\n    var poly = er.toPolygon(this$1._geometryFactory);\n    resultPolyList.add(poly);\n  }\n  return resultPolyList\n};\nPolygonBuilder.prototype.placeFreeHoles = function placeFreeHoles (shellList, freeHoleList) {\n    var this$1 = this;\n\n  for (var it = freeHoleList.iterator(); it.hasNext();) {\n    var hole = it.next();\n    if (hole.getShell() === null) {\n      var shell = this$1.findEdgeRingContaining(hole, shellList);\n      if (shell === null) { throw new TopologyException('unable to assign hole to a shell', hole.getCoordinate(0)) }\n      hole.setShell(shell);\n    }\n  }\n};\nPolygonBuilder.prototype.buildMinimalEdgeRings = function buildMinimalEdgeRings (maxEdgeRings, shellList, freeHoleList) {\n    var this$1 = this;\n\n  var edgeRings = new ArrayList();\n  for (var it = maxEdgeRings.iterator(); it.hasNext();) {\n    var er = it.next();\n    if (er.getMaxNodeDegree() > 2) {\n      er.linkDirectedEdgesForMinimalEdgeRings();\n      var minEdgeRings = er.buildMinimalRings();\n      var shell = this$1.findShell(minEdgeRings);\n      if (shell !== null) {\n        this$1.placePolygonHoles(shell, minEdgeRings);\n        shellList.add(shell);\n      } else {\n        freeHoleList.addAll(minEdgeRings);\n      }\n    } else {\n      edgeRings.add(er);\n    }\n  }\n  return edgeRings\n};\nPolygonBuilder.prototype.containsPoint = function containsPoint (p) {\n  for (var it = this._shellList.iterator(); it.hasNext();) {\n    var er = it.next();\n    if (er.containsPoint(p)) { return true }\n  }\n  return false\n};\nPolygonBuilder.prototype.buildMaximalEdgeRings = function buildMaximalEdgeRings (dirEdges) {\n    var this$1 = this;\n\n  var maxEdgeRings = new ArrayList();\n  for (var it = dirEdges.iterator(); it.hasNext();) {\n    var de = it.next();\n    if (de.isInResult() && de.getLabel().isArea()) {\n      if (de.getEdgeRing() === null) {\n        var er = new MaximalEdgeRing(de, this$1._geometryFactory);\n        maxEdgeRings.add(er);\n        er.setInResult();\n      }\n    }\n  }\n  return maxEdgeRings\n};\nPolygonBuilder.prototype.placePolygonHoles = function placePolygonHoles (shell, minEdgeRings) {\n  for (var it = minEdgeRings.iterator(); it.hasNext();) {\n    var er = it.next();\n    if (er.isHole()) {\n      er.setShell(shell);\n    }\n  }\n};\nPolygonBuilder.prototype.getPolygons = function getPolygons () {\n  var resultPolyList = this.computePolygons(this._shellList);\n  return resultPolyList\n};\nPolygonBuilder.prototype.findEdgeRingContaining = function findEdgeRingContaining (testEr, shellList) {\n  var testRing = testEr.getLinearRing();\n  var testEnv = testRing.getEnvelopeInternal();\n  var testPt = testRing.getCoordinateN(0);\n  var minShell = null;\n  var minEnv = null;\n  for (var it = shellList.iterator(); it.hasNext();) {\n    var tryShell = it.next();\n    var tryRing = tryShell.getLinearRing();\n    var tryEnv = tryRing.getEnvelopeInternal();\n    if (minShell !== null) { minEnv = minShell.getLinearRing().getEnvelopeInternal(); }\n    var isContained = false;\n    if (tryEnv.contains(testEnv) && CGAlgorithms.isPointInRing(testPt, tryRing.getCoordinates())) { isContained = true; }\n    if (isContained) {\n      if (minShell === null || minEnv.contains(tryEnv)) {\n        minShell = tryShell;\n      }\n    }\n  }\n  return minShell\n};\nPolygonBuilder.prototype.findShell = function findShell (minEdgeRings) {\n  var shellCount = 0;\n  var shell = null;\n  for (var it = minEdgeRings.iterator(); it.hasNext();) {\n    var er = it.next();\n    if (!er.isHole()) {\n      shell = er;\n      shellCount++;\n    }\n  }\n  Assert.isTrue(shellCount <= 1, 'found two shells in MinimalEdgeRing list');\n  return shell\n};\nPolygonBuilder.prototype.add = function add () {\n  if (arguments.length === 1) {\n    var graph = arguments[0];\n    this.add(graph.getEdgeEnds(), graph.getNodes());\n  } else if (arguments.length === 2) {\n    var dirEdges = arguments[0];\n    var nodes = arguments[1];\n    PlanarGraph.linkResultDirectedEdges(nodes);\n    var maxEdgeRings = this.buildMaximalEdgeRings(dirEdges);\n    var freeHoleList = new ArrayList();\n    var edgeRings = this.buildMinimalEdgeRings(maxEdgeRings, this._shellList, freeHoleList);\n    this.sortShellsAndHoles(edgeRings, this._shellList, freeHoleList);\n    this.placeFreeHoles(this._shellList, freeHoleList);\n  }\n};\nPolygonBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPolygonBuilder.prototype.getClass = function getClass () {\n  return PolygonBuilder\n};\n\nvar Boundable = function Boundable () {};\n\nBoundable.prototype.getBounds = function getBounds () {};\nBoundable.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBoundable.prototype.getClass = function getClass () {\n  return Boundable\n};\n\nvar ItemBoundable = function ItemBoundable () {\n  this._bounds = null;\n  this._item = null;\n  var bounds = arguments[0];\n  var item = arguments[1];\n  this._bounds = bounds;\n  this._item = item;\n};\nItemBoundable.prototype.getItem = function getItem () {\n  return this._item\n};\nItemBoundable.prototype.getBounds = function getBounds () {\n  return this._bounds\n};\nItemBoundable.prototype.interfaces_ = function interfaces_ () {\n  return [Boundable, Serializable]\n};\nItemBoundable.prototype.getClass = function getClass () {\n  return ItemBoundable\n};\n\nvar PriorityQueue = function PriorityQueue () {\n  this._size = null;\n  this._items = null;\n  this._size = 0;\n  this._items = new ArrayList();\n  this._items.add(null);\n};\nPriorityQueue.prototype.poll = function poll () {\n  if (this.isEmpty()) { return null }\n  var minItem = this._items.get(1);\n  this._items.set(1, this._items.get(this._size));\n  this._size -= 1;\n  this.reorder(1);\n  return minItem\n};\nPriorityQueue.prototype.size = function size () {\n  return this._size\n};\nPriorityQueue.prototype.reorder = function reorder (hole) {\n    var this$1 = this;\n\n  var child = null;\n  var tmp = this._items.get(hole);\n  for (; hole * 2 <= this._size; hole = child) {\n    child = hole * 2;\n    if (child !== this$1._size && this$1._items.get(child + 1).compareTo(this$1._items.get(child)) < 0) { child++; }\n    if (this$1._items.get(child).compareTo(tmp) < 0) { this$1._items.set(hole, this$1._items.get(child)); } else { break }\n  }\n  this._items.set(hole, tmp);\n};\nPriorityQueue.prototype.clear = function clear () {\n  this._size = 0;\n  this._items.clear();\n};\nPriorityQueue.prototype.isEmpty = function isEmpty () {\n  return this._size === 0\n};\nPriorityQueue.prototype.add = function add (x) {\n    var this$1 = this;\n\n  this._items.add(null);\n  this._size += 1;\n  var hole = this._size;\n  this._items.set(0, x);\n  for (; x.compareTo(this._items.get(Math.trunc(hole / 2))) < 0; hole /= 2) {\n    this$1._items.set(hole, this$1._items.get(Math.trunc(hole / 2)));\n  }\n  this._items.set(hole, x);\n};\nPriorityQueue.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPriorityQueue.prototype.getClass = function getClass () {\n  return PriorityQueue\n};\n\nvar ItemVisitor = function ItemVisitor () {};\n\nItemVisitor.prototype.visitItem = function visitItem (item) {};\nItemVisitor.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nItemVisitor.prototype.getClass = function getClass () {\n  return ItemVisitor\n};\n\nvar SpatialIndex = function SpatialIndex () {};\n\nSpatialIndex.prototype.insert = function insert (itemEnv, item) {};\nSpatialIndex.prototype.remove = function remove (itemEnv, item) {};\nSpatialIndex.prototype.query = function query () {\n  // if (arguments.length === 1) {\n  // const searchEnv = arguments[0]\n  // } else if (arguments.length === 2) {\n  // const searchEnv = arguments[0]\n  // const visitor = arguments[1]\n  // }\n};\nSpatialIndex.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSpatialIndex.prototype.getClass = function getClass () {\n  return SpatialIndex\n};\n\nvar AbstractNode = function AbstractNode () {\n  this._childBoundables = new ArrayList();\n  this._bounds = null;\n  this._level = null;\n  if (arguments.length === 0) {} else if (arguments.length === 1) {\n    var level = arguments[0];\n    this._level = level;\n  }\n};\n\nvar staticAccessors$22 = { serialVersionUID: { configurable: true } };\nAbstractNode.prototype.getLevel = function getLevel () {\n  return this._level\n};\nAbstractNode.prototype.size = function size () {\n  return this._childBoundables.size()\n};\nAbstractNode.prototype.getChildBoundables = function getChildBoundables () {\n  return this._childBoundables\n};\nAbstractNode.prototype.addChildBoundable = function addChildBoundable (childBoundable) {\n  Assert.isTrue(this._bounds === null);\n  this._childBoundables.add(childBoundable);\n};\nAbstractNode.prototype.isEmpty = function isEmpty () {\n  return this._childBoundables.isEmpty()\n};\nAbstractNode.prototype.getBounds = function getBounds () {\n  if (this._bounds === null) {\n    this._bounds = this.computeBounds();\n  }\n  return this._bounds\n};\nAbstractNode.prototype.interfaces_ = function interfaces_ () {\n  return [Boundable, Serializable]\n};\nAbstractNode.prototype.getClass = function getClass () {\n  return AbstractNode\n};\nstaticAccessors$22.serialVersionUID.get = function () { return 6493722185909573708 };\n\nObject.defineProperties( AbstractNode, staticAccessors$22 );\n\nvar Collections = function Collections () {};\n\nCollections.reverseOrder = function reverseOrder () {\n  return {\n    compare: function compare (a, b) {\n      return b.compareTo(a)\n    }\n  }\n};\nCollections.min = function min (l) {\n  Collections.sort(l);\n  return l.get(0)\n};\nCollections.sort = function sort (l, c) {\n  var a = l.toArray();\n  if (c) {\n    Arrays.sort(a, c);\n  } else {\n    Arrays.sort(a);\n  }\n  var i = l.iterator();\n  for (var pos = 0, alen = a.length; pos < alen; pos++) {\n    i.next();\n    i.set(a[pos]);\n  }\n};\nCollections.singletonList = function singletonList (o) {\n  var arrayList = new ArrayList();\n  arrayList.add(o);\n  return arrayList\n};\n\nvar BoundablePair = function BoundablePair () {\n  this._boundable1 = null;\n  this._boundable2 = null;\n  this._distance = null;\n  this._itemDistance = null;\n  var boundable1 = arguments[0];\n  var boundable2 = arguments[1];\n  var itemDistance = arguments[2];\n  this._boundable1 = boundable1;\n  this._boundable2 = boundable2;\n  this._itemDistance = itemDistance;\n  this._distance = this.distance();\n};\nBoundablePair.prototype.expandToQueue = function expandToQueue (priQ, minDistance) {\n  var isComp1 = BoundablePair.isComposite(this._boundable1);\n  var isComp2 = BoundablePair.isComposite(this._boundable2);\n  if (isComp1 && isComp2) {\n    if (BoundablePair.area(this._boundable1) > BoundablePair.area(this._boundable2)) {\n      this.expand(this._boundable1, this._boundable2, priQ, minDistance);\n      return null\n    } else {\n      this.expand(this._boundable2, this._boundable1, priQ, minDistance);\n      return null\n    }\n  } else if (isComp1) {\n    this.expand(this._boundable1, this._boundable2, priQ, minDistance);\n    return null\n  } else if (isComp2) {\n    this.expand(this._boundable2, this._boundable1, priQ, minDistance);\n    return null\n  }\n  throw new IllegalArgumentException('neither boundable is composite')\n};\nBoundablePair.prototype.isLeaves = function isLeaves () {\n  return !(BoundablePair.isComposite(this._boundable1) || BoundablePair.isComposite(this._boundable2))\n};\nBoundablePair.prototype.compareTo = function compareTo (o) {\n  var nd = o;\n  if (this._distance < nd._distance) { return -1 }\n  if (this._distance > nd._distance) { return 1 }\n  return 0\n};\nBoundablePair.prototype.expand = function expand (bndComposite, bndOther, priQ, minDistance) {\n    var this$1 = this;\n\n  var children = bndComposite.getChildBoundables();\n  for (var i = children.iterator(); i.hasNext();) {\n    var child = i.next();\n    var bp = new BoundablePair(child, bndOther, this$1._itemDistance);\n    if (bp.getDistance() < minDistance) {\n      priQ.add(bp);\n    }\n  }\n};\nBoundablePair.prototype.getBoundable = function getBoundable (i) {\n  if (i === 0) { return this._boundable1 }\n  return this._boundable2\n};\nBoundablePair.prototype.getDistance = function getDistance () {\n  return this._distance\n};\nBoundablePair.prototype.distance = function distance () {\n  if (this.isLeaves()) {\n    return this._itemDistance.distance(this._boundable1, this._boundable2)\n  }\n  return this._boundable1.getBounds().distance(this._boundable2.getBounds())\n};\nBoundablePair.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nBoundablePair.prototype.getClass = function getClass () {\n  return BoundablePair\n};\nBoundablePair.area = function area (b) {\n  return b.getBounds().getArea()\n};\nBoundablePair.isComposite = function isComposite (item) {\n  return item instanceof AbstractNode\n};\n\nvar AbstractSTRtree = function AbstractSTRtree () {\n  this._root = null;\n  this._built = false;\n  this._itemBoundables = new ArrayList();\n  this._nodeCapacity = null;\n  if (arguments.length === 0) {\n    var nodeCapacity = AbstractSTRtree.DEFAULT_NODE_CAPACITY;\n    this._nodeCapacity = nodeCapacity;\n  } else if (arguments.length === 1) {\n    var nodeCapacity$1 = arguments[0];\n    Assert.isTrue(nodeCapacity$1 > 1, 'Node capacity must be greater than 1');\n    this._nodeCapacity = nodeCapacity$1;\n  }\n};\n\nvar staticAccessors$23 = { IntersectsOp: { configurable: true },serialVersionUID: { configurable: true },DEFAULT_NODE_CAPACITY: { configurable: true } };\nAbstractSTRtree.prototype.getNodeCapacity = function getNodeCapacity () {\n  return this._nodeCapacity\n};\nAbstractSTRtree.prototype.lastNode = function lastNode (nodes) {\n  return nodes.get(nodes.size() - 1)\n};\nAbstractSTRtree.prototype.size = function size () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    if (this.isEmpty()) {\n      return 0\n    }\n    this.build();\n    return this.size(this._root)\n  } else if (arguments.length === 1) {\n    var node = arguments[0];\n    var size = 0;\n    for (var i = node.getChildBoundables().iterator(); i.hasNext();) {\n      var childBoundable = i.next();\n      if (childBoundable instanceof AbstractNode) {\n        size += this$1.size(childBoundable);\n      } else if (childBoundable instanceof ItemBoundable) {\n        size += 1;\n      }\n    }\n    return size\n  }\n};\nAbstractSTRtree.prototype.removeItem = function removeItem (node, item) {\n  var childToRemove = null;\n  for (var i = node.getChildBoundables().iterator(); i.hasNext();) {\n    var childBoundable = i.next();\n    if (childBoundable instanceof ItemBoundable) {\n      if (childBoundable.getItem() === item) { childToRemove = childBoundable; }\n    }\n  }\n  if (childToRemove !== null) {\n    node.getChildBoundables().remove(childToRemove);\n    return true\n  }\n  return false\n};\nAbstractSTRtree.prototype.itemsTree = function itemsTree () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    this.build();\n    var valuesTree = this.itemsTree(this._root);\n    if (valuesTree === null) { return new ArrayList() }\n    return valuesTree\n  } else if (arguments.length === 1) {\n    var node = arguments[0];\n    var valuesTreeForNode = new ArrayList();\n    for (var i = node.getChildBoundables().iterator(); i.hasNext();) {\n      var childBoundable = i.next();\n      if (childBoundable instanceof AbstractNode) {\n        var valuesTreeForChild = this$1.itemsTree(childBoundable);\n        if (valuesTreeForChild !== null) { valuesTreeForNode.add(valuesTreeForChild); }\n      } else if (childBoundable instanceof ItemBoundable) {\n        valuesTreeForNode.add(childBoundable.getItem());\n      } else {\n        Assert.shouldNeverReachHere();\n      }\n    }\n    if (valuesTreeForNode.size() <= 0) { return null }\n    return valuesTreeForNode\n  }\n};\nAbstractSTRtree.prototype.insert = function insert (bounds, item) {\n  Assert.isTrue(!this._built, 'Cannot insert items into an STR packed R-tree after it has been built.');\n  this._itemBoundables.add(new ItemBoundable(bounds, item));\n};\nAbstractSTRtree.prototype.boundablesAtLevel = function boundablesAtLevel () {\n    var this$1 = this;\n\n  if (arguments.length === 1) {\n    var level = arguments[0];\n    var boundables = new ArrayList();\n    this.boundablesAtLevel(level, this._root, boundables);\n    return boundables\n  } else if (arguments.length === 3) {\n    var level$1 = arguments[0];\n    var top = arguments[1];\n    var boundables$1 = arguments[2];\n    Assert.isTrue(level$1 > -2);\n    if (top.getLevel() === level$1) {\n      boundables$1.add(top);\n      return null\n    }\n    for (var i = top.getChildBoundables().iterator(); i.hasNext();) {\n      var boundable = i.next();\n      if (boundable instanceof AbstractNode) {\n        this$1.boundablesAtLevel(level$1, boundable, boundables$1);\n      } else {\n        Assert.isTrue(boundable instanceof ItemBoundable);\n        if (level$1 === -1) {\n          boundables$1.add(boundable);\n        }\n      }\n    }\n    return null\n  }\n};\nAbstractSTRtree.prototype.query = function query () {\n    var this$1 = this;\n\n  if (arguments.length === 1) {\n    var searchBounds = arguments[0];\n    this.build();\n    var matches = new ArrayList();\n    if (this.isEmpty()) {\n      return matches\n    }\n    if (this.getIntersectsOp().intersects(this._root.getBounds(), searchBounds)) {\n      this.query(searchBounds, this._root, matches);\n    }\n    return matches\n  } else if (arguments.length === 2) {\n    var searchBounds$1 = arguments[0];\n    var visitor = arguments[1];\n    this.build();\n    if (this.isEmpty()) {\n      return null\n    }\n    if (this.getIntersectsOp().intersects(this._root.getBounds(), searchBounds$1)) {\n      this.query(searchBounds$1, this._root, visitor);\n    }\n  } else if (arguments.length === 3) {\n    if (hasInterface(arguments[2], ItemVisitor) && (arguments[0] instanceof Object && arguments[1] instanceof AbstractNode)) {\n      var searchBounds$2 = arguments[0];\n      var node = arguments[1];\n      var visitor$1 = arguments[2];\n      var childBoundables = node.getChildBoundables();\n      for (var i = 0; i < childBoundables.size(); i++) {\n        var childBoundable = childBoundables.get(i);\n        if (!this$1.getIntersectsOp().intersects(childBoundable.getBounds(), searchBounds$2)) {\n          continue\n        }\n        if (childBoundable instanceof AbstractNode) {\n          this$1.query(searchBounds$2, childBoundable, visitor$1);\n        } else if (childBoundable instanceof ItemBoundable) {\n          visitor$1.visitItem(childBoundable.getItem());\n        } else {\n          Assert.shouldNeverReachHere();\n        }\n      }\n    } else if (hasInterface(arguments[2], List) && (arguments[0] instanceof Object && arguments[1] instanceof AbstractNode)) {\n      var searchBounds$3 = arguments[0];\n      var node$1 = arguments[1];\n      var matches$1 = arguments[2];\n      var childBoundables$1 = node$1.getChildBoundables();\n      for (var i$1 = 0; i$1 < childBoundables$1.size(); i$1++) {\n        var childBoundable$1 = childBoundables$1.get(i$1);\n        if (!this$1.getIntersectsOp().intersects(childBoundable$1.getBounds(), searchBounds$3)) {\n          continue\n        }\n        if (childBoundable$1 instanceof AbstractNode) {\n          this$1.query(searchBounds$3, childBoundable$1, matches$1);\n        } else if (childBoundable$1 instanceof ItemBoundable) {\n          matches$1.add(childBoundable$1.getItem());\n        } else {\n          Assert.shouldNeverReachHere();\n        }\n      }\n    }\n  }\n};\nAbstractSTRtree.prototype.build = function build () {\n  if (this._built) { return null }\n  this._root = this._itemBoundables.isEmpty() ? this.createNode(0) : this.createHigherLevels(this._itemBoundables, -1);\n  this._itemBoundables = null;\n  this._built = true;\n};\nAbstractSTRtree.prototype.getRoot = function getRoot () {\n  this.build();\n  return this._root\n};\nAbstractSTRtree.prototype.remove = function remove () {\n    var this$1 = this;\n\n  if (arguments.length === 2) {\n    var searchBounds = arguments[0];\n    var item = arguments[1];\n    this.build();\n    if (this.getIntersectsOp().intersects(this._root.getBounds(), searchBounds)) {\n      return this.remove(searchBounds, this._root, item)\n    }\n    return false\n  } else if (arguments.length === 3) {\n    var searchBounds$1 = arguments[0];\n    var node = arguments[1];\n    var item$1 = arguments[2];\n    var found = this.removeItem(node, item$1);\n    if (found) { return true }\n    var childToPrune = null;\n    for (var i = node.getChildBoundables().iterator(); i.hasNext();) {\n      var childBoundable = i.next();\n      if (!this$1.getIntersectsOp().intersects(childBoundable.getBounds(), searchBounds$1)) {\n        continue\n      }\n      if (childBoundable instanceof AbstractNode) {\n        found = this$1.remove(searchBounds$1, childBoundable, item$1);\n        if (found) {\n          childToPrune = childBoundable;\n          break\n        }\n      }\n    }\n    if (childToPrune !== null) {\n      if (childToPrune.getChildBoundables().isEmpty()) {\n        node.getChildBoundables().remove(childToPrune);\n      }\n    }\n    return found\n  }\n};\nAbstractSTRtree.prototype.createHigherLevels = function createHigherLevels (boundablesOfALevel, level) {\n  Assert.isTrue(!boundablesOfALevel.isEmpty());\n  var parentBoundables = this.createParentBoundables(boundablesOfALevel, level + 1);\n  if (parentBoundables.size() === 1) {\n    return parentBoundables.get(0)\n  }\n  return this.createHigherLevels(parentBoundables, level + 1)\n};\nAbstractSTRtree.prototype.depth = function depth () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    if (this.isEmpty()) {\n      return 0\n    }\n    this.build();\n    return this.depth(this._root)\n  } else if (arguments.length === 1) {\n    var node = arguments[0];\n    var maxChildDepth = 0;\n    for (var i = node.getChildBoundables().iterator(); i.hasNext();) {\n      var childBoundable = i.next();\n      if (childBoundable instanceof AbstractNode) {\n        var childDepth = this$1.depth(childBoundable);\n        if (childDepth > maxChildDepth) { maxChildDepth = childDepth; }\n      }\n    }\n    return maxChildDepth + 1\n  }\n};\nAbstractSTRtree.prototype.createParentBoundables = function createParentBoundables (childBoundables, newLevel) {\n    var this$1 = this;\n\n  Assert.isTrue(!childBoundables.isEmpty());\n  var parentBoundables = new ArrayList();\n  parentBoundables.add(this.createNode(newLevel));\n  var sortedChildBoundables = new ArrayList(childBoundables);\n  Collections.sort(sortedChildBoundables, this.getComparator());\n  for (var i = sortedChildBoundables.iterator(); i.hasNext();) {\n    var childBoundable = i.next();\n    if (this$1.lastNode(parentBoundables).getChildBoundables().size() === this$1.getNodeCapacity()) {\n      parentBoundables.add(this$1.createNode(newLevel));\n    }\n    this$1.lastNode(parentBoundables).addChildBoundable(childBoundable);\n  }\n  return parentBoundables\n};\nAbstractSTRtree.prototype.isEmpty = function isEmpty () {\n  if (!this._built) { return this._itemBoundables.isEmpty() }\n  return this._root.isEmpty()\n};\nAbstractSTRtree.prototype.interfaces_ = function interfaces_ () {\n  return [Serializable]\n};\nAbstractSTRtree.prototype.getClass = function getClass () {\n  return AbstractSTRtree\n};\nAbstractSTRtree.compareDoubles = function compareDoubles (a, b) {\n  return a > b ? 1 : a < b ? -1 : 0\n};\nstaticAccessors$23.IntersectsOp.get = function () { return IntersectsOp };\nstaticAccessors$23.serialVersionUID.get = function () { return -3886435814360241337 };\nstaticAccessors$23.DEFAULT_NODE_CAPACITY.get = function () { return 10 };\n\nObject.defineProperties( AbstractSTRtree, staticAccessors$23 );\n\nvar IntersectsOp = function IntersectsOp () {};\n\nvar ItemDistance = function ItemDistance () {};\n\nItemDistance.prototype.distance = function distance (item1, item2) {};\nItemDistance.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nItemDistance.prototype.getClass = function getClass () {\n  return ItemDistance\n};\n\nvar STRtree = (function (AbstractSTRtree$$1) {\n  function STRtree (nodeCapacity) {\n    nodeCapacity = nodeCapacity || STRtree.DEFAULT_NODE_CAPACITY;\n    AbstractSTRtree$$1.call(this, nodeCapacity);\n  }\n\n  if ( AbstractSTRtree$$1 ) STRtree.__proto__ = AbstractSTRtree$$1;\n  STRtree.prototype = Object.create( AbstractSTRtree$$1 && AbstractSTRtree$$1.prototype );\n  STRtree.prototype.constructor = STRtree;\n\n  var staticAccessors = { STRtreeNode: { configurable: true },serialVersionUID: { configurable: true },xComparator: { configurable: true },yComparator: { configurable: true },intersectsOp: { configurable: true },DEFAULT_NODE_CAPACITY: { configurable: true } };\n  STRtree.prototype.createParentBoundablesFromVerticalSlices = function createParentBoundablesFromVerticalSlices (verticalSlices, newLevel) {\n    var this$1 = this;\n\n    Assert.isTrue(verticalSlices.length > 0);\n    var parentBoundables = new ArrayList();\n    for (var i = 0; i < verticalSlices.length; i++) {\n      parentBoundables.addAll(this$1.createParentBoundablesFromVerticalSlice(verticalSlices[i], newLevel));\n    }\n    return parentBoundables\n  };\n  STRtree.prototype.createNode = function createNode (level) {\n    return new STRtreeNode(level)\n  };\n  STRtree.prototype.size = function size () {\n    if (arguments.length === 0) {\n      return AbstractSTRtree$$1.prototype.size.call(this)\n    } else { return AbstractSTRtree$$1.prototype.size.apply(this, arguments) }\n  };\n  STRtree.prototype.insert = function insert () {\n    if (arguments.length === 2) {\n      var itemEnv = arguments[0];\n      var item = arguments[1];\n      if (itemEnv.isNull()) {\n        return null\n      }\n      AbstractSTRtree$$1.prototype.insert.call(this, itemEnv, item);\n    } else { return AbstractSTRtree$$1.prototype.insert.apply(this, arguments) }\n  };\n  STRtree.prototype.getIntersectsOp = function getIntersectsOp () {\n    return STRtree.intersectsOp\n  };\n  STRtree.prototype.verticalSlices = function verticalSlices (childBoundables, sliceCount) {\n    var sliceCapacity = Math.trunc(Math.ceil(childBoundables.size() / sliceCount));\n    var slices = new Array(sliceCount).fill(null);\n    var i = childBoundables.iterator();\n    for (var j = 0; j < sliceCount; j++) {\n      slices[j] = new ArrayList();\n      var boundablesAddedToSlice = 0;\n      while (i.hasNext() && boundablesAddedToSlice < sliceCapacity) {\n        var childBoundable = i.next();\n        slices[j].add(childBoundable);\n        boundablesAddedToSlice++;\n      }\n    }\n    return slices\n  };\n  STRtree.prototype.query = function query () {\n    if (arguments.length === 1) {\n      var searchEnv = arguments[0];\n      return AbstractSTRtree$$1.prototype.query.call(this, searchEnv)\n    } else if (arguments.length === 2) {\n      var searchEnv$1 = arguments[0];\n      var visitor = arguments[1];\n      AbstractSTRtree$$1.prototype.query.call(this, searchEnv$1, visitor);\n    } else if (arguments.length === 3) {\n      if (hasInterface(arguments[2], ItemVisitor) && (arguments[0] instanceof Object && arguments[1] instanceof AbstractNode)) {\n        var searchBounds = arguments[0];\n        var node = arguments[1];\n        var visitor$1 = arguments[2];\n        AbstractSTRtree$$1.prototype.query.call(this, searchBounds, node, visitor$1);\n      } else if (hasInterface(arguments[2], List) && (arguments[0] instanceof Object && arguments[1] instanceof AbstractNode)) {\n        var searchBounds$1 = arguments[0];\n        var node$1 = arguments[1];\n        var matches = arguments[2];\n        AbstractSTRtree$$1.prototype.query.call(this, searchBounds$1, node$1, matches);\n      }\n    }\n  };\n  STRtree.prototype.getComparator = function getComparator () {\n    return STRtree.yComparator\n  };\n  STRtree.prototype.createParentBoundablesFromVerticalSlice = function createParentBoundablesFromVerticalSlice (childBoundables, newLevel) {\n    return AbstractSTRtree$$1.prototype.createParentBoundables.call(this, childBoundables, newLevel)\n  };\n  STRtree.prototype.remove = function remove () {\n    if (arguments.length === 2) {\n      var itemEnv = arguments[0];\n      var item = arguments[1];\n      return AbstractSTRtree$$1.prototype.remove.call(this, itemEnv, item)\n    } else { return AbstractSTRtree$$1.prototype.remove.apply(this, arguments) }\n  };\n  STRtree.prototype.depth = function depth () {\n    if (arguments.length === 0) {\n      return AbstractSTRtree$$1.prototype.depth.call(this)\n    } else { return AbstractSTRtree$$1.prototype.depth.apply(this, arguments) }\n  };\n  STRtree.prototype.createParentBoundables = function createParentBoundables (childBoundables, newLevel) {\n    Assert.isTrue(!childBoundables.isEmpty());\n    var minLeafCount = Math.trunc(Math.ceil(childBoundables.size() / this.getNodeCapacity()));\n    var sortedChildBoundables = new ArrayList(childBoundables);\n    Collections.sort(sortedChildBoundables, STRtree.xComparator);\n    var verticalSlices = this.verticalSlices(sortedChildBoundables, Math.trunc(Math.ceil(Math.sqrt(minLeafCount))));\n    return this.createParentBoundablesFromVerticalSlices(verticalSlices, newLevel)\n  };\n  STRtree.prototype.nearestNeighbour = function nearestNeighbour () {\n    if (arguments.length === 1) {\n      if (hasInterface(arguments[0], ItemDistance)) {\n        var itemDist = arguments[0];\n        var bp = new BoundablePair(this.getRoot(), this.getRoot(), itemDist);\n        return this.nearestNeighbour(bp)\n      } else if (arguments[0] instanceof BoundablePair) {\n        var initBndPair = arguments[0];\n        return this.nearestNeighbour(initBndPair, Double.POSITIVE_INFINITY)\n      }\n    } else if (arguments.length === 2) {\n      if (arguments[0] instanceof STRtree && hasInterface(arguments[1], ItemDistance)) {\n        var tree = arguments[0];\n        var itemDist$1 = arguments[1];\n        var bp$1 = new BoundablePair(this.getRoot(), tree.getRoot(), itemDist$1);\n        return this.nearestNeighbour(bp$1)\n      } else if (arguments[0] instanceof BoundablePair && typeof arguments[1] === 'number') {\n        var initBndPair$1 = arguments[0];\n        var maxDistance = arguments[1];\n        var distanceLowerBound = maxDistance;\n        var minPair = null;\n        var priQ = new PriorityQueue();\n        priQ.add(initBndPair$1);\n        while (!priQ.isEmpty() && distanceLowerBound > 0.0) {\n          var bndPair = priQ.poll();\n          var currentDistance = bndPair.getDistance();\n          if (currentDistance >= distanceLowerBound) { break }\n          if (bndPair.isLeaves()) {\n            distanceLowerBound = currentDistance;\n            minPair = bndPair;\n          } else {\n            bndPair.expandToQueue(priQ, distanceLowerBound);\n          }\n        }\n        return [minPair.getBoundable(0).getItem(), minPair.getBoundable(1).getItem()]\n      }\n    } else if (arguments.length === 3) {\n      var env = arguments[0];\n      var item = arguments[1];\n      var itemDist$2 = arguments[2];\n      var bnd = new ItemBoundable(env, item);\n      var bp$2 = new BoundablePair(this.getRoot(), bnd, itemDist$2);\n      return this.nearestNeighbour(bp$2)[0]\n    }\n  };\n  STRtree.prototype.interfaces_ = function interfaces_ () {\n    return [SpatialIndex, Serializable]\n  };\n  STRtree.prototype.getClass = function getClass () {\n    return STRtree\n  };\n  STRtree.centreX = function centreX (e) {\n    return STRtree.avg(e.getMinX(), e.getMaxX())\n  };\n  STRtree.avg = function avg (a, b) {\n    return (a + b) / 2\n  };\n  STRtree.centreY = function centreY (e) {\n    return STRtree.avg(e.getMinY(), e.getMaxY())\n  };\n  staticAccessors.STRtreeNode.get = function () { return STRtreeNode };\n  staticAccessors.serialVersionUID.get = function () { return 259274702368956900 };\n  staticAccessors.xComparator.get = function () {\n    return {\n      interfaces_: function () {\n        return [Comparator]\n      },\n      compare: function (o1, o2) {\n        return AbstractSTRtree$$1.compareDoubles(STRtree.centreX(o1.getBounds()), STRtree.centreX(o2.getBounds()))\n      }\n    }\n  };\n  staticAccessors.yComparator.get = function () {\n    return {\n      interfaces_: function () {\n        return [Comparator]\n      },\n      compare: function (o1, o2) {\n        return AbstractSTRtree$$1.compareDoubles(STRtree.centreY(o1.getBounds()), STRtree.centreY(o2.getBounds()))\n      }\n    }\n  };\n  staticAccessors.intersectsOp.get = function () {\n    return {\n      interfaces_: function () {\n        return [AbstractSTRtree$$1.IntersectsOp]\n      },\n      intersects: function (aBounds, bBounds) {\n        return aBounds.intersects(bBounds)\n      }\n    }\n  };\n  staticAccessors.DEFAULT_NODE_CAPACITY.get = function () { return 10 };\n\n  Object.defineProperties( STRtree, staticAccessors );\n\n  return STRtree;\n}(AbstractSTRtree));\n\nvar STRtreeNode = (function (AbstractNode$$1) {\n  function STRtreeNode () {\n    var level = arguments[0];\n    AbstractNode$$1.call(this, level);\n  }\n\n  if ( AbstractNode$$1 ) STRtreeNode.__proto__ = AbstractNode$$1;\n  STRtreeNode.prototype = Object.create( AbstractNode$$1 && AbstractNode$$1.prototype );\n  STRtreeNode.prototype.constructor = STRtreeNode;\n  STRtreeNode.prototype.computeBounds = function computeBounds () {\n    var bounds = null;\n    for (var i = this.getChildBoundables().iterator(); i.hasNext();) {\n      var childBoundable = i.next();\n      if (bounds === null) {\n        bounds = new Envelope(childBoundable.getBounds());\n      } else {\n        bounds.expandToInclude(childBoundable.getBounds());\n      }\n    }\n    return bounds\n  };\n  STRtreeNode.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  STRtreeNode.prototype.getClass = function getClass () {\n    return STRtreeNode\n  };\n\n  return STRtreeNode;\n}(AbstractNode));\n\nvar SegmentPointComparator = function SegmentPointComparator () {};\n\nSegmentPointComparator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSegmentPointComparator.prototype.getClass = function getClass () {\n  return SegmentPointComparator\n};\nSegmentPointComparator.relativeSign = function relativeSign (x0, x1) {\n  if (x0 < x1) { return -1 }\n  if (x0 > x1) { return 1 }\n  return 0\n};\nSegmentPointComparator.compare = function compare (octant, p0, p1) {\n  if (p0.equals2D(p1)) { return 0 }\n  var xSign = SegmentPointComparator.relativeSign(p0.x, p1.x);\n  var ySign = SegmentPointComparator.relativeSign(p0.y, p1.y);\n  switch (octant) {\n    case 0:\n      return SegmentPointComparator.compareValue(xSign, ySign)\n    case 1:\n      return SegmentPointComparator.compareValue(ySign, xSign)\n    case 2:\n      return SegmentPointComparator.compareValue(ySign, -xSign)\n    case 3:\n      return SegmentPointComparator.compareValue(-xSign, ySign)\n    case 4:\n      return SegmentPointComparator.compareValue(-xSign, -ySign)\n    case 5:\n      return SegmentPointComparator.compareValue(-ySign, -xSign)\n    case 6:\n      return SegmentPointComparator.compareValue(-ySign, xSign)\n    case 7:\n      return SegmentPointComparator.compareValue(xSign, -ySign)\n    default:\n  }\n  Assert.shouldNeverReachHere('invalid octant value');\n  return 0\n};\nSegmentPointComparator.compareValue = function compareValue (compareSign0, compareSign1) {\n  if (compareSign0 < 0) { return -1 }\n  if (compareSign0 > 0) { return 1 }\n  if (compareSign1 < 0) { return -1 }\n  if (compareSign1 > 0) { return 1 }\n  return 0\n};\n\nvar SegmentNode = function SegmentNode () {\n  this._segString = null;\n  this.coord = null;\n  this.segmentIndex = null;\n  this._segmentOctant = null;\n  this._isInterior = null;\n  var segString = arguments[0];\n  var coord = arguments[1];\n  var segmentIndex = arguments[2];\n  var segmentOctant = arguments[3];\n  this._segString = segString;\n  this.coord = new Coordinate(coord);\n  this.segmentIndex = segmentIndex;\n  this._segmentOctant = segmentOctant;\n  this._isInterior = !coord.equals2D(segString.getCoordinate(segmentIndex));\n};\nSegmentNode.prototype.getCoordinate = function getCoordinate () {\n  return this.coord\n};\nSegmentNode.prototype.print = function print (out) {\n  out.print(this.coord);\n  out.print(' seg # = ' + this.segmentIndex);\n};\nSegmentNode.prototype.compareTo = function compareTo (obj) {\n  var other = obj;\n  if (this.segmentIndex < other.segmentIndex) { return -1 }\n  if (this.segmentIndex > other.segmentIndex) { return 1 }\n  if (this.coord.equals2D(other.coord)) { return 0 }\n  return SegmentPointComparator.compare(this._segmentOctant, this.coord, other.coord)\n};\nSegmentNode.prototype.isEndPoint = function isEndPoint (maxSegmentIndex) {\n  if (this.segmentIndex === 0 && !this._isInterior) { return true }\n  if (this.segmentIndex === maxSegmentIndex) { return true }\n  return false\n};\nSegmentNode.prototype.isInterior = function isInterior () {\n  return this._isInterior\n};\nSegmentNode.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nSegmentNode.prototype.getClass = function getClass () {\n  return SegmentNode\n};\n\n// import Iterator from '../../../../java/util/Iterator'\nvar SegmentNodeList = function SegmentNodeList () {\n  this._nodeMap = new TreeMap();\n  this._edge = null;\n  var edge = arguments[0];\n  this._edge = edge;\n};\nSegmentNodeList.prototype.getSplitCoordinates = function getSplitCoordinates () {\n    var this$1 = this;\n\n  var coordList = new CoordinateList();\n  this.addEndpoints();\n  var it = this.iterator();\n  var eiPrev = it.next();\n  while (it.hasNext()) {\n    var ei = it.next();\n    this$1.addEdgeCoordinates(eiPrev, ei, coordList);\n    eiPrev = ei;\n  }\n  return coordList.toCoordinateArray()\n};\nSegmentNodeList.prototype.addCollapsedNodes = function addCollapsedNodes () {\n    var this$1 = this;\n\n  var collapsedVertexIndexes = new ArrayList();\n  this.findCollapsesFromInsertedNodes(collapsedVertexIndexes);\n  this.findCollapsesFromExistingVertices(collapsedVertexIndexes);\n  for (var it = collapsedVertexIndexes.iterator(); it.hasNext();) {\n    var vertexIndex = it.next().intValue();\n    this$1.add(this$1._edge.getCoordinate(vertexIndex), vertexIndex);\n  }\n};\nSegmentNodeList.prototype.print = function print (out) {\n  out.println('Intersections:');\n  for (var it = this.iterator(); it.hasNext();) {\n    var ei = it.next();\n    ei.print(out);\n  }\n};\nSegmentNodeList.prototype.findCollapsesFromExistingVertices = function findCollapsesFromExistingVertices (collapsedVertexIndexes) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._edge.size() - 2; i++) {\n    var p0 = this$1._edge.getCoordinate(i);\n    // const p1 = this._edge.getCoordinate(i + 1)\n    var p2 = this$1._edge.getCoordinate(i + 2);\n    if (p0.equals2D(p2)) {\n      collapsedVertexIndexes.add(new Integer(i + 1));\n    }\n  }\n};\nSegmentNodeList.prototype.addEdgeCoordinates = function addEdgeCoordinates (ei0, ei1, coordList) {\n    var this$1 = this;\n\n  // let npts = ei1.segmentIndex - ei0.segmentIndex + 2\n  var lastSegStartPt = this._edge.getCoordinate(ei1.segmentIndex);\n  var useIntPt1 = ei1.isInterior() || !ei1.coord.equals2D(lastSegStartPt);\n  // if (!useIntPt1) {\n  // npts--\n  // }\n  // const ipt = 0\n  coordList.add(new Coordinate(ei0.coord), false);\n  for (var i = ei0.segmentIndex + 1; i <= ei1.segmentIndex; i++) {\n    coordList.add(this$1._edge.getCoordinate(i));\n  }\n  if (useIntPt1) {\n    coordList.add(new Coordinate(ei1.coord));\n  }\n};\nSegmentNodeList.prototype.iterator = function iterator () {\n  return this._nodeMap.values().iterator()\n};\nSegmentNodeList.prototype.addSplitEdges = function addSplitEdges (edgeList) {\n    var this$1 = this;\n\n  this.addEndpoints();\n  this.addCollapsedNodes();\n  var it = this.iterator();\n  var eiPrev = it.next();\n  while (it.hasNext()) {\n    var ei = it.next();\n    var newEdge = this$1.createSplitEdge(eiPrev, ei);\n    edgeList.add(newEdge);\n    eiPrev = ei;\n  }\n};\nSegmentNodeList.prototype.findCollapseIndex = function findCollapseIndex (ei0, ei1, collapsedVertexIndex) {\n  if (!ei0.coord.equals2D(ei1.coord)) { return false }\n  var numVerticesBetween = ei1.segmentIndex - ei0.segmentIndex;\n  if (!ei1.isInterior()) {\n    numVerticesBetween--;\n  }\n  if (numVerticesBetween === 1) {\n    collapsedVertexIndex[0] = ei0.segmentIndex + 1;\n    return true\n  }\n  return false\n};\nSegmentNodeList.prototype.findCollapsesFromInsertedNodes = function findCollapsesFromInsertedNodes (collapsedVertexIndexes) {\n    var this$1 = this;\n\n  var collapsedVertexIndex = new Array(1).fill(null);\n  var it = this.iterator();\n  var eiPrev = it.next();\n  while (it.hasNext()) {\n    var ei = it.next();\n    var isCollapsed = this$1.findCollapseIndex(eiPrev, ei, collapsedVertexIndex);\n    if (isCollapsed) { collapsedVertexIndexes.add(new Integer(collapsedVertexIndex[0])); }\n    eiPrev = ei;\n  }\n};\nSegmentNodeList.prototype.getEdge = function getEdge () {\n  return this._edge\n};\nSegmentNodeList.prototype.addEndpoints = function addEndpoints () {\n  var maxSegIndex = this._edge.size() - 1;\n  this.add(this._edge.getCoordinate(0), 0);\n  this.add(this._edge.getCoordinate(maxSegIndex), maxSegIndex);\n};\nSegmentNodeList.prototype.createSplitEdge = function createSplitEdge (ei0, ei1) {\n    var this$1 = this;\n\n  var npts = ei1.segmentIndex - ei0.segmentIndex + 2;\n  var lastSegStartPt = this._edge.getCoordinate(ei1.segmentIndex);\n  var useIntPt1 = ei1.isInterior() || !ei1.coord.equals2D(lastSegStartPt);\n  if (!useIntPt1) {\n    npts--;\n  }\n  var pts = new Array(npts).fill(null);\n  var ipt = 0;\n  pts[ipt++] = new Coordinate(ei0.coord);\n  for (var i = ei0.segmentIndex + 1; i <= ei1.segmentIndex; i++) {\n    pts[ipt++] = this$1._edge.getCoordinate(i);\n  }\n  if (useIntPt1) { pts[ipt] = new Coordinate(ei1.coord); }\n  return new NodedSegmentString(pts, this._edge.getData())\n};\nSegmentNodeList.prototype.add = function add (intPt, segmentIndex) {\n  var eiNew = new SegmentNode(this._edge, intPt, segmentIndex, this._edge.getSegmentOctant(segmentIndex));\n  var ei = this._nodeMap.get(eiNew);\n  if (ei !== null) {\n    Assert.isTrue(ei.coord.equals2D(intPt), 'Found equal nodes with different coordinates');\n    return ei\n  }\n  this._nodeMap.put(eiNew, eiNew);\n  return eiNew\n};\nSegmentNodeList.prototype.checkSplitEdgesCorrectness = function checkSplitEdgesCorrectness (splitEdges) {\n  var edgePts = this._edge.getCoordinates();\n  var split0 = splitEdges.get(0);\n  var pt0 = split0.getCoordinate(0);\n  if (!pt0.equals2D(edgePts[0])) { throw new RuntimeException('bad split edge start point at ' + pt0) }\n  var splitn = splitEdges.get(splitEdges.size() - 1);\n  var splitnPts = splitn.getCoordinates();\n  var ptn = splitnPts[splitnPts.length - 1];\n  if (!ptn.equals2D(edgePts[edgePts.length - 1])) { throw new RuntimeException('bad split edge end point at ' + ptn) }\n};\nSegmentNodeList.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSegmentNodeList.prototype.getClass = function getClass () {\n  return SegmentNodeList\n};\n\n\n\n// class NodeVertexIterator {\n//   constructor () {\n//     this._nodeList = null\n//     this._edge = null\n//     this._nodeIt = null\n//     this._currNode = null\n//     this._nextNode = null\n//     this._currSegIndex = 0\n//     let nodeList = arguments[0]\n//     this._nodeList = nodeList\n//     this._edge = nodeList.getEdge()\n//     this._nodeIt = nodeList.iterator()\n//     this.readNextNode()\n//   }\n//   next () {\n//     if (this._currNode === null) {\n//       this._currNode = this._nextNode\n//       this._currSegIndex = this._currNode.segmentIndex\n//       this.readNextNode()\n//       return this._currNode\n//     }\n//     if (this._nextNode === null) return null\n//     if (this._nextNode.segmentIndex === this._currNode.segmentIndex) {\n//       this._currNode = this._nextNode\n//       this._currSegIndex = this._currNode.segmentIndex\n//       this.readNextNode()\n//       return this._currNode\n//     }\n//     if (this._nextNode.segmentIndex > this._currNode.segmentIndex) {}\n//     return null\n//   }\n//   remove () {\n//     // throw new UnsupportedOperationException(this.getClass().getName())\n//   }\n//   hasNext () {\n//     if (this._nextNode === null) return false\n//     return true\n//   }\n//   readNextNode () {\n//     if (this._nodeIt.hasNext()) this._nextNode = this._nodeIt.next(); else this._nextNode = null\n//   }\n//   interfaces_ () {\n//     return [Iterator]\n//   }\n//   getClass () {\n//     return NodeVertexIterator\n//   }\n// }\n\nvar Octant = function Octant () {};\n\nOctant.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOctant.prototype.getClass = function getClass () {\n  return Octant\n};\nOctant.octant = function octant () {\n  if (typeof arguments[0] === 'number' && typeof arguments[1] === 'number') {\n    var dx = arguments[0];\n    var dy = arguments[1];\n    if (dx === 0.0 && dy === 0.0) { throw new IllegalArgumentException('Cannot compute the octant for point ( ' + dx + ', ' + dy + ' )') }\n    var adx = Math.abs(dx);\n    var ady = Math.abs(dy);\n    if (dx >= 0) {\n      if (dy >= 0) {\n        if (adx >= ady) { return 0; } else { return 1 }\n      } else {\n        if (adx >= ady) { return 7; } else { return 6 }\n      }\n    } else {\n      if (dy >= 0) {\n        if (adx >= ady) { return 3; } else { return 2 }\n      } else {\n        if (adx >= ady) { return 4; } else { return 5 }\n      }\n    }\n  } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    var dx$1 = p1.x - p0.x;\n    var dy$1 = p1.y - p0.y;\n    if (dx$1 === 0.0 && dy$1 === 0.0) { throw new IllegalArgumentException('Cannot compute the octant for two identical points ' + p0) }\n    return Octant.octant(dx$1, dy$1)\n  }\n};\n\nvar SegmentString = function SegmentString () {};\n\nSegmentString.prototype.getCoordinates = function getCoordinates () {};\nSegmentString.prototype.size = function size () {};\nSegmentString.prototype.getCoordinate = function getCoordinate (i) {};\nSegmentString.prototype.isClosed = function isClosed () {};\nSegmentString.prototype.setData = function setData (data) {};\nSegmentString.prototype.getData = function getData () {};\nSegmentString.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSegmentString.prototype.getClass = function getClass () {\n  return SegmentString\n};\n\nvar NodableSegmentString = function NodableSegmentString () {};\n\nNodableSegmentString.prototype.addIntersection = function addIntersection (intPt, segmentIndex) {};\nNodableSegmentString.prototype.interfaces_ = function interfaces_ () {\n  return [SegmentString]\n};\nNodableSegmentString.prototype.getClass = function getClass () {\n  return NodableSegmentString\n};\n\nvar NodedSegmentString = function NodedSegmentString () {\n  this._nodeList = new SegmentNodeList(this);\n  this._pts = null;\n  this._data = null;\n  var pts = arguments[0];\n  var data = arguments[1];\n  this._pts = pts;\n  this._data = data;\n};\nNodedSegmentString.prototype.getCoordinates = function getCoordinates () {\n  return this._pts\n};\nNodedSegmentString.prototype.size = function size () {\n  return this._pts.length\n};\nNodedSegmentString.prototype.getCoordinate = function getCoordinate (i) {\n  return this._pts[i]\n};\nNodedSegmentString.prototype.isClosed = function isClosed () {\n  return this._pts[0].equals(this._pts[this._pts.length - 1])\n};\nNodedSegmentString.prototype.getSegmentOctant = function getSegmentOctant (index) {\n  if (index === this._pts.length - 1) { return -1 }\n  return this.safeOctant(this.getCoordinate(index), this.getCoordinate(index + 1))\n};\nNodedSegmentString.prototype.setData = function setData (data) {\n  this._data = data;\n};\nNodedSegmentString.prototype.safeOctant = function safeOctant (p0, p1) {\n  if (p0.equals2D(p1)) { return 0 }\n  return Octant.octant(p0, p1)\n};\nNodedSegmentString.prototype.getData = function getData () {\n  return this._data\n};\nNodedSegmentString.prototype.addIntersection = function addIntersection () {\n  if (arguments.length === 2) {\n    var intPt$1 = arguments[0];\n    var segmentIndex = arguments[1];\n    this.addIntersectionNode(intPt$1, segmentIndex);\n  } else if (arguments.length === 4) {\n    var li = arguments[0];\n    var segmentIndex$1 = arguments[1];\n    // const geomIndex = arguments[2]\n    var intIndex = arguments[3];\n    var intPt = new Coordinate(li.getIntersection(intIndex));\n    this.addIntersection(intPt, segmentIndex$1);\n  }\n};\nNodedSegmentString.prototype.toString = function toString () {\n  return WKTWriter.toLineString(new CoordinateArraySequence(this._pts))\n};\nNodedSegmentString.prototype.getNodeList = function getNodeList () {\n  return this._nodeList\n};\nNodedSegmentString.prototype.addIntersectionNode = function addIntersectionNode (intPt, segmentIndex) {\n  var normalizedSegmentIndex = segmentIndex;\n  var nextSegIndex = normalizedSegmentIndex + 1;\n  if (nextSegIndex < this._pts.length) {\n    var nextPt = this._pts[nextSegIndex];\n    if (intPt.equals2D(nextPt)) {\n      normalizedSegmentIndex = nextSegIndex;\n    }\n  }\n  var ei = this._nodeList.add(intPt, normalizedSegmentIndex);\n  return ei\n};\nNodedSegmentString.prototype.addIntersections = function addIntersections (li, segmentIndex, geomIndex) {\n    var this$1 = this;\n\n  for (var i = 0; i < li.getIntersectionNum(); i++) {\n    this$1.addIntersection(li, segmentIndex, geomIndex, i);\n  }\n};\nNodedSegmentString.prototype.interfaces_ = function interfaces_ () {\n  return [NodableSegmentString]\n};\nNodedSegmentString.prototype.getClass = function getClass () {\n  return NodedSegmentString\n};\nNodedSegmentString.getNodedSubstrings = function getNodedSubstrings () {\n  if (arguments.length === 1) {\n    var segStrings = arguments[0];\n    var resultEdgelist = new ArrayList();\n    NodedSegmentString.getNodedSubstrings(segStrings, resultEdgelist);\n    return resultEdgelist\n  } else if (arguments.length === 2) {\n    var segStrings$1 = arguments[0];\n    var resultEdgelist$1 = arguments[1];\n    for (var i = segStrings$1.iterator(); i.hasNext();) {\n      var ss = i.next();\n      ss.getNodeList().addSplitEdges(resultEdgelist$1);\n    }\n  }\n};\n\nvar LineSegment = function LineSegment () {\n  this.p0 = null;\n  this.p1 = null;\n  if (arguments.length === 0) {\n    this.p0 = new Coordinate();\n    this.p1 = new Coordinate();\n  } else if (arguments.length === 1) {\n    var ls = arguments[0];\n    this.p0 = new Coordinate(ls.p0);\n    this.p1 = new Coordinate(ls.p1);\n  } else if (arguments.length === 2) {\n    this.p0 = arguments[0];\n    this.p1 = arguments[1];\n  } else if (arguments.length === 4) {\n    var x0 = arguments[0];\n    var y0 = arguments[1];\n    var x1 = arguments[2];\n    var y1 = arguments[3];\n    this.p0 = new Coordinate(x0, y0);\n    this.p1 = new Coordinate(x1, y1);\n  }\n};\n\nvar staticAccessors$24 = { serialVersionUID: { configurable: true } };\nLineSegment.prototype.minX = function minX () {\n  return Math.min(this.p0.x, this.p1.x)\n};\nLineSegment.prototype.orientationIndex = function orientationIndex () {\n  if (arguments[0] instanceof LineSegment) {\n    var seg = arguments[0];\n    var orient0 = CGAlgorithms.orientationIndex(this.p0, this.p1, seg.p0);\n    var orient1 = CGAlgorithms.orientationIndex(this.p0, this.p1, seg.p1);\n    if (orient0 >= 0 && orient1 >= 0) { return Math.max(orient0, orient1) }\n    if (orient0 <= 0 && orient1 <= 0) { return Math.max(orient0, orient1) }\n    return 0\n  } else if (arguments[0] instanceof Coordinate) {\n    var p = arguments[0];\n    return CGAlgorithms.orientationIndex(this.p0, this.p1, p)\n  }\n};\nLineSegment.prototype.toGeometry = function toGeometry (geomFactory) {\n  return geomFactory.createLineString([this.p0, this.p1])\n};\nLineSegment.prototype.isVertical = function isVertical () {\n  return this.p0.x === this.p1.x\n};\nLineSegment.prototype.equals = function equals (o) {\n  if (!(o instanceof LineSegment)) {\n    return false\n  }\n  var other = o;\n  return this.p0.equals(other.p0) && this.p1.equals(other.p1)\n};\nLineSegment.prototype.intersection = function intersection (line) {\n  var li = new RobustLineIntersector();\n  li.computeIntersection(this.p0, this.p1, line.p0, line.p1);\n  if (li.hasIntersection()) { return li.getIntersection(0) }\n  return null\n};\nLineSegment.prototype.project = function project () {\n  if (arguments[0] instanceof Coordinate) {\n    var p = arguments[0];\n    if (p.equals(this.p0) || p.equals(this.p1)) { return new Coordinate(p) }\n    var r = this.projectionFactor(p);\n    var coord = new Coordinate();\n    coord.x = this.p0.x + r * (this.p1.x - this.p0.x);\n    coord.y = this.p0.y + r * (this.p1.y - this.p0.y);\n    return coord\n  } else if (arguments[0] instanceof LineSegment) {\n    var seg = arguments[0];\n    var pf0 = this.projectionFactor(seg.p0);\n    var pf1 = this.projectionFactor(seg.p1);\n    if (pf0 >= 1.0 && pf1 >= 1.0) { return null }\n    if (pf0 <= 0.0 && pf1 <= 0.0) { return null }\n    var newp0 = this.project(seg.p0);\n    if (pf0 < 0.0) { newp0 = this.p0; }\n    if (pf0 > 1.0) { newp0 = this.p1; }\n    var newp1 = this.project(seg.p1);\n    if (pf1 < 0.0) { newp1 = this.p0; }\n    if (pf1 > 1.0) { newp1 = this.p1; }\n    return new LineSegment(newp0, newp1)\n  }\n};\nLineSegment.prototype.normalize = function normalize () {\n  if (this.p1.compareTo(this.p0) < 0) { this.reverse(); }\n};\nLineSegment.prototype.angle = function angle () {\n  return Math.atan2(this.p1.y - this.p0.y, this.p1.x - this.p0.x)\n};\nLineSegment.prototype.getCoordinate = function getCoordinate (i) {\n  if (i === 0) { return this.p0 }\n  return this.p1\n};\nLineSegment.prototype.distancePerpendicular = function distancePerpendicular (p) {\n  return CGAlgorithms.distancePointLinePerpendicular(p, this.p0, this.p1)\n};\nLineSegment.prototype.minY = function minY () {\n  return Math.min(this.p0.y, this.p1.y)\n};\nLineSegment.prototype.midPoint = function midPoint () {\n  return LineSegment.midPoint(this.p0, this.p1)\n};\nLineSegment.prototype.projectionFactor = function projectionFactor (p) {\n  if (p.equals(this.p0)) { return 0.0 }\n  if (p.equals(this.p1)) { return 1.0 }\n  var dx = this.p1.x - this.p0.x;\n  var dy = this.p1.y - this.p0.y;\n  var len = dx * dx + dy * dy;\n  if (len <= 0.0) { return Double.NaN }\n  var r = ((p.x - this.p0.x) * dx + (p.y - this.p0.y) * dy) / len;\n  return r\n};\nLineSegment.prototype.closestPoints = function closestPoints (line) {\n  var intPt = this.intersection(line);\n  if (intPt !== null) {\n    return [intPt, intPt]\n  }\n  var closestPt = new Array(2).fill(null);\n  var minDistance = Double.MAX_VALUE;\n  var dist = null;\n  var close00 = this.closestPoint(line.p0);\n  minDistance = close00.distance(line.p0);\n  closestPt[0] = close00;\n  closestPt[1] = line.p0;\n  var close01 = this.closestPoint(line.p1);\n  dist = close01.distance(line.p1);\n  if (dist < minDistance) {\n    minDistance = dist;\n    closestPt[0] = close01;\n    closestPt[1] = line.p1;\n  }\n  var close10 = line.closestPoint(this.p0);\n  dist = close10.distance(this.p0);\n  if (dist < minDistance) {\n    minDistance = dist;\n    closestPt[0] = this.p0;\n    closestPt[1] = close10;\n  }\n  var close11 = line.closestPoint(this.p1);\n  dist = close11.distance(this.p1);\n  if (dist < minDistance) {\n    minDistance = dist;\n    closestPt[0] = this.p1;\n    closestPt[1] = close11;\n  }\n  return closestPt\n};\nLineSegment.prototype.closestPoint = function closestPoint (p) {\n  var factor = this.projectionFactor(p);\n  if (factor > 0 && factor < 1) {\n    return this.project(p)\n  }\n  var dist0 = this.p0.distance(p);\n  var dist1 = this.p1.distance(p);\n  if (dist0 < dist1) { return this.p0 }\n  return this.p1\n};\nLineSegment.prototype.maxX = function maxX () {\n  return Math.max(this.p0.x, this.p1.x)\n};\nLineSegment.prototype.getLength = function getLength () {\n  return this.p0.distance(this.p1)\n};\nLineSegment.prototype.compareTo = function compareTo (o) {\n  var other = o;\n  var comp0 = this.p0.compareTo(other.p0);\n  if (comp0 !== 0) { return comp0 }\n  return this.p1.compareTo(other.p1)\n};\nLineSegment.prototype.reverse = function reverse () {\n  var temp = this.p0;\n  this.p0 = this.p1;\n  this.p1 = temp;\n};\nLineSegment.prototype.equalsTopo = function equalsTopo (other) {\n  return this.p0.equals(other.p0) &&\n        (this.p1.equals(other.p1) || this.p0.equals(other.p1)) &&\n         this.p1.equals(other.p0)\n};\nLineSegment.prototype.lineIntersection = function lineIntersection (line) {\n  try {\n    var intPt = HCoordinate.intersection(this.p0, this.p1, line.p0, line.p1);\n    return intPt\n  } catch (ex) {\n    if (ex instanceof NotRepresentableException) {} else { throw ex }\n  } finally {}\n  return null\n};\nLineSegment.prototype.maxY = function maxY () {\n  return Math.max(this.p0.y, this.p1.y)\n};\nLineSegment.prototype.pointAlongOffset = function pointAlongOffset (segmentLengthFraction, offsetDistance) {\n  var segx = this.p0.x + segmentLengthFraction * (this.p1.x - this.p0.x);\n  var segy = this.p0.y + segmentLengthFraction * (this.p1.y - this.p0.y);\n  var dx = this.p1.x - this.p0.x;\n  var dy = this.p1.y - this.p0.y;\n  var len = Math.sqrt(dx * dx + dy * dy);\n  var ux = 0.0;\n  var uy = 0.0;\n  if (offsetDistance !== 0.0) {\n    if (len <= 0.0) { throw new Error('Cannot compute offset from zero-length line segment') }\n    ux = offsetDistance * dx / len;\n    uy = offsetDistance * dy / len;\n  }\n  var offsetx = segx - uy;\n  var offsety = segy + ux;\n  var coord = new Coordinate(offsetx, offsety);\n  return coord\n};\nLineSegment.prototype.setCoordinates = function setCoordinates () {\n  if (arguments.length === 1) {\n    var ls = arguments[0];\n    this.setCoordinates(ls.p0, ls.p1);\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    this.p0.x = p0.x;\n    this.p0.y = p0.y;\n    this.p1.x = p1.x;\n    this.p1.y = p1.y;\n  }\n};\nLineSegment.prototype.segmentFraction = function segmentFraction (inputPt) {\n  var segFrac = this.projectionFactor(inputPt);\n  if (segFrac < 0.0) { segFrac = 0.0; } else if (segFrac > 1.0 || Double.isNaN(segFrac)) { segFrac = 1.0; }\n  return segFrac\n};\nLineSegment.prototype.toString = function toString () {\n  return 'LINESTRING( ' + this.p0.x + ' ' + this.p0.y + ', ' + this.p1.x + ' ' + this.p1.y + ')'\n};\nLineSegment.prototype.isHorizontal = function isHorizontal () {\n  return this.p0.y === this.p1.y\n};\nLineSegment.prototype.distance = function distance () {\n  if (arguments[0] instanceof LineSegment) {\n    var ls = arguments[0];\n    return CGAlgorithms.distanceLineLine(this.p0, this.p1, ls.p0, ls.p1)\n  } else if (arguments[0] instanceof Coordinate) {\n    var p = arguments[0];\n    return CGAlgorithms.distancePointLine(p, this.p0, this.p1)\n  }\n};\nLineSegment.prototype.pointAlong = function pointAlong (segmentLengthFraction) {\n  var coord = new Coordinate();\n  coord.x = this.p0.x + segmentLengthFraction * (this.p1.x - this.p0.x);\n  coord.y = this.p0.y + segmentLengthFraction * (this.p1.y - this.p0.y);\n  return coord\n};\nLineSegment.prototype.hashCode = function hashCode () {\n  var bits0 = Double.doubleToLongBits(this.p0.x);\n  bits0 ^= Double.doubleToLongBits(this.p0.y) * 31;\n  var hash0 = Math.trunc(bits0) ^ Math.trunc(bits0 >> 32);\n  var bits1 = Double.doubleToLongBits(this.p1.x);\n  bits1 ^= Double.doubleToLongBits(this.p1.y) * 31;\n  var hash1 = Math.trunc(bits1) ^ Math.trunc(bits1 >> 32);\n  return hash0 ^ hash1\n};\nLineSegment.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable, Serializable]\n};\nLineSegment.prototype.getClass = function getClass () {\n  return LineSegment\n};\nLineSegment.midPoint = function midPoint (p0, p1) {\n  return new Coordinate((p0.x + p1.x) / 2, (p0.y + p1.y) / 2)\n};\nstaticAccessors$24.serialVersionUID.get = function () { return 3252005833466256227 };\n\nObject.defineProperties( LineSegment, staticAccessors$24 );\n\nvar MonotoneChainOverlapAction = function MonotoneChainOverlapAction () {\n  this.tempEnv1 = new Envelope();\n  this.tempEnv2 = new Envelope();\n  this._overlapSeg1 = new LineSegment();\n  this._overlapSeg2 = new LineSegment();\n};\nMonotoneChainOverlapAction.prototype.overlap = function overlap () {\n  if (arguments.length === 2) {\n    // const seg1 = arguments[0]\n    // const seg2 = arguments[1]\n  } else if (arguments.length === 4) {\n    var mc1 = arguments[0];\n    var start1 = arguments[1];\n    var mc2 = arguments[2];\n    var start2 = arguments[3];\n    mc1.getLineSegment(start1, this._overlapSeg1);\n    mc2.getLineSegment(start2, this._overlapSeg2);\n    this.overlap(this._overlapSeg1, this._overlapSeg2);\n  }\n};\nMonotoneChainOverlapAction.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChainOverlapAction.prototype.getClass = function getClass () {\n  return MonotoneChainOverlapAction\n};\n\nvar MonotoneChain = function MonotoneChain () {\n  this._pts = null;\n  this._start = null;\n  this._end = null;\n  this._env = null;\n  this._context = null;\n  this._id = null;\n  var pts = arguments[0];\n  var start = arguments[1];\n  var end = arguments[2];\n  var context = arguments[3];\n  this._pts = pts;\n  this._start = start;\n  this._end = end;\n  this._context = context;\n};\nMonotoneChain.prototype.getLineSegment = function getLineSegment (index, ls) {\n  ls.p0 = this._pts[index];\n  ls.p1 = this._pts[index + 1];\n};\nMonotoneChain.prototype.computeSelect = function computeSelect (searchEnv, start0, end0, mcs) {\n  var p0 = this._pts[start0];\n  var p1 = this._pts[end0];\n  mcs.tempEnv1.init(p0, p1);\n  if (end0 - start0 === 1) {\n    mcs.select(this, start0);\n    return null\n  }\n  if (!searchEnv.intersects(mcs.tempEnv1)) { return null }\n  var mid = Math.trunc((start0 + end0) / 2);\n  if (start0 < mid) {\n    this.computeSelect(searchEnv, start0, mid, mcs);\n  }\n  if (mid < end0) {\n    this.computeSelect(searchEnv, mid, end0, mcs);\n  }\n};\nMonotoneChain.prototype.getCoordinates = function getCoordinates () {\n    var this$1 = this;\n\n  var coord = new Array(this._end - this._start + 1).fill(null);\n  var index = 0;\n  for (var i = this._start; i <= this._end; i++) {\n    coord[index++] = this$1._pts[i];\n  }\n  return coord\n};\nMonotoneChain.prototype.computeOverlaps = function computeOverlaps (mc, mco) {\n  this.computeOverlapsInternal(this._start, this._end, mc, mc._start, mc._end, mco);\n};\nMonotoneChain.prototype.setId = function setId (id) {\n  this._id = id;\n};\nMonotoneChain.prototype.select = function select (searchEnv, mcs) {\n  this.computeSelect(searchEnv, this._start, this._end, mcs);\n};\nMonotoneChain.prototype.getEnvelope = function getEnvelope () {\n  if (this._env === null) {\n    var p0 = this._pts[this._start];\n    var p1 = this._pts[this._end];\n    this._env = new Envelope(p0, p1);\n  }\n  return this._env\n};\nMonotoneChain.prototype.getEndIndex = function getEndIndex () {\n  return this._end\n};\nMonotoneChain.prototype.getStartIndex = function getStartIndex () {\n  return this._start\n};\nMonotoneChain.prototype.getContext = function getContext () {\n  return this._context\n};\nMonotoneChain.prototype.getId = function getId () {\n  return this._id\n};\nMonotoneChain.prototype.computeOverlapsInternal = function computeOverlapsInternal (start0, end0, mc, start1, end1, mco) {\n  var p00 = this._pts[start0];\n  var p01 = this._pts[end0];\n  var p10 = mc._pts[start1];\n  var p11 = mc._pts[end1];\n  if (end0 - start0 === 1 && end1 - start1 === 1) {\n    mco.overlap(this, start0, mc, start1);\n    return null\n  }\n  mco.tempEnv1.init(p00, p01);\n  mco.tempEnv2.init(p10, p11);\n  if (!mco.tempEnv1.intersects(mco.tempEnv2)) { return null }\n  var mid0 = Math.trunc((start0 + end0) / 2);\n  var mid1 = Math.trunc((start1 + end1) / 2);\n  if (start0 < mid0) {\n    if (start1 < mid1) { this.computeOverlapsInternal(start0, mid0, mc, start1, mid1, mco); }\n    if (mid1 < end1) { this.computeOverlapsInternal(start0, mid0, mc, mid1, end1, mco); }\n  }\n  if (mid0 < end0) {\n    if (start1 < mid1) { this.computeOverlapsInternal(mid0, end0, mc, start1, mid1, mco); }\n    if (mid1 < end1) { this.computeOverlapsInternal(mid0, end0, mc, mid1, end1, mco); }\n  }\n};\nMonotoneChain.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChain.prototype.getClass = function getClass () {\n  return MonotoneChain\n};\n\nvar MonotoneChainBuilder = function MonotoneChainBuilder () {};\n\nMonotoneChainBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChainBuilder.prototype.getClass = function getClass () {\n  return MonotoneChainBuilder\n};\nMonotoneChainBuilder.getChainStartIndices = function getChainStartIndices (pts) {\n  var start = 0;\n  var startIndexList = new ArrayList();\n  startIndexList.add(new Integer(start));\n  do {\n    var last = MonotoneChainBuilder.findChainEnd(pts, start);\n    startIndexList.add(new Integer(last));\n    start = last;\n  } while (start < pts.length - 1)\n  var startIndex = MonotoneChainBuilder.toIntArray(startIndexList);\n  return startIndex\n};\nMonotoneChainBuilder.findChainEnd = function findChainEnd (pts, start) {\n  var safeStart = start;\n  while (safeStart < pts.length - 1 && pts[safeStart].equals2D(pts[safeStart + 1])) {\n    safeStart++;\n  }\n  if (safeStart >= pts.length - 1) {\n    return pts.length - 1\n  }\n  var chainQuad = Quadrant.quadrant(pts[safeStart], pts[safeStart + 1]);\n  var last = start + 1;\n  while (last < pts.length) {\n    if (!pts[last - 1].equals2D(pts[last])) {\n      var quad = Quadrant.quadrant(pts[last - 1], pts[last]);\n      if (quad !== chainQuad) { break }\n    }\n    last++;\n  }\n  return last - 1\n};\nMonotoneChainBuilder.getChains = function getChains () {\n  if (arguments.length === 1) {\n    var pts = arguments[0];\n    return MonotoneChainBuilder.getChains(pts, null)\n  } else if (arguments.length === 2) {\n    var pts$1 = arguments[0];\n    var context = arguments[1];\n    var mcList = new ArrayList();\n    var startIndex = MonotoneChainBuilder.getChainStartIndices(pts$1);\n    for (var i = 0; i < startIndex.length - 1; i++) {\n      var mc = new MonotoneChain(pts$1, startIndex[i], startIndex[i + 1], context);\n      mcList.add(mc);\n    }\n    return mcList\n  }\n};\nMonotoneChainBuilder.toIntArray = function toIntArray (list) {\n  var array = new Array(list.size()).fill(null);\n  for (var i = 0; i < array.length; i++) {\n    array[i] = list.get(i).intValue();\n  }\n  return array\n};\n\nvar Noder = function Noder () {};\n\nNoder.prototype.computeNodes = function computeNodes (segStrings) {};\nNoder.prototype.getNodedSubstrings = function getNodedSubstrings () {};\nNoder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nNoder.prototype.getClass = function getClass () {\n  return Noder\n};\n\nvar SinglePassNoder = function SinglePassNoder () {\n  this._segInt = null;\n  if (arguments.length === 0) {} else if (arguments.length === 1) {\n    var segInt = arguments[0];\n    this.setSegmentIntersector(segInt);\n  }\n};\nSinglePassNoder.prototype.setSegmentIntersector = function setSegmentIntersector (segInt) {\n  this._segInt = segInt;\n};\nSinglePassNoder.prototype.interfaces_ = function interfaces_ () {\n  return [Noder]\n};\nSinglePassNoder.prototype.getClass = function getClass () {\n  return SinglePassNoder\n};\n\nvar MCIndexNoder = (function (SinglePassNoder$$1) {\n  function MCIndexNoder (si) {\n    if (si) { SinglePassNoder$$1.call(this, si); }\n    else { SinglePassNoder$$1.call(this); }\n    this._monoChains = new ArrayList();\n    this._index = new STRtree();\n    this._idCounter = 0;\n    this._nodedSegStrings = null;\n    this._nOverlaps = 0;\n  }\n\n  if ( SinglePassNoder$$1 ) MCIndexNoder.__proto__ = SinglePassNoder$$1;\n  MCIndexNoder.prototype = Object.create( SinglePassNoder$$1 && SinglePassNoder$$1.prototype );\n  MCIndexNoder.prototype.constructor = MCIndexNoder;\n\n  var staticAccessors = { SegmentOverlapAction: { configurable: true } };\n  MCIndexNoder.prototype.getMonotoneChains = function getMonotoneChains () {\n    return this._monoChains\n  };\n  MCIndexNoder.prototype.getNodedSubstrings = function getNodedSubstrings () {\n    return NodedSegmentString.getNodedSubstrings(this._nodedSegStrings)\n  };\n  MCIndexNoder.prototype.getIndex = function getIndex () {\n    return this._index\n  };\n  MCIndexNoder.prototype.add = function add (segStr) {\n    var this$1 = this;\n\n    var segChains = MonotoneChainBuilder.getChains(segStr.getCoordinates(), segStr);\n    for (var i = segChains.iterator(); i.hasNext();) {\n      var mc = i.next();\n      mc.setId(this$1._idCounter++);\n      this$1._index.insert(mc.getEnvelope(), mc);\n      this$1._monoChains.add(mc);\n    }\n  };\n  MCIndexNoder.prototype.computeNodes = function computeNodes (inputSegStrings) {\n    var this$1 = this;\n\n    this._nodedSegStrings = inputSegStrings;\n    for (var i = inputSegStrings.iterator(); i.hasNext();) {\n      this$1.add(i.next());\n    }\n    this.intersectChains();\n  };\n  MCIndexNoder.prototype.intersectChains = function intersectChains () {\n    var this$1 = this;\n\n    var overlapAction = new SegmentOverlapAction(this._segInt);\n    for (var i = this._monoChains.iterator(); i.hasNext();) {\n      var queryChain = i.next();\n      var overlapChains = this$1._index.query(queryChain.getEnvelope());\n      for (var j = overlapChains.iterator(); j.hasNext();) {\n        var testChain = j.next();\n        if (testChain.getId() > queryChain.getId()) {\n          queryChain.computeOverlaps(testChain, overlapAction);\n          this$1._nOverlaps++;\n        }\n        if (this$1._segInt.isDone()) { return null }\n      }\n    }\n  };\n  MCIndexNoder.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  MCIndexNoder.prototype.getClass = function getClass () {\n    return MCIndexNoder\n  };\n  staticAccessors.SegmentOverlapAction.get = function () { return SegmentOverlapAction };\n\n  Object.defineProperties( MCIndexNoder, staticAccessors );\n\n  return MCIndexNoder;\n}(SinglePassNoder));\n\nvar SegmentOverlapAction = (function (MonotoneChainOverlapAction$$1) {\n  function SegmentOverlapAction () {\n    MonotoneChainOverlapAction$$1.call(this);\n    this._si = null;\n    var si = arguments[0];\n    this._si = si;\n  }\n\n  if ( MonotoneChainOverlapAction$$1 ) SegmentOverlapAction.__proto__ = MonotoneChainOverlapAction$$1;\n  SegmentOverlapAction.prototype = Object.create( MonotoneChainOverlapAction$$1 && MonotoneChainOverlapAction$$1.prototype );\n  SegmentOverlapAction.prototype.constructor = SegmentOverlapAction;\n  SegmentOverlapAction.prototype.overlap = function overlap () {\n    if (arguments.length === 4) {\n      var mc1 = arguments[0];\n      var start1 = arguments[1];\n      var mc2 = arguments[2];\n      var start2 = arguments[3];\n      var ss1 = mc1.getContext();\n      var ss2 = mc2.getContext();\n      this._si.processIntersections(ss1, start1, ss2, start2);\n    } else { return MonotoneChainOverlapAction$$1.prototype.overlap.apply(this, arguments) }\n  };\n  SegmentOverlapAction.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  SegmentOverlapAction.prototype.getClass = function getClass () {\n    return SegmentOverlapAction\n  };\n\n  return SegmentOverlapAction;\n}(MonotoneChainOverlapAction));\n\nvar BufferParameters = function BufferParameters () {\n  this._quadrantSegments = BufferParameters.DEFAULT_QUADRANT_SEGMENTS;\n  this._endCapStyle = BufferParameters.CAP_ROUND;\n  this._joinStyle = BufferParameters.JOIN_ROUND;\n  this._mitreLimit = BufferParameters.DEFAULT_MITRE_LIMIT;\n  this._isSingleSided = false;\n  this._simplifyFactor = BufferParameters.DEFAULT_SIMPLIFY_FACTOR;\n\n  if (arguments.length === 0) {} else if (arguments.length === 1) {\n    var quadrantSegments = arguments[0];\n    this.setQuadrantSegments(quadrantSegments);\n  } else if (arguments.length === 2) {\n    var quadrantSegments$1 = arguments[0];\n    var endCapStyle = arguments[1];\n    this.setQuadrantSegments(quadrantSegments$1);\n    this.setEndCapStyle(endCapStyle);\n  } else if (arguments.length === 4) {\n    var quadrantSegments$2 = arguments[0];\n    var endCapStyle$1 = arguments[1];\n    var joinStyle = arguments[2];\n    var mitreLimit = arguments[3];\n    this.setQuadrantSegments(quadrantSegments$2);\n    this.setEndCapStyle(endCapStyle$1);\n    this.setJoinStyle(joinStyle);\n    this.setMitreLimit(mitreLimit);\n  }\n};\n\nvar staticAccessors$25 = { CAP_ROUND: { configurable: true },CAP_FLAT: { configurable: true },CAP_SQUARE: { configurable: true },JOIN_ROUND: { configurable: true },JOIN_MITRE: { configurable: true },JOIN_BEVEL: { configurable: true },DEFAULT_QUADRANT_SEGMENTS: { configurable: true },DEFAULT_MITRE_LIMIT: { configurable: true },DEFAULT_SIMPLIFY_FACTOR: { configurable: true } };\nBufferParameters.prototype.getEndCapStyle = function getEndCapStyle () {\n  return this._endCapStyle\n};\nBufferParameters.prototype.isSingleSided = function isSingleSided () {\n  return this._isSingleSided\n};\nBufferParameters.prototype.setQuadrantSegments = function setQuadrantSegments (quadSegs) {\n  this._quadrantSegments = quadSegs;\n  if (this._quadrantSegments === 0) { this._joinStyle = BufferParameters.JOIN_BEVEL; }\n  if (this._quadrantSegments < 0) {\n    this._joinStyle = BufferParameters.JOIN_MITRE;\n    this._mitreLimit = Math.abs(this._quadrantSegments);\n  }\n  if (quadSegs <= 0) {\n    this._quadrantSegments = 1;\n  }\n  if (this._joinStyle !== BufferParameters.JOIN_ROUND) {\n    this._quadrantSegments = BufferParameters.DEFAULT_QUADRANT_SEGMENTS;\n  }\n};\nBufferParameters.prototype.getJoinStyle = function getJoinStyle () {\n  return this._joinStyle\n};\nBufferParameters.prototype.setJoinStyle = function setJoinStyle (joinStyle) {\n  this._joinStyle = joinStyle;\n};\nBufferParameters.prototype.setSimplifyFactor = function setSimplifyFactor (simplifyFactor) {\n  this._simplifyFactor = simplifyFactor < 0 ? 0 : simplifyFactor;\n};\nBufferParameters.prototype.getSimplifyFactor = function getSimplifyFactor () {\n  return this._simplifyFactor\n};\nBufferParameters.prototype.getQuadrantSegments = function getQuadrantSegments () {\n  return this._quadrantSegments\n};\nBufferParameters.prototype.setEndCapStyle = function setEndCapStyle (endCapStyle) {\n  this._endCapStyle = endCapStyle;\n};\nBufferParameters.prototype.getMitreLimit = function getMitreLimit () {\n  return this._mitreLimit\n};\nBufferParameters.prototype.setMitreLimit = function setMitreLimit (mitreLimit) {\n  this._mitreLimit = mitreLimit;\n};\nBufferParameters.prototype.setSingleSided = function setSingleSided (isSingleSided) {\n  this._isSingleSided = isSingleSided;\n};\nBufferParameters.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferParameters.prototype.getClass = function getClass () {\n  return BufferParameters\n};\nBufferParameters.bufferDistanceError = function bufferDistanceError (quadSegs) {\n  var alpha = Math.PI / 2.0 / quadSegs;\n  return 1 - Math.cos(alpha / 2.0)\n};\nstaticAccessors$25.CAP_ROUND.get = function () { return 1 };\nstaticAccessors$25.CAP_FLAT.get = function () { return 2 };\nstaticAccessors$25.CAP_SQUARE.get = function () { return 3 };\nstaticAccessors$25.JOIN_ROUND.get = function () { return 1 };\nstaticAccessors$25.JOIN_MITRE.get = function () { return 2 };\nstaticAccessors$25.JOIN_BEVEL.get = function () { return 3 };\nstaticAccessors$25.DEFAULT_QUADRANT_SEGMENTS.get = function () { return 8 };\nstaticAccessors$25.DEFAULT_MITRE_LIMIT.get = function () { return 5.0 };\nstaticAccessors$25.DEFAULT_SIMPLIFY_FACTOR.get = function () { return 0.01 };\n\nObject.defineProperties( BufferParameters, staticAccessors$25 );\n\nvar BufferInputLineSimplifier = function BufferInputLineSimplifier (inputLine) {\n  this._distanceTol = null;\n  this._isDeleted = null;\n  this._angleOrientation = CGAlgorithms.COUNTERCLOCKWISE;\n  this._inputLine = inputLine || null;\n};\n\nvar staticAccessors$26 = { INIT: { configurable: true },DELETE: { configurable: true },KEEP: { configurable: true },NUM_PTS_TO_CHECK: { configurable: true } };\nBufferInputLineSimplifier.prototype.isDeletable = function isDeletable (i0, i1, i2, distanceTol) {\n  var p0 = this._inputLine[i0];\n  var p1 = this._inputLine[i1];\n  var p2 = this._inputLine[i2];\n  if (!this.isConcave(p0, p1, p2)) { return false }\n  if (!this.isShallow(p0, p1, p2, distanceTol)) { return false }\n  return this.isShallowSampled(p0, p1, i0, i2, distanceTol)\n};\nBufferInputLineSimplifier.prototype.deleteShallowConcavities = function deleteShallowConcavities () {\n    var this$1 = this;\n\n  var index = 1;\n  // const maxIndex = this._inputLine.length - 1\n  var midIndex = this.findNextNonDeletedIndex(index);\n  var lastIndex = this.findNextNonDeletedIndex(midIndex);\n  var isChanged = false;\n  while (lastIndex < this._inputLine.length) {\n    var isMiddleVertexDeleted = false;\n    if (this$1.isDeletable(index, midIndex, lastIndex, this$1._distanceTol)) {\n      this$1._isDeleted[midIndex] = BufferInputLineSimplifier.DELETE;\n      isMiddleVertexDeleted = true;\n      isChanged = true;\n    }\n    if (isMiddleVertexDeleted) { index = lastIndex; } else { index = midIndex; }\n    midIndex = this$1.findNextNonDeletedIndex(index);\n    lastIndex = this$1.findNextNonDeletedIndex(midIndex);\n  }\n  return isChanged\n};\nBufferInputLineSimplifier.prototype.isShallowConcavity = function isShallowConcavity (p0, p1, p2, distanceTol) {\n  var orientation = CGAlgorithms.computeOrientation(p0, p1, p2);\n  var isAngleToSimplify = orientation === this._angleOrientation;\n  if (!isAngleToSimplify) { return false }\n  var dist = CGAlgorithms.distancePointLine(p1, p0, p2);\n  return dist < distanceTol\n};\nBufferInputLineSimplifier.prototype.isShallowSampled = function isShallowSampled (p0, p2, i0, i2, distanceTol) {\n    var this$1 = this;\n\n  var inc = Math.trunc((i2 - i0) / BufferInputLineSimplifier.NUM_PTS_TO_CHECK);\n  if (inc <= 0) { inc = 1; }\n  for (var i = i0; i < i2; i += inc) {\n    if (!this$1.isShallow(p0, p2, this$1._inputLine[i], distanceTol)) { return false }\n  }\n  return true\n};\nBufferInputLineSimplifier.prototype.isConcave = function isConcave (p0, p1, p2) {\n  var orientation = CGAlgorithms.computeOrientation(p0, p1, p2);\n  var isConcave = orientation === this._angleOrientation;\n  return isConcave\n};\nBufferInputLineSimplifier.prototype.simplify = function simplify (distanceTol) {\n    var this$1 = this;\n\n  this._distanceTol = Math.abs(distanceTol);\n  if (distanceTol < 0) { this._angleOrientation = CGAlgorithms.CLOCKWISE; }\n  this._isDeleted = new Array(this._inputLine.length).fill(null);\n  var isChanged = false;\n  do {\n    isChanged = this$1.deleteShallowConcavities();\n  } while (isChanged)\n  return this.collapseLine()\n};\nBufferInputLineSimplifier.prototype.findNextNonDeletedIndex = function findNextNonDeletedIndex (index) {\n  var next = index + 1;\n  while (next < this._inputLine.length && this._isDeleted[next] === BufferInputLineSimplifier.DELETE) { next++; }\n  return next\n};\nBufferInputLineSimplifier.prototype.isShallow = function isShallow (p0, p1, p2, distanceTol) {\n  var dist = CGAlgorithms.distancePointLine(p1, p0, p2);\n  return dist < distanceTol\n};\nBufferInputLineSimplifier.prototype.collapseLine = function collapseLine () {\n    var this$1 = this;\n\n  var coordList = new CoordinateList();\n  for (var i = 0; i < this._inputLine.length; i++) {\n    if (this$1._isDeleted[i] !== BufferInputLineSimplifier.DELETE) { coordList.add(this$1._inputLine[i]); }\n  }\n  return coordList.toCoordinateArray()\n};\nBufferInputLineSimplifier.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferInputLineSimplifier.prototype.getClass = function getClass () {\n  return BufferInputLineSimplifier\n};\nBufferInputLineSimplifier.simplify = function simplify (inputLine, distanceTol) {\n  var simp = new BufferInputLineSimplifier(inputLine);\n  return simp.simplify(distanceTol)\n};\nstaticAccessors$26.INIT.get = function () { return 0 };\nstaticAccessors$26.DELETE.get = function () { return 1 };\nstaticAccessors$26.KEEP.get = function () { return 1 };\nstaticAccessors$26.NUM_PTS_TO_CHECK.get = function () { return 10 };\n\nObject.defineProperties( BufferInputLineSimplifier, staticAccessors$26 );\n\nvar OffsetSegmentString = function OffsetSegmentString () {\n  this._ptList = null;\n  this._precisionModel = null;\n  this._minimimVertexDistance = 0.0;\n  this._ptList = new ArrayList();\n};\n\nvar staticAccessors$28 = { COORDINATE_ARRAY_TYPE: { configurable: true } };\nOffsetSegmentString.prototype.getCoordinates = function getCoordinates () {\n  var coord = this._ptList.toArray(OffsetSegmentString.COORDINATE_ARRAY_TYPE);\n  return coord\n};\nOffsetSegmentString.prototype.setPrecisionModel = function setPrecisionModel (precisionModel) {\n  this._precisionModel = precisionModel;\n};\nOffsetSegmentString.prototype.addPt = function addPt (pt) {\n  var bufPt = new Coordinate(pt);\n  this._precisionModel.makePrecise(bufPt);\n  if (this.isRedundant(bufPt)) { return null }\n  this._ptList.add(bufPt);\n};\nOffsetSegmentString.prototype.revere = function revere () {};\nOffsetSegmentString.prototype.addPts = function addPts (pt, isForward) {\n    var this$1 = this;\n\n  if (isForward) {\n    for (var i = 0; i < pt.length; i++) {\n      this$1.addPt(pt[i]);\n    }\n  } else {\n    for (var i$1 = pt.length - 1; i$1 >= 0; i$1--) {\n      this$1.addPt(pt[i$1]);\n    }\n  }\n};\nOffsetSegmentString.prototype.isRedundant = function isRedundant (pt) {\n  if (this._ptList.size() < 1) { return false }\n  var lastPt = this._ptList.get(this._ptList.size() - 1);\n  var ptDist = pt.distance(lastPt);\n  if (ptDist < this._minimimVertexDistance) { return true }\n  return false\n};\nOffsetSegmentString.prototype.toString = function toString () {\n  var fact = new GeometryFactory();\n  var line = fact.createLineString(this.getCoordinates());\n  return line.toString()\n};\nOffsetSegmentString.prototype.closeRing = function closeRing () {\n  if (this._ptList.size() < 1) { return null }\n  var startPt = new Coordinate(this._ptList.get(0));\n  var lastPt = this._ptList.get(this._ptList.size() - 1);\n  // const last2Pt = null\n  // if (this._ptList.size() >= 2) last2Pt = this._ptList.get(this._ptList.size() - 2)\n  if (startPt.equals(lastPt)) { return null }\n  this._ptList.add(startPt);\n};\nOffsetSegmentString.prototype.setMinimumVertexDistance = function setMinimumVertexDistance (minimimVertexDistance) {\n  this._minimimVertexDistance = minimimVertexDistance;\n};\nOffsetSegmentString.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOffsetSegmentString.prototype.getClass = function getClass () {\n  return OffsetSegmentString\n};\nstaticAccessors$28.COORDINATE_ARRAY_TYPE.get = function () { return new Array(0).fill(null) };\n\nObject.defineProperties( OffsetSegmentString, staticAccessors$28 );\n\nvar Angle = function Angle () {};\n\nvar staticAccessors$29 = { PI_TIMES_2: { configurable: true },PI_OVER_2: { configurable: true },PI_OVER_4: { configurable: true },COUNTERCLOCKWISE: { configurable: true },CLOCKWISE: { configurable: true },NONE: { configurable: true } };\n\nAngle.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nAngle.prototype.getClass = function getClass () {\n  return Angle\n};\nAngle.toDegrees = function toDegrees (radians) {\n  return radians * 180 / Math.PI\n};\nAngle.normalize = function normalize (angle) {\n  while (angle > Math.PI) { angle -= Angle.PI_TIMES_2; }\n  while (angle <= -Math.PI) { angle += Angle.PI_TIMES_2; }\n  return angle\n};\nAngle.angle = function angle () {\n  if (arguments.length === 1) {\n    var p = arguments[0];\n    return Math.atan2(p.y, p.x)\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    var dx = p1.x - p0.x;\n    var dy = p1.y - p0.y;\n    return Math.atan2(dy, dx)\n  }\n};\nAngle.isAcute = function isAcute (p0, p1, p2) {\n  var dx0 = p0.x - p1.x;\n  var dy0 = p0.y - p1.y;\n  var dx1 = p2.x - p1.x;\n  var dy1 = p2.y - p1.y;\n  var dotprod = dx0 * dx1 + dy0 * dy1;\n  return dotprod > 0\n};\nAngle.isObtuse = function isObtuse (p0, p1, p2) {\n  var dx0 = p0.x - p1.x;\n  var dy0 = p0.y - p1.y;\n  var dx1 = p2.x - p1.x;\n  var dy1 = p2.y - p1.y;\n  var dotprod = dx0 * dx1 + dy0 * dy1;\n  return dotprod < 0\n};\nAngle.interiorAngle = function interiorAngle (p0, p1, p2) {\n  var anglePrev = Angle.angle(p1, p0);\n  var angleNext = Angle.angle(p1, p2);\n  return Math.abs(angleNext - anglePrev)\n};\nAngle.normalizePositive = function normalizePositive (angle) {\n  if (angle < 0.0) {\n    while (angle < 0.0) { angle += Angle.PI_TIMES_2; }\n    if (angle >= Angle.PI_TIMES_2) { angle = 0.0; }\n  } else {\n    while (angle >= Angle.PI_TIMES_2) { angle -= Angle.PI_TIMES_2; }\n    if (angle < 0.0) { angle = 0.0; }\n  }\n  return angle\n};\nAngle.angleBetween = function angleBetween (tip1, tail, tip2) {\n  var a1 = Angle.angle(tail, tip1);\n  var a2 = Angle.angle(tail, tip2);\n  return Angle.diff(a1, a2)\n};\nAngle.diff = function diff (ang1, ang2) {\n  var delAngle = null;\n  if (ang1 < ang2) {\n    delAngle = ang2 - ang1;\n  } else {\n    delAngle = ang1 - ang2;\n  }\n  if (delAngle > Math.PI) {\n    delAngle = 2 * Math.PI - delAngle;\n  }\n  return delAngle\n};\nAngle.toRadians = function toRadians (angleDegrees) {\n  return angleDegrees * Math.PI / 180.0\n};\nAngle.getTurn = function getTurn (ang1, ang2) {\n  var crossproduct = Math.sin(ang2 - ang1);\n  if (crossproduct > 0) {\n    return Angle.COUNTERCLOCKWISE\n  }\n  if (crossproduct < 0) {\n    return Angle.CLOCKWISE\n  }\n  return Angle.NONE\n};\nAngle.angleBetweenOriented = function angleBetweenOriented (tip1, tail, tip2) {\n  var a1 = Angle.angle(tail, tip1);\n  var a2 = Angle.angle(tail, tip2);\n  var angDel = a2 - a1;\n  if (angDel <= -Math.PI) { return angDel + Angle.PI_TIMES_2 }\n  if (angDel > Math.PI) { return angDel - Angle.PI_TIMES_2 }\n  return angDel\n};\nstaticAccessors$29.PI_TIMES_2.get = function () { return 2.0 * Math.PI };\nstaticAccessors$29.PI_OVER_2.get = function () { return Math.PI / 2.0 };\nstaticAccessors$29.PI_OVER_4.get = function () { return Math.PI / 4.0 };\nstaticAccessors$29.COUNTERCLOCKWISE.get = function () { return CGAlgorithms.COUNTERCLOCKWISE };\nstaticAccessors$29.CLOCKWISE.get = function () { return CGAlgorithms.CLOCKWISE };\nstaticAccessors$29.NONE.get = function () { return CGAlgorithms.COLLINEAR };\n\nObject.defineProperties( Angle, staticAccessors$29 );\n\nvar OffsetSegmentGenerator = function OffsetSegmentGenerator () {\n  this._maxCurveSegmentError = 0.0;\n  this._filletAngleQuantum = null;\n  this._closingSegLengthFactor = 1;\n  this._segList = null;\n  this._distance = 0.0;\n  this._precisionModel = null;\n  this._bufParams = null;\n  this._li = null;\n  this._s0 = null;\n  this._s1 = null;\n  this._s2 = null;\n  this._seg0 = new LineSegment();\n  this._seg1 = new LineSegment();\n  this._offset0 = new LineSegment();\n  this._offset1 = new LineSegment();\n  this._side = 0;\n  this._hasNarrowConcaveAngle = false;\n  var precisionModel = arguments[0];\n  var bufParams = arguments[1];\n  var distance = arguments[2];\n  this._precisionModel = precisionModel;\n  this._bufParams = bufParams;\n  this._li = new RobustLineIntersector();\n  this._filletAngleQuantum = Math.PI / 2.0 / bufParams.getQuadrantSegments();\n  if (bufParams.getQuadrantSegments() >= 8 && bufParams.getJoinStyle() === BufferParameters.JOIN_ROUND) { this._closingSegLengthFactor = OffsetSegmentGenerator.MAX_CLOSING_SEG_LEN_FACTOR; }\n  this.init(distance);\n};\n\nvar staticAccessors$27 = { OFFSET_SEGMENT_SEPARATION_FACTOR: { configurable: true },INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR: { configurable: true },CURVE_VERTEX_SNAP_DISTANCE_FACTOR: { configurable: true },MAX_CLOSING_SEG_LEN_FACTOR: { configurable: true } };\nOffsetSegmentGenerator.prototype.addNextSegment = function addNextSegment (p, addStartPoint) {\n  this._s0 = this._s1;\n  this._s1 = this._s2;\n  this._s2 = p;\n  this._seg0.setCoordinates(this._s0, this._s1);\n  this.computeOffsetSegment(this._seg0, this._side, this._distance, this._offset0);\n  this._seg1.setCoordinates(this._s1, this._s2);\n  this.computeOffsetSegment(this._seg1, this._side, this._distance, this._offset1);\n  if (this._s1.equals(this._s2)) { return null }\n  var orientation = CGAlgorithms.computeOrientation(this._s0, this._s1, this._s2);\n  var outsideTurn = (orientation === CGAlgorithms.CLOCKWISE && this._side === Position.LEFT) || (orientation === CGAlgorithms.COUNTERCLOCKWISE && this._side === Position.RIGHT);\n  if (orientation === 0) {\n    this.addCollinear(addStartPoint);\n  } else if (outsideTurn) {\n    this.addOutsideTurn(orientation, addStartPoint);\n  } else {\n    this.addInsideTurn(orientation, addStartPoint);\n  }\n};\nOffsetSegmentGenerator.prototype.addLineEndCap = function addLineEndCap (p0, p1) {\n  var seg = new LineSegment(p0, p1);\n  var offsetL = new LineSegment();\n  this.computeOffsetSegment(seg, Position.LEFT, this._distance, offsetL);\n  var offsetR = new LineSegment();\n  this.computeOffsetSegment(seg, Position.RIGHT, this._distance, offsetR);\n  var dx = p1.x - p0.x;\n  var dy = p1.y - p0.y;\n  var angle = Math.atan2(dy, dx);\n  switch (this._bufParams.getEndCapStyle()) {\n    case BufferParameters.CAP_ROUND:\n      this._segList.addPt(offsetL.p1);\n      this.addFilletArc(p1, angle + Math.PI / 2, angle - Math.PI / 2, CGAlgorithms.CLOCKWISE, this._distance);\n      this._segList.addPt(offsetR.p1);\n      break\n    case BufferParameters.CAP_FLAT:\n      this._segList.addPt(offsetL.p1);\n      this._segList.addPt(offsetR.p1);\n      break\n    case BufferParameters.CAP_SQUARE:\n      var squareCapSideOffset = new Coordinate();\n      squareCapSideOffset.x = Math.abs(this._distance) * Math.cos(angle);\n      squareCapSideOffset.y = Math.abs(this._distance) * Math.sin(angle);\n      var squareCapLOffset = new Coordinate(offsetL.p1.x + squareCapSideOffset.x, offsetL.p1.y + squareCapSideOffset.y);\n      var squareCapROffset = new Coordinate(offsetR.p1.x + squareCapSideOffset.x, offsetR.p1.y + squareCapSideOffset.y);\n      this._segList.addPt(squareCapLOffset);\n      this._segList.addPt(squareCapROffset);\n      break\n    default:\n  }\n};\nOffsetSegmentGenerator.prototype.getCoordinates = function getCoordinates () {\n  var pts = this._segList.getCoordinates();\n  return pts\n};\nOffsetSegmentGenerator.prototype.addMitreJoin = function addMitreJoin (p, offset0, offset1, distance) {\n  var isMitreWithinLimit = true;\n  var intPt = null;\n  try {\n    intPt = HCoordinate.intersection(offset0.p0, offset0.p1, offset1.p0, offset1.p1);\n    var mitreRatio = distance <= 0.0 ? 1.0 : intPt.distance(p) / Math.abs(distance);\n    if (mitreRatio > this._bufParams.getMitreLimit()) { isMitreWithinLimit = false; }\n  } catch (ex) {\n    if (ex instanceof NotRepresentableException) {\n      intPt = new Coordinate(0, 0);\n      isMitreWithinLimit = false;\n    } else { throw ex }\n  } finally {}\n  if (isMitreWithinLimit) {\n    this._segList.addPt(intPt);\n  } else {\n    this.addLimitedMitreJoin(offset0, offset1, distance, this._bufParams.getMitreLimit());\n  }\n};\nOffsetSegmentGenerator.prototype.addFilletCorner = function addFilletCorner (p, p0, p1, direction, radius) {\n  var dx0 = p0.x - p.x;\n  var dy0 = p0.y - p.y;\n  var startAngle = Math.atan2(dy0, dx0);\n  var dx1 = p1.x - p.x;\n  var dy1 = p1.y - p.y;\n  var endAngle = Math.atan2(dy1, dx1);\n  if (direction === CGAlgorithms.CLOCKWISE) {\n    if (startAngle <= endAngle) { startAngle += 2.0 * Math.PI; }\n  } else {\n    if (startAngle >= endAngle) { startAngle -= 2.0 * Math.PI; }\n  }\n  this._segList.addPt(p0);\n  this.addFilletArc(p, startAngle, endAngle, direction, radius);\n  this._segList.addPt(p1);\n};\nOffsetSegmentGenerator.prototype.addOutsideTurn = function addOutsideTurn (orientation, addStartPoint) {\n  if (this._offset0.p1.distance(this._offset1.p0) < this._distance * OffsetSegmentGenerator.OFFSET_SEGMENT_SEPARATION_FACTOR) {\n    this._segList.addPt(this._offset0.p1);\n    return null\n  }\n  if (this._bufParams.getJoinStyle() === BufferParameters.JOIN_MITRE) {\n    this.addMitreJoin(this._s1, this._offset0, this._offset1, this._distance);\n  } else if (this._bufParams.getJoinStyle() === BufferParameters.JOIN_BEVEL) {\n    this.addBevelJoin(this._offset0, this._offset1);\n  } else {\n    if (addStartPoint) { this._segList.addPt(this._offset0.p1); }\n    this.addFilletCorner(this._s1, this._offset0.p1, this._offset1.p0, orientation, this._distance);\n    this._segList.addPt(this._offset1.p0);\n  }\n};\nOffsetSegmentGenerator.prototype.createSquare = function createSquare (p) {\n  this._segList.addPt(new Coordinate(p.x + this._distance, p.y + this._distance));\n  this._segList.addPt(new Coordinate(p.x + this._distance, p.y - this._distance));\n  this._segList.addPt(new Coordinate(p.x - this._distance, p.y - this._distance));\n  this._segList.addPt(new Coordinate(p.x - this._distance, p.y + this._distance));\n  this._segList.closeRing();\n};\nOffsetSegmentGenerator.prototype.addSegments = function addSegments (pt, isForward) {\n  this._segList.addPts(pt, isForward);\n};\nOffsetSegmentGenerator.prototype.addFirstSegment = function addFirstSegment () {\n  this._segList.addPt(this._offset1.p0);\n};\nOffsetSegmentGenerator.prototype.addLastSegment = function addLastSegment () {\n  this._segList.addPt(this._offset1.p1);\n};\nOffsetSegmentGenerator.prototype.initSideSegments = function initSideSegments (s1, s2, side) {\n  this._s1 = s1;\n  this._s2 = s2;\n  this._side = side;\n  this._seg1.setCoordinates(s1, s2);\n  this.computeOffsetSegment(this._seg1, side, this._distance, this._offset1);\n};\nOffsetSegmentGenerator.prototype.addLimitedMitreJoin = function addLimitedMitreJoin (offset0, offset1, distance, mitreLimit) {\n  var basePt = this._seg0.p1;\n  var ang0 = Angle.angle(basePt, this._seg0.p0);\n  // const ang1 = Angle.angle(basePt, this._seg1.p1)\n  var angDiff = Angle.angleBetweenOriented(this._seg0.p0, basePt, this._seg1.p1);\n  var angDiffHalf = angDiff / 2;\n  var midAng = Angle.normalize(ang0 + angDiffHalf);\n  var mitreMidAng = Angle.normalize(midAng + Math.PI);\n  var mitreDist = mitreLimit * distance;\n  var bevelDelta = mitreDist * Math.abs(Math.sin(angDiffHalf));\n  var bevelHalfLen = distance - bevelDelta;\n  var bevelMidX = basePt.x + mitreDist * Math.cos(mitreMidAng);\n  var bevelMidY = basePt.y + mitreDist * Math.sin(mitreMidAng);\n  var bevelMidPt = new Coordinate(bevelMidX, bevelMidY);\n  var mitreMidLine = new LineSegment(basePt, bevelMidPt);\n  var bevelEndLeft = mitreMidLine.pointAlongOffset(1.0, bevelHalfLen);\n  var bevelEndRight = mitreMidLine.pointAlongOffset(1.0, -bevelHalfLen);\n  if (this._side === Position.LEFT) {\n    this._segList.addPt(bevelEndLeft);\n    this._segList.addPt(bevelEndRight);\n  } else {\n    this._segList.addPt(bevelEndRight);\n    this._segList.addPt(bevelEndLeft);\n  }\n};\nOffsetSegmentGenerator.prototype.computeOffsetSegment = function computeOffsetSegment (seg, side, distance, offset) {\n  var sideSign = side === Position.LEFT ? 1 : -1;\n  var dx = seg.p1.x - seg.p0.x;\n  var dy = seg.p1.y - seg.p0.y;\n  var len = Math.sqrt(dx * dx + dy * dy);\n  var ux = sideSign * distance * dx / len;\n  var uy = sideSign * distance * dy / len;\n  offset.p0.x = seg.p0.x - uy;\n  offset.p0.y = seg.p0.y + ux;\n  offset.p1.x = seg.p1.x - uy;\n  offset.p1.y = seg.p1.y + ux;\n};\nOffsetSegmentGenerator.prototype.addFilletArc = function addFilletArc (p, startAngle, endAngle, direction, radius) {\n    var this$1 = this;\n\n  var directionFactor = direction === CGAlgorithms.CLOCKWISE ? -1 : 1;\n  var totalAngle = Math.abs(startAngle - endAngle);\n  var nSegs = Math.trunc(totalAngle / this._filletAngleQuantum + 0.5);\n  if (nSegs < 1) { return null }\n  var initAngle = 0.0;\n  var currAngleInc = totalAngle / nSegs;\n  var currAngle = initAngle;\n  var pt = new Coordinate();\n  while (currAngle < totalAngle) {\n    var angle = startAngle + directionFactor * currAngle;\n    pt.x = p.x + radius * Math.cos(angle);\n    pt.y = p.y + radius * Math.sin(angle);\n    this$1._segList.addPt(pt);\n    currAngle += currAngleInc;\n  }\n};\nOffsetSegmentGenerator.prototype.addInsideTurn = function addInsideTurn (orientation, addStartPoint) {\n  this._li.computeIntersection(this._offset0.p0, this._offset0.p1, this._offset1.p0, this._offset1.p1);\n  if (this._li.hasIntersection()) {\n    this._segList.addPt(this._li.getIntersection(0));\n  } else {\n    this._hasNarrowConcaveAngle = true;\n    if (this._offset0.p1.distance(this._offset1.p0) < this._distance * OffsetSegmentGenerator.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR) {\n      this._segList.addPt(this._offset0.p1);\n    } else {\n      this._segList.addPt(this._offset0.p1);\n      if (this._closingSegLengthFactor > 0) {\n        var mid0 = new Coordinate((this._closingSegLengthFactor * this._offset0.p1.x + this._s1.x) / (this._closingSegLengthFactor + 1), (this._closingSegLengthFactor * this._offset0.p1.y + this._s1.y) / (this._closingSegLengthFactor + 1));\n        this._segList.addPt(mid0);\n        var mid1 = new Coordinate((this._closingSegLengthFactor * this._offset1.p0.x + this._s1.x) / (this._closingSegLengthFactor + 1), (this._closingSegLengthFactor * this._offset1.p0.y + this._s1.y) / (this._closingSegLengthFactor + 1));\n        this._segList.addPt(mid1);\n      } else {\n        this._segList.addPt(this._s1);\n      }\n      this._segList.addPt(this._offset1.p0);\n    }\n  }\n};\nOffsetSegmentGenerator.prototype.createCircle = function createCircle (p) {\n  var pt = new Coordinate(p.x + this._distance, p.y);\n  this._segList.addPt(pt);\n  this.addFilletArc(p, 0.0, 2.0 * Math.PI, -1, this._distance);\n  this._segList.closeRing();\n};\nOffsetSegmentGenerator.prototype.addBevelJoin = function addBevelJoin (offset0, offset1) {\n  this._segList.addPt(offset0.p1);\n  this._segList.addPt(offset1.p0);\n};\nOffsetSegmentGenerator.prototype.init = function init (distance) {\n  this._distance = distance;\n  this._maxCurveSegmentError = distance * (1 - Math.cos(this._filletAngleQuantum / 2.0));\n  this._segList = new OffsetSegmentString();\n  this._segList.setPrecisionModel(this._precisionModel);\n  this._segList.setMinimumVertexDistance(distance * OffsetSegmentGenerator.CURVE_VERTEX_SNAP_DISTANCE_FACTOR);\n};\nOffsetSegmentGenerator.prototype.addCollinear = function addCollinear (addStartPoint) {\n  this._li.computeIntersection(this._s0, this._s1, this._s1, this._s2);\n  var numInt = this._li.getIntersectionNum();\n  if (numInt >= 2) {\n    if (this._bufParams.getJoinStyle() === BufferParameters.JOIN_BEVEL || this._bufParams.getJoinStyle() === BufferParameters.JOIN_MITRE) {\n      if (addStartPoint) { this._segList.addPt(this._offset0.p1); }\n      this._segList.addPt(this._offset1.p0);\n    } else {\n      this.addFilletCorner(this._s1, this._offset0.p1, this._offset1.p0, CGAlgorithms.CLOCKWISE, this._distance);\n    }\n  }\n};\nOffsetSegmentGenerator.prototype.closeRing = function closeRing () {\n  this._segList.closeRing();\n};\nOffsetSegmentGenerator.prototype.hasNarrowConcaveAngle = function hasNarrowConcaveAngle () {\n  return this._hasNarrowConcaveAngle\n};\nOffsetSegmentGenerator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOffsetSegmentGenerator.prototype.getClass = function getClass () {\n  return OffsetSegmentGenerator\n};\nstaticAccessors$27.OFFSET_SEGMENT_SEPARATION_FACTOR.get = function () { return 1.0E-3 };\nstaticAccessors$27.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR.get = function () { return 1.0E-3 };\nstaticAccessors$27.CURVE_VERTEX_SNAP_DISTANCE_FACTOR.get = function () { return 1.0E-6 };\nstaticAccessors$27.MAX_CLOSING_SEG_LEN_FACTOR.get = function () { return 80 };\n\nObject.defineProperties( OffsetSegmentGenerator, staticAccessors$27 );\n\nvar OffsetCurveBuilder = function OffsetCurveBuilder () {\n  this._distance = 0.0;\n  this._precisionModel = null;\n  this._bufParams = null;\n  var precisionModel = arguments[0];\n  var bufParams = arguments[1];\n  this._precisionModel = precisionModel;\n  this._bufParams = bufParams;\n};\nOffsetCurveBuilder.prototype.getOffsetCurve = function getOffsetCurve (inputPts, distance) {\n  this._distance = distance;\n  if (distance === 0.0) { return null }\n  var isRightSide = distance < 0.0;\n  var posDistance = Math.abs(distance);\n  var segGen = this.getSegGen(posDistance);\n  if (inputPts.length <= 1) {\n    this.computePointCurve(inputPts[0], segGen);\n  } else {\n    this.computeOffsetCurve(inputPts, isRightSide, segGen);\n  }\n  var curvePts = segGen.getCoordinates();\n  if (isRightSide) { CoordinateArrays.reverse(curvePts); }\n  return curvePts\n};\nOffsetCurveBuilder.prototype.computeSingleSidedBufferCurve = function computeSingleSidedBufferCurve (inputPts, isRightSide, segGen) {\n  var distTol = this.simplifyTolerance(this._distance);\n  if (isRightSide) {\n    segGen.addSegments(inputPts, true);\n    var simp2 = BufferInputLineSimplifier.simplify(inputPts, -distTol);\n    var n2 = simp2.length - 1;\n    segGen.initSideSegments(simp2[n2], simp2[n2 - 1], Position.LEFT);\n    segGen.addFirstSegment();\n    for (var i = n2 - 2; i >= 0; i--) {\n      segGen.addNextSegment(simp2[i], true);\n    }\n  } else {\n    segGen.addSegments(inputPts, false);\n    var simp1 = BufferInputLineSimplifier.simplify(inputPts, distTol);\n    var n1 = simp1.length - 1;\n    segGen.initSideSegments(simp1[0], simp1[1], Position.LEFT);\n    segGen.addFirstSegment();\n    for (var i$1 = 2; i$1 <= n1; i$1++) {\n      segGen.addNextSegment(simp1[i$1], true);\n    }\n  }\n  segGen.addLastSegment();\n  segGen.closeRing();\n};\nOffsetCurveBuilder.prototype.computeRingBufferCurve = function computeRingBufferCurve (inputPts, side, segGen) {\n  var distTol = this.simplifyTolerance(this._distance);\n  if (side === Position.RIGHT) { distTol = -distTol; }\n  var simp = BufferInputLineSimplifier.simplify(inputPts, distTol);\n  var n = simp.length - 1;\n  segGen.initSideSegments(simp[n - 1], simp[0], side);\n  for (var i = 1; i <= n; i++) {\n    var addStartPoint = i !== 1;\n    segGen.addNextSegment(simp[i], addStartPoint);\n  }\n  segGen.closeRing();\n};\nOffsetCurveBuilder.prototype.computeLineBufferCurve = function computeLineBufferCurve (inputPts, segGen) {\n  var distTol = this.simplifyTolerance(this._distance);\n  var simp1 = BufferInputLineSimplifier.simplify(inputPts, distTol);\n  var n1 = simp1.length - 1;\n  segGen.initSideSegments(simp1[0], simp1[1], Position.LEFT);\n  for (var i = 2; i <= n1; i++) {\n    segGen.addNextSegment(simp1[i], true);\n  }\n  segGen.addLastSegment();\n  segGen.addLineEndCap(simp1[n1 - 1], simp1[n1]);\n  var simp2 = BufferInputLineSimplifier.simplify(inputPts, -distTol);\n  var n2 = simp2.length - 1;\n  segGen.initSideSegments(simp2[n2], simp2[n2 - 1], Position.LEFT);\n  for (var i$1 = n2 - 2; i$1 >= 0; i$1--) {\n    segGen.addNextSegment(simp2[i$1], true);\n  }\n  segGen.addLastSegment();\n  segGen.addLineEndCap(simp2[1], simp2[0]);\n  segGen.closeRing();\n};\nOffsetCurveBuilder.prototype.computePointCurve = function computePointCurve (pt, segGen) {\n  switch (this._bufParams.getEndCapStyle()) {\n    case BufferParameters.CAP_ROUND:\n      segGen.createCircle(pt);\n      break\n    case BufferParameters.CAP_SQUARE:\n      segGen.createSquare(pt);\n      break\n    default:\n  }\n};\nOffsetCurveBuilder.prototype.getLineCurve = function getLineCurve (inputPts, distance) {\n  this._distance = distance;\n  if (distance < 0.0 && !this._bufParams.isSingleSided()) { return null }\n  if (distance === 0.0) { return null }\n  var posDistance = Math.abs(distance);\n  var segGen = this.getSegGen(posDistance);\n  if (inputPts.length <= 1) {\n    this.computePointCurve(inputPts[0], segGen);\n  } else {\n    if (this._bufParams.isSingleSided()) {\n      var isRightSide = distance < 0.0;\n      this.computeSingleSidedBufferCurve(inputPts, isRightSide, segGen);\n    } else { this.computeLineBufferCurve(inputPts, segGen); }\n  }\n  var lineCoord = segGen.getCoordinates();\n  return lineCoord\n};\nOffsetCurveBuilder.prototype.getBufferParameters = function getBufferParameters () {\n  return this._bufParams\n};\nOffsetCurveBuilder.prototype.simplifyTolerance = function simplifyTolerance (bufDistance) {\n  return bufDistance * this._bufParams.getSimplifyFactor()\n};\nOffsetCurveBuilder.prototype.getRingCurve = function getRingCurve (inputPts, side, distance) {\n  this._distance = distance;\n  if (inputPts.length <= 2) { return this.getLineCurve(inputPts, distance) }\n  if (distance === 0.0) {\n    return OffsetCurveBuilder.copyCoordinates(inputPts)\n  }\n  var segGen = this.getSegGen(distance);\n  this.computeRingBufferCurve(inputPts, side, segGen);\n  return segGen.getCoordinates()\n};\nOffsetCurveBuilder.prototype.computeOffsetCurve = function computeOffsetCurve (inputPts, isRightSide, segGen) {\n  var distTol = this.simplifyTolerance(this._distance);\n  if (isRightSide) {\n    var simp2 = BufferInputLineSimplifier.simplify(inputPts, -distTol);\n    var n2 = simp2.length - 1;\n    segGen.initSideSegments(simp2[n2], simp2[n2 - 1], Position.LEFT);\n    segGen.addFirstSegment();\n    for (var i = n2 - 2; i >= 0; i--) {\n      segGen.addNextSegment(simp2[i], true);\n    }\n  } else {\n    var simp1 = BufferInputLineSimplifier.simplify(inputPts, distTol);\n    var n1 = simp1.length - 1;\n    segGen.initSideSegments(simp1[0], simp1[1], Position.LEFT);\n    segGen.addFirstSegment();\n    for (var i$1 = 2; i$1 <= n1; i$1++) {\n      segGen.addNextSegment(simp1[i$1], true);\n    }\n  }\n  segGen.addLastSegment();\n};\nOffsetCurveBuilder.prototype.getSegGen = function getSegGen (distance) {\n  return new OffsetSegmentGenerator(this._precisionModel, this._bufParams, distance)\n};\nOffsetCurveBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOffsetCurveBuilder.prototype.getClass = function getClass () {\n  return OffsetCurveBuilder\n};\nOffsetCurveBuilder.copyCoordinates = function copyCoordinates (pts) {\n  var copy = new Array(pts.length).fill(null);\n  for (var i = 0; i < copy.length; i++) {\n    copy[i] = new Coordinate(pts[i]);\n  }\n  return copy\n};\n\nvar SubgraphDepthLocater = function SubgraphDepthLocater () {\n  this._subgraphs = null;\n  this._seg = new LineSegment();\n  this._cga = new CGAlgorithms();\n  var subgraphs = arguments[0];\n  this._subgraphs = subgraphs;\n};\n\nvar staticAccessors$30 = { DepthSegment: { configurable: true } };\nSubgraphDepthLocater.prototype.findStabbedSegments = function findStabbedSegments () {\n    var this$1 = this;\n\n  if (arguments.length === 1) {\n    var stabbingRayLeftPt = arguments[0];\n    var stabbedSegments = new ArrayList();\n    for (var i = this._subgraphs.iterator(); i.hasNext();) {\n      var bsg = i.next();\n      var env = bsg.getEnvelope();\n      if (stabbingRayLeftPt.y < env.getMinY() || stabbingRayLeftPt.y > env.getMaxY()) { continue }\n      this$1.findStabbedSegments(stabbingRayLeftPt, bsg.getDirectedEdges(), stabbedSegments);\n    }\n    return stabbedSegments\n  } else if (arguments.length === 3) {\n    if (hasInterface(arguments[2], List) && (arguments[0] instanceof Coordinate && arguments[1] instanceof DirectedEdge)) {\n      var stabbingRayLeftPt$1 = arguments[0];\n      var dirEdge = arguments[1];\n      var stabbedSegments$1 = arguments[2];\n      var pts = dirEdge.getEdge().getCoordinates();\n      for (var i$1 = 0; i$1 < pts.length - 1; i$1++) {\n        this$1._seg.p0 = pts[i$1];\n        this$1._seg.p1 = pts[i$1 + 1];\n        if (this$1._seg.p0.y > this$1._seg.p1.y) { this$1._seg.reverse(); }\n        var maxx = Math.max(this$1._seg.p0.x, this$1._seg.p1.x);\n        if (maxx < stabbingRayLeftPt$1.x) { continue }\n        if (this$1._seg.isHorizontal()) { continue }\n        if (stabbingRayLeftPt$1.y < this$1._seg.p0.y || stabbingRayLeftPt$1.y > this$1._seg.p1.y) { continue }\n        if (CGAlgorithms.computeOrientation(this$1._seg.p0, this$1._seg.p1, stabbingRayLeftPt$1) === CGAlgorithms.RIGHT) { continue }\n        var depth = dirEdge.getDepth(Position.LEFT);\n        if (!this$1._seg.p0.equals(pts[i$1])) { depth = dirEdge.getDepth(Position.RIGHT); }\n        var ds = new DepthSegment(this$1._seg, depth);\n        stabbedSegments$1.add(ds);\n      }\n    } else if (hasInterface(arguments[2], List) && (arguments[0] instanceof Coordinate && hasInterface(arguments[1], List))) {\n      var stabbingRayLeftPt$2 = arguments[0];\n      var dirEdges = arguments[1];\n      var stabbedSegments$2 = arguments[2];\n      for (var i$2 = dirEdges.iterator(); i$2.hasNext();) {\n        var de = i$2.next();\n        if (!de.isForward()) { continue }\n        this$1.findStabbedSegments(stabbingRayLeftPt$2, de, stabbedSegments$2);\n      }\n    }\n  }\n};\nSubgraphDepthLocater.prototype.getDepth = function getDepth (p) {\n  var stabbedSegments = this.findStabbedSegments(p);\n  if (stabbedSegments.size() === 0) { return 0 }\n  var ds = Collections.min(stabbedSegments);\n  return ds._leftDepth\n};\nSubgraphDepthLocater.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSubgraphDepthLocater.prototype.getClass = function getClass () {\n  return SubgraphDepthLocater\n};\nstaticAccessors$30.DepthSegment.get = function () { return DepthSegment };\n\nObject.defineProperties( SubgraphDepthLocater, staticAccessors$30 );\n\nvar DepthSegment = function DepthSegment () {\n  this._upwardSeg = null;\n  this._leftDepth = null;\n  var seg = arguments[0];\n  var depth = arguments[1];\n  this._upwardSeg = new LineSegment(seg);\n  this._leftDepth = depth;\n};\nDepthSegment.prototype.compareTo = function compareTo (obj) {\n  var other = obj;\n  if (this._upwardSeg.minX() >= other._upwardSeg.maxX()) { return 1 }\n  if (this._upwardSeg.maxX() <= other._upwardSeg.minX()) { return -1 }\n  var orientIndex = this._upwardSeg.orientationIndex(other._upwardSeg);\n  if (orientIndex !== 0) { return orientIndex }\n  orientIndex = -1 * other._upwardSeg.orientationIndex(this._upwardSeg);\n  if (orientIndex !== 0) { return orientIndex }\n  return this._upwardSeg.compareTo(other._upwardSeg)\n};\nDepthSegment.prototype.compareX = function compareX (seg0, seg1) {\n  var compare0 = seg0.p0.compareTo(seg1.p0);\n  if (compare0 !== 0) { return compare0 }\n  return seg0.p1.compareTo(seg1.p1)\n};\nDepthSegment.prototype.toString = function toString () {\n  return this._upwardSeg.toString()\n};\nDepthSegment.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nDepthSegment.prototype.getClass = function getClass () {\n  return DepthSegment\n};\n\nvar Triangle = function Triangle (p0, p1, p2) {\n  this.p0 = p0 || null;\n  this.p1 = p1 || null;\n  this.p2 = p2 || null;\n};\nTriangle.prototype.area = function area () {\n  return Triangle.area(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.signedArea = function signedArea () {\n  return Triangle.signedArea(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.interpolateZ = function interpolateZ (p) {\n  if (p === null) { throw new IllegalArgumentException('Supplied point is null.') }\n  return Triangle.interpolateZ(p, this.p0, this.p1, this.p2)\n};\nTriangle.prototype.longestSideLength = function longestSideLength () {\n  return Triangle.longestSideLength(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.isAcute = function isAcute () {\n  return Triangle.isAcute(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.circumcentre = function circumcentre () {\n  return Triangle.circumcentre(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.area3D = function area3D () {\n  return Triangle.area3D(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.centroid = function centroid () {\n  return Triangle.centroid(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.inCentre = function inCentre () {\n  return Triangle.inCentre(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nTriangle.prototype.getClass = function getClass () {\n  return Triangle\n};\nTriangle.area = function area (a, b, c) {\n  return Math.abs(((c.x - a.x) * (b.y - a.y) - (b.x - a.x) * (c.y - a.y)) / 2)\n};\nTriangle.signedArea = function signedArea (a, b, c) {\n  return ((c.x - a.x) * (b.y - a.y) - (b.x - a.x) * (c.y - a.y)) / 2\n};\nTriangle.det = function det (m00, m01, m10, m11) {\n  return m00 * m11 - m01 * m10\n};\nTriangle.interpolateZ = function interpolateZ (p, v0, v1, v2) {\n  var x0 = v0.x;\n  var y0 = v0.y;\n  var a = v1.x - x0;\n  var b = v2.x - x0;\n  var c = v1.y - y0;\n  var d = v2.y - y0;\n  var det = a * d - b * c;\n  var dx = p.x - x0;\n  var dy = p.y - y0;\n  var t = (d * dx - b * dy) / det;\n  var u = (-c * dx + a * dy) / det;\n  var z = v0.z + t * (v1.z - v0.z) + u * (v2.z - v0.z);\n  return z\n};\nTriangle.longestSideLength = function longestSideLength (a, b, c) {\n  var lenAB = a.distance(b);\n  var lenBC = b.distance(c);\n  var lenCA = c.distance(a);\n  var maxLen = lenAB;\n  if (lenBC > maxLen) { maxLen = lenBC; }\n  if (lenCA > maxLen) { maxLen = lenCA; }\n  return maxLen\n};\nTriangle.isAcute = function isAcute (a, b, c) {\n  if (!Angle.isAcute(a, b, c)) { return false }\n  if (!Angle.isAcute(b, c, a)) { return false }\n  if (!Angle.isAcute(c, a, b)) { return false }\n  return true\n};\nTriangle.circumcentre = function circumcentre (a, b, c) {\n  var cx = c.x;\n  var cy = c.y;\n  var ax = a.x - cx;\n  var ay = a.y - cy;\n  var bx = b.x - cx;\n  var by = b.y - cy;\n  var denom = 2 * Triangle.det(ax, ay, bx, by);\n  var numx = Triangle.det(ay, ax * ax + ay * ay, by, bx * bx + by * by);\n  var numy = Triangle.det(ax, ax * ax + ay * ay, bx, bx * bx + by * by);\n  var ccx = cx - numx / denom;\n  var ccy = cy + numy / denom;\n  return new Coordinate(ccx, ccy)\n};\nTriangle.perpendicularBisector = function perpendicularBisector (a, b) {\n  var dx = b.x - a.x;\n  var dy = b.y - a.y;\n  var l1 = new HCoordinate(a.x + dx / 2.0, a.y + dy / 2.0, 1.0);\n  var l2 = new HCoordinate(a.x - dy + dx / 2.0, a.y + dx + dy / 2.0, 1.0);\n  return new HCoordinate(l1, l2)\n};\nTriangle.angleBisector = function angleBisector (a, b, c) {\n  var len0 = b.distance(a);\n  var len2 = b.distance(c);\n  var frac = len0 / (len0 + len2);\n  var dx = c.x - a.x;\n  var dy = c.y - a.y;\n  var splitPt = new Coordinate(a.x + frac * dx, a.y + frac * dy);\n  return splitPt\n};\nTriangle.area3D = function area3D (a, b, c) {\n  var ux = b.x - a.x;\n  var uy = b.y - a.y;\n  var uz = b.z - a.z;\n  var vx = c.x - a.x;\n  var vy = c.y - a.y;\n  var vz = c.z - a.z;\n  var crossx = uy * vz - uz * vy;\n  var crossy = uz * vx - ux * vz;\n  var crossz = ux * vy - uy * vx;\n  var absSq = crossx * crossx + crossy * crossy + crossz * crossz;\n  var area3D = Math.sqrt(absSq) / 2;\n  return area3D\n};\nTriangle.centroid = function centroid (a, b, c) {\n  var x = (a.x + b.x + c.x) / 3;\n  var y = (a.y + b.y + c.y) / 3;\n  return new Coordinate(x, y)\n};\nTriangle.inCentre = function inCentre (a, b, c) {\n  var len0 = b.distance(c);\n  var len1 = a.distance(c);\n  var len2 = a.distance(b);\n  var circum = len0 + len1 + len2;\n  var inCentreX = (len0 * a.x + len1 * b.x + len2 * c.x) / circum;\n  var inCentreY = (len0 * a.y + len1 * b.y + len2 * c.y) / circum;\n  return new Coordinate(inCentreX, inCentreY)\n};\n\nvar OffsetCurveSetBuilder = function OffsetCurveSetBuilder () {\n  this._inputGeom = null;\n  this._distance = null;\n  this._curveBuilder = null;\n  this._curveList = new ArrayList();\n  var inputGeom = arguments[0];\n  var distance = arguments[1];\n  var curveBuilder = arguments[2];\n  this._inputGeom = inputGeom;\n  this._distance = distance;\n  this._curveBuilder = curveBuilder;\n};\nOffsetCurveSetBuilder.prototype.addPoint = function addPoint (p) {\n  if (this._distance <= 0.0) { return null }\n  var coord = p.getCoordinates();\n  var curve = this._curveBuilder.getLineCurve(coord, this._distance);\n  this.addCurve(curve, Location.EXTERIOR, Location.INTERIOR);\n};\nOffsetCurveSetBuilder.prototype.addPolygon = function addPolygon (p) {\n    var this$1 = this;\n\n  var offsetDistance = this._distance;\n  var offsetSide = Position.LEFT;\n  if (this._distance < 0.0) {\n    offsetDistance = -this._distance;\n    offsetSide = Position.RIGHT;\n  }\n  var shell = p.getExteriorRing();\n  var shellCoord = CoordinateArrays.removeRepeatedPoints(shell.getCoordinates());\n  if (this._distance < 0.0 && this.isErodedCompletely(shell, this._distance)) { return null }\n  if (this._distance <= 0.0 && shellCoord.length < 3) { return null }\n  this.addPolygonRing(shellCoord, offsetDistance, offsetSide, Location.EXTERIOR, Location.INTERIOR);\n  for (var i = 0; i < p.getNumInteriorRing(); i++) {\n    var hole = p.getInteriorRingN(i);\n    var holeCoord = CoordinateArrays.removeRepeatedPoints(hole.getCoordinates());\n    if (this$1._distance > 0.0 && this$1.isErodedCompletely(hole, -this$1._distance)) { continue }\n    this$1.addPolygonRing(holeCoord, offsetDistance, Position.opposite(offsetSide), Location.INTERIOR, Location.EXTERIOR);\n  }\n};\nOffsetCurveSetBuilder.prototype.isTriangleErodedCompletely = function isTriangleErodedCompletely (triangleCoord, bufferDistance) {\n  var tri = new Triangle(triangleCoord[0], triangleCoord[1], triangleCoord[2]);\n  var inCentre = tri.inCentre();\n  var distToCentre = CGAlgorithms.distancePointLine(inCentre, tri.p0, tri.p1);\n  return distToCentre < Math.abs(bufferDistance)\n};\nOffsetCurveSetBuilder.prototype.addLineString = function addLineString (line) {\n  if (this._distance <= 0.0 && !this._curveBuilder.getBufferParameters().isSingleSided()) { return null }\n  var coord = CoordinateArrays.removeRepeatedPoints(line.getCoordinates());\n  var curve = this._curveBuilder.getLineCurve(coord, this._distance);\n  this.addCurve(curve, Location.EXTERIOR, Location.INTERIOR);\n};\nOffsetCurveSetBuilder.prototype.addCurve = function addCurve (coord, leftLoc, rightLoc) {\n  if (coord === null || coord.length < 2) { return null }\n  var e = new NodedSegmentString(coord, new Label(0, Location.BOUNDARY, leftLoc, rightLoc));\n  this._curveList.add(e);\n};\nOffsetCurveSetBuilder.prototype.getCurves = function getCurves () {\n  this.add(this._inputGeom);\n  return this._curveList\n};\nOffsetCurveSetBuilder.prototype.addPolygonRing = function addPolygonRing (coord, offsetDistance, side, cwLeftLoc, cwRightLoc) {\n  if (offsetDistance === 0.0 && coord.length < LinearRing.MINIMUM_VALID_SIZE) { return null }\n  var leftLoc = cwLeftLoc;\n  var rightLoc = cwRightLoc;\n  if (coord.length >= LinearRing.MINIMUM_VALID_SIZE && CGAlgorithms.isCCW(coord)) {\n    leftLoc = cwRightLoc;\n    rightLoc = cwLeftLoc;\n    side = Position.opposite(side);\n  }\n  var curve = this._curveBuilder.getRingCurve(coord, side, offsetDistance);\n  this.addCurve(curve, leftLoc, rightLoc);\n};\nOffsetCurveSetBuilder.prototype.add = function add (g) {\n  if (g.isEmpty()) { return null }\n  if (g instanceof Polygon) { this.addPolygon(g); }\n  else if (g instanceof LineString) { this.addLineString(g); }\n  else if (g instanceof Point) { this.addPoint(g); }\n  else if (g instanceof MultiPoint) { this.addCollection(g); }\n  else if (g instanceof MultiLineString) { this.addCollection(g); }\n  else if (g instanceof MultiPolygon) { this.addCollection(g); }\n  else if (g instanceof GeometryCollection) { this.addCollection(g); }\n  // else throw new UnsupportedOperationException(g.getClass().getName())\n};\nOffsetCurveSetBuilder.prototype.isErodedCompletely = function isErodedCompletely (ring, bufferDistance) {\n  var ringCoord = ring.getCoordinates();\n  // const minDiam = 0.0\n  if (ringCoord.length < 4) { return bufferDistance < 0 }\n  if (ringCoord.length === 4) { return this.isTriangleErodedCompletely(ringCoord, bufferDistance) }\n  var env = ring.getEnvelopeInternal();\n  var envMinDimension = Math.min(env.getHeight(), env.getWidth());\n  if (bufferDistance < 0.0 && 2 * Math.abs(bufferDistance) > envMinDimension) { return true }\n  return false\n};\nOffsetCurveSetBuilder.prototype.addCollection = function addCollection (gc) {\n    var this$1 = this;\n\n  for (var i = 0; i < gc.getNumGeometries(); i++) {\n    var g = gc.getGeometryN(i);\n    this$1.add(g);\n  }\n};\nOffsetCurveSetBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOffsetCurveSetBuilder.prototype.getClass = function getClass () {\n  return OffsetCurveSetBuilder\n};\n\nvar PointOnGeometryLocator = function PointOnGeometryLocator () {};\n\nPointOnGeometryLocator.prototype.locate = function locate (p) {};\nPointOnGeometryLocator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPointOnGeometryLocator.prototype.getClass = function getClass () {\n  return PointOnGeometryLocator\n};\n\nvar GeometryCollectionIterator = function GeometryCollectionIterator () {\n  this._parent = null;\n  this._atStart = null;\n  this._max = null;\n  this._index = null;\n  this._subcollectionIterator = null;\n  var parent = arguments[0];\n  this._parent = parent;\n  this._atStart = true;\n  this._index = 0;\n  this._max = parent.getNumGeometries();\n};\nGeometryCollectionIterator.prototype.next = function next () {\n  if (this._atStart) {\n    this._atStart = false;\n    if (GeometryCollectionIterator.isAtomic(this._parent)) { this._index++; }\n    return this._parent\n  }\n  if (this._subcollectionIterator !== null) {\n    if (this._subcollectionIterator.hasNext()) {\n      return this._subcollectionIterator.next()\n    } else {\n      this._subcollectionIterator = null;\n    }\n  }\n  if (this._index >= this._max) {\n    throw new NoSuchElementException()\n  }\n  var obj = this._parent.getGeometryN(this._index++);\n  if (obj instanceof GeometryCollection) {\n    this._subcollectionIterator = new GeometryCollectionIterator(obj);\n    return this._subcollectionIterator.next()\n  }\n  return obj\n};\nGeometryCollectionIterator.prototype.remove = function remove () {\n  throw new Error(this.getClass().getName())\n};\nGeometryCollectionIterator.prototype.hasNext = function hasNext () {\n  if (this._atStart) {\n    return true\n  }\n  if (this._subcollectionIterator !== null) {\n    if (this._subcollectionIterator.hasNext()) {\n      return true\n    }\n    this._subcollectionIterator = null;\n  }\n  if (this._index >= this._max) {\n    return false\n  }\n  return true\n};\nGeometryCollectionIterator.prototype.interfaces_ = function interfaces_ () {\n  return [Iterator]\n};\nGeometryCollectionIterator.prototype.getClass = function getClass () {\n  return GeometryCollectionIterator\n};\nGeometryCollectionIterator.isAtomic = function isAtomic (geom) {\n  return !(geom instanceof GeometryCollection)\n};\n\nvar SimplePointInAreaLocator = function SimplePointInAreaLocator () {\n  this._geom = null;\n  var geom = arguments[0];\n  this._geom = geom;\n};\nSimplePointInAreaLocator.prototype.locate = function locate (p) {\n  return SimplePointInAreaLocator.locate(p, this._geom)\n};\nSimplePointInAreaLocator.prototype.interfaces_ = function interfaces_ () {\n  return [PointOnGeometryLocator]\n};\nSimplePointInAreaLocator.prototype.getClass = function getClass () {\n  return SimplePointInAreaLocator\n};\nSimplePointInAreaLocator.isPointInRing = function isPointInRing (p, ring) {\n  if (!ring.getEnvelopeInternal().intersects(p)) { return false }\n  return CGAlgorithms.isPointInRing(p, ring.getCoordinates())\n};\nSimplePointInAreaLocator.containsPointInPolygon = function containsPointInPolygon (p, poly) {\n  if (poly.isEmpty()) { return false }\n  var shell = poly.getExteriorRing();\n  if (!SimplePointInAreaLocator.isPointInRing(p, shell)) { return false }\n  for (var i = 0; i < poly.getNumInteriorRing(); i++) {\n    var hole = poly.getInteriorRingN(i);\n    if (SimplePointInAreaLocator.isPointInRing(p, hole)) { return false }\n  }\n  return true\n};\nSimplePointInAreaLocator.containsPoint = function containsPoint (p, geom) {\n  if (geom instanceof Polygon) {\n    return SimplePointInAreaLocator.containsPointInPolygon(p, geom)\n  } else if (geom instanceof GeometryCollection) {\n    var geomi = new GeometryCollectionIterator(geom);\n    while (geomi.hasNext()) {\n      var g2 = geomi.next();\n      if (g2 !== geom) { if (SimplePointInAreaLocator.containsPoint(p, g2)) { return true } }\n    }\n  }\n  return false\n};\nSimplePointInAreaLocator.locate = function locate (p, geom) {\n  if (geom.isEmpty()) { return Location.EXTERIOR }\n  if (SimplePointInAreaLocator.containsPoint(p, geom)) { return Location.INTERIOR }\n  return Location.EXTERIOR\n};\n\nvar EdgeEndStar = function EdgeEndStar () {\n  this._edgeMap = new TreeMap();\n  this._edgeList = null;\n  this._ptInAreaLocation = [Location.NONE, Location.NONE];\n};\nEdgeEndStar.prototype.getNextCW = function getNextCW (ee) {\n  this.getEdges();\n  var i = this._edgeList.indexOf(ee);\n  var iNextCW = i - 1;\n  if (i === 0) { iNextCW = this._edgeList.size() - 1; }\n  return this._edgeList.get(iNextCW)\n};\nEdgeEndStar.prototype.propagateSideLabels = function propagateSideLabels (geomIndex) {\n  var startLoc = Location.NONE;\n  for (var it = this.iterator(); it.hasNext();) {\n    var e = it.next();\n    var label = e.getLabel();\n    if (label.isArea(geomIndex) && label.getLocation(geomIndex, Position.LEFT) !== Location.NONE) { startLoc = label.getLocation(geomIndex, Position.LEFT); }\n  }\n  if (startLoc === Location.NONE) { return null }\n  var currLoc = startLoc;\n  for (var it$1 = this.iterator(); it$1.hasNext();) {\n    var e$1 = it$1.next();\n    var label$1 = e$1.getLabel();\n    if (label$1.getLocation(geomIndex, Position.ON) === Location.NONE) { label$1.setLocation(geomIndex, Position.ON, currLoc); }\n    if (label$1.isArea(geomIndex)) {\n      var leftLoc = label$1.getLocation(geomIndex, Position.LEFT);\n      var rightLoc = label$1.getLocation(geomIndex, Position.RIGHT);\n      if (rightLoc !== Location.NONE) {\n        if (rightLoc !== currLoc) { throw new TopologyException('side location conflict', e$1.getCoordinate()) }\n        if (leftLoc === Location.NONE) {\n          Assert.shouldNeverReachHere('found single null side (at ' + e$1.getCoordinate() + ')');\n        }\n        currLoc = leftLoc;\n      } else {\n        Assert.isTrue(label$1.getLocation(geomIndex, Position.LEFT) === Location.NONE, 'found single null side');\n        label$1.setLocation(geomIndex, Position.RIGHT, currLoc);\n        label$1.setLocation(geomIndex, Position.LEFT, currLoc);\n      }\n    }\n  }\n};\nEdgeEndStar.prototype.getCoordinate = function getCoordinate () {\n  var it = this.iterator();\n  if (!it.hasNext()) { return null }\n  var e = it.next();\n  return e.getCoordinate()\n};\nEdgeEndStar.prototype.print = function print (out) {\n  System.out.println('EdgeEndStar:   ' + this.getCoordinate());\n  for (var it = this.iterator(); it.hasNext();) {\n    var e = it.next();\n    e.print(out);\n  }\n};\nEdgeEndStar.prototype.isAreaLabelsConsistent = function isAreaLabelsConsistent (geomGraph) {\n  this.computeEdgeEndLabels(geomGraph.getBoundaryNodeRule());\n  return this.checkAreaLabelsConsistent(0)\n};\nEdgeEndStar.prototype.checkAreaLabelsConsistent = function checkAreaLabelsConsistent (geomIndex) {\n  var edges = this.getEdges();\n  if (edges.size() <= 0) { return true }\n  var lastEdgeIndex = edges.size() - 1;\n  var startLabel = edges.get(lastEdgeIndex).getLabel();\n  var startLoc = startLabel.getLocation(geomIndex, Position.LEFT);\n  Assert.isTrue(startLoc !== Location.NONE, 'Found unlabelled area edge');\n  var currLoc = startLoc;\n  for (var it = this.iterator(); it.hasNext();) {\n    var e = it.next();\n    var label = e.getLabel();\n    Assert.isTrue(label.isArea(geomIndex), 'Found non-area edge');\n    var leftLoc = label.getLocation(geomIndex, Position.LEFT);\n    var rightLoc = label.getLocation(geomIndex, Position.RIGHT);\n    if (leftLoc === rightLoc) {\n      return false\n    }\n    if (rightLoc !== currLoc) {\n      return false\n    }\n    currLoc = leftLoc;\n  }\n  return true\n};\nEdgeEndStar.prototype.findIndex = function findIndex (eSearch) {\n    var this$1 = this;\n\n  this.iterator();\n  for (var i = 0; i < this._edgeList.size(); i++) {\n    var e = this$1._edgeList.get(i);\n    if (e === eSearch) { return i }\n  }\n  return -1\n};\nEdgeEndStar.prototype.iterator = function iterator () {\n  return this.getEdges().iterator()\n};\nEdgeEndStar.prototype.getEdges = function getEdges () {\n  if (this._edgeList === null) {\n    this._edgeList = new ArrayList(this._edgeMap.values());\n  }\n  return this._edgeList\n};\nEdgeEndStar.prototype.getLocation = function getLocation (geomIndex, p, geom) {\n  if (this._ptInAreaLocation[geomIndex] === Location.NONE) {\n    this._ptInAreaLocation[geomIndex] = SimplePointInAreaLocator.locate(p, geom[geomIndex].getGeometry());\n  }\n  return this._ptInAreaLocation[geomIndex]\n};\nEdgeEndStar.prototype.toString = function toString () {\n  var buf = new StringBuffer();\n  buf.append('EdgeEndStar:   ' + this.getCoordinate());\n  buf.append('\\n');\n  for (var it = this.iterator(); it.hasNext();) {\n    var e = it.next();\n    buf.append(e);\n    buf.append('\\n');\n  }\n  return buf.toString()\n};\nEdgeEndStar.prototype.computeEdgeEndLabels = function computeEdgeEndLabels (boundaryNodeRule) {\n  for (var it = this.iterator(); it.hasNext();) {\n    var ee = it.next();\n    ee.computeLabel(boundaryNodeRule);\n  }\n};\nEdgeEndStar.prototype.computeLabelling = function computeLabelling (geomGraph) {\n    var this$1 = this;\n\n  this.computeEdgeEndLabels(geomGraph[0].getBoundaryNodeRule());\n  this.propagateSideLabels(0);\n  this.propagateSideLabels(1);\n  var hasDimensionalCollapseEdge = [false, false];\n  for (var it = this.iterator(); it.hasNext();) {\n    var e = it.next();\n    var label = e.getLabel();\n    for (var geomi = 0; geomi < 2; geomi++) {\n      if (label.isLine(geomi) && label.getLocation(geomi) === Location.BOUNDARY) { hasDimensionalCollapseEdge[geomi] = true; }\n    }\n  }\n  for (var it$1 = this.iterator(); it$1.hasNext();) {\n    var e$1 = it$1.next();\n    var label$1 = e$1.getLabel();\n    for (var geomi$1 = 0; geomi$1 < 2; geomi$1++) {\n      if (label$1.isAnyNull(geomi$1)) {\n        var loc = Location.NONE;\n        if (hasDimensionalCollapseEdge[geomi$1]) {\n          loc = Location.EXTERIOR;\n        } else {\n          var p = e$1.getCoordinate();\n          loc = this$1.getLocation(geomi$1, p, geomGraph);\n        }\n        label$1.setAllLocationsIfNull(geomi$1, loc);\n      }\n    }\n  }\n};\nEdgeEndStar.prototype.getDegree = function getDegree () {\n  return this._edgeMap.size()\n};\nEdgeEndStar.prototype.insertEdgeEnd = function insertEdgeEnd (e, obj) {\n  this._edgeMap.put(e, obj);\n  this._edgeList = null;\n};\nEdgeEndStar.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nEdgeEndStar.prototype.getClass = function getClass () {\n  return EdgeEndStar\n};\n\nvar DirectedEdgeStar = (function (EdgeEndStar$$1) {\n  function DirectedEdgeStar () {\n    EdgeEndStar$$1.call(this);\n    this._resultAreaEdgeList = null;\n    this._label = null;\n    this._SCANNING_FOR_INCOMING = 1;\n    this._LINKING_TO_OUTGOING = 2;\n  }\n\n  if ( EdgeEndStar$$1 ) DirectedEdgeStar.__proto__ = EdgeEndStar$$1;\n  DirectedEdgeStar.prototype = Object.create( EdgeEndStar$$1 && EdgeEndStar$$1.prototype );\n  DirectedEdgeStar.prototype.constructor = DirectedEdgeStar;\n  DirectedEdgeStar.prototype.linkResultDirectedEdges = function linkResultDirectedEdges () {\n    var this$1 = this;\n\n    this.getResultAreaEdges();\n    var firstOut = null;\n    var incoming = null;\n    var state = this._SCANNING_FOR_INCOMING;\n    for (var i = 0; i < this._resultAreaEdgeList.size(); i++) {\n      var nextOut = this$1._resultAreaEdgeList.get(i);\n      var nextIn = nextOut.getSym();\n      if (!nextOut.getLabel().isArea()) { continue }\n      if (firstOut === null && nextOut.isInResult()) { firstOut = nextOut; }\n      switch (state) {\n        case this$1._SCANNING_FOR_INCOMING:\n          if (!nextIn.isInResult()) { continue }\n          incoming = nextIn;\n          state = this$1._LINKING_TO_OUTGOING;\n          break\n        case this$1._LINKING_TO_OUTGOING:\n          if (!nextOut.isInResult()) { continue }\n          incoming.setNext(nextOut);\n          state = this$1._SCANNING_FOR_INCOMING;\n          break\n        default:\n      }\n    }\n    if (state === this._LINKING_TO_OUTGOING) {\n      if (firstOut === null) { throw new TopologyException('no outgoing dirEdge found', this.getCoordinate()) }\n      Assert.isTrue(firstOut.isInResult(), 'unable to link last incoming dirEdge');\n      incoming.setNext(firstOut);\n    }\n  };\n  DirectedEdgeStar.prototype.insert = function insert (ee) {\n    var de = ee;\n    this.insertEdgeEnd(de, de);\n  };\n  DirectedEdgeStar.prototype.getRightmostEdge = function getRightmostEdge () {\n    var edges = this.getEdges();\n    var size = edges.size();\n    if (size < 1) { return null }\n    var de0 = edges.get(0);\n    if (size === 1) { return de0 }\n    var deLast = edges.get(size - 1);\n    var quad0 = de0.getQuadrant();\n    var quad1 = deLast.getQuadrant();\n    if (Quadrant.isNorthern(quad0) && Quadrant.isNorthern(quad1)) { return de0; } else if (!Quadrant.isNorthern(quad0) && !Quadrant.isNorthern(quad1)) { return deLast; } else {\n      // const nonHorizontalEdge = null\n      if (de0.getDy() !== 0) { return de0; } else if (deLast.getDy() !== 0) { return deLast }\n    }\n    Assert.shouldNeverReachHere('found two horizontal edges incident on node');\n    return null\n  };\n  DirectedEdgeStar.prototype.print = function print (out) {\n    System.out.println('DirectedEdgeStar: ' + this.getCoordinate());\n    for (var it = this.iterator(); it.hasNext();) {\n      var de = it.next();\n      out.print('out ');\n      de.print(out);\n      out.println();\n      out.print('in ');\n      de.getSym().print(out);\n      out.println();\n    }\n  };\n  DirectedEdgeStar.prototype.getResultAreaEdges = function getResultAreaEdges () {\n    var this$1 = this;\n\n    if (this._resultAreaEdgeList !== null) { return this._resultAreaEdgeList }\n    this._resultAreaEdgeList = new ArrayList();\n    for (var it = this.iterator(); it.hasNext();) {\n      var de = it.next();\n      if (de.isInResult() || de.getSym().isInResult()) { this$1._resultAreaEdgeList.add(de); }\n    }\n    return this._resultAreaEdgeList\n  };\n  DirectedEdgeStar.prototype.updateLabelling = function updateLabelling (nodeLabel) {\n    for (var it = this.iterator(); it.hasNext();) {\n      var de = it.next();\n      var label = de.getLabel();\n      label.setAllLocationsIfNull(0, nodeLabel.getLocation(0));\n      label.setAllLocationsIfNull(1, nodeLabel.getLocation(1));\n    }\n  };\n  DirectedEdgeStar.prototype.linkAllDirectedEdges = function linkAllDirectedEdges () {\n    var this$1 = this;\n\n    this.getEdges();\n    var prevOut = null;\n    var firstIn = null;\n    for (var i = this._edgeList.size() - 1; i >= 0; i--) {\n      var nextOut = this$1._edgeList.get(i);\n      var nextIn = nextOut.getSym();\n      if (firstIn === null) { firstIn = nextIn; }\n      if (prevOut !== null) { nextIn.setNext(prevOut); }\n      prevOut = nextOut;\n    }\n    firstIn.setNext(prevOut);\n  };\n  DirectedEdgeStar.prototype.computeDepths = function computeDepths () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var de = arguments[0];\n      var edgeIndex = this.findIndex(de);\n      // const label = de.getLabel()\n      var startDepth = de.getDepth(Position.LEFT);\n      var targetLastDepth = de.getDepth(Position.RIGHT);\n      var nextDepth = this.computeDepths(edgeIndex + 1, this._edgeList.size(), startDepth);\n      var lastDepth = this.computeDepths(0, edgeIndex, nextDepth);\n      if (lastDepth !== targetLastDepth) { throw new TopologyException('depth mismatch at ' + de.getCoordinate()) }\n    } else if (arguments.length === 3) {\n      var startIndex = arguments[0];\n      var endIndex = arguments[1];\n      var startDepth$1 = arguments[2];\n      var currDepth = startDepth$1;\n      for (var i = startIndex; i < endIndex; i++) {\n        var nextDe = this$1._edgeList.get(i);\n        // const label = nextDe.getLabel()\n        nextDe.setEdgeDepths(Position.RIGHT, currDepth);\n        currDepth = nextDe.getDepth(Position.LEFT);\n      }\n      return currDepth\n    }\n  };\n  DirectedEdgeStar.prototype.mergeSymLabels = function mergeSymLabels () {\n    for (var it = this.iterator(); it.hasNext();) {\n      var de = it.next();\n      var label = de.getLabel();\n      label.merge(de.getSym().getLabel());\n    }\n  };\n  DirectedEdgeStar.prototype.linkMinimalDirectedEdges = function linkMinimalDirectedEdges (er) {\n    var this$1 = this;\n\n    var firstOut = null;\n    var incoming = null;\n    var state = this._SCANNING_FOR_INCOMING;\n    for (var i = this._resultAreaEdgeList.size() - 1; i >= 0; i--) {\n      var nextOut = this$1._resultAreaEdgeList.get(i);\n      var nextIn = nextOut.getSym();\n      if (firstOut === null && nextOut.getEdgeRing() === er) { firstOut = nextOut; }\n      switch (state) {\n        case this$1._SCANNING_FOR_INCOMING:\n          if (nextIn.getEdgeRing() !== er) { continue }\n          incoming = nextIn;\n          state = this$1._LINKING_TO_OUTGOING;\n          break\n        case this$1._LINKING_TO_OUTGOING:\n          if (nextOut.getEdgeRing() !== er) { continue }\n          incoming.setNextMin(nextOut);\n          state = this$1._SCANNING_FOR_INCOMING;\n          break\n        default:\n      }\n    }\n    if (state === this._LINKING_TO_OUTGOING) {\n      Assert.isTrue(firstOut !== null, 'found null for first outgoing dirEdge');\n      Assert.isTrue(firstOut.getEdgeRing() === er, 'unable to link last incoming dirEdge');\n      incoming.setNextMin(firstOut);\n    }\n  };\n  DirectedEdgeStar.prototype.getOutgoingDegree = function getOutgoingDegree () {\n    if (arguments.length === 0) {\n      var degree = 0;\n      for (var it = this.iterator(); it.hasNext();) {\n        var de = it.next();\n        if (de.isInResult()) { degree++; }\n      }\n      return degree\n    } else if (arguments.length === 1) {\n      var er = arguments[0];\n      var degree$1 = 0;\n      for (var it$1 = this.iterator(); it$1.hasNext();) {\n        var de$1 = it$1.next();\n        if (de$1.getEdgeRing() === er) { degree$1++; }\n      }\n      return degree$1\n    }\n  };\n  DirectedEdgeStar.prototype.getLabel = function getLabel () {\n    return this._label\n  };\n  DirectedEdgeStar.prototype.findCoveredLineEdges = function findCoveredLineEdges () {\n    var startLoc = Location.NONE;\n    for (var it = this.iterator(); it.hasNext();) {\n      var nextOut = it.next();\n      var nextIn = nextOut.getSym();\n      if (!nextOut.isLineEdge()) {\n        if (nextOut.isInResult()) {\n          startLoc = Location.INTERIOR;\n          break\n        }\n        if (nextIn.isInResult()) {\n          startLoc = Location.EXTERIOR;\n          break\n        }\n      }\n    }\n    if (startLoc === Location.NONE) { return null }\n    var currLoc = startLoc;\n    for (var it$1 = this.iterator(); it$1.hasNext();) {\n      var nextOut$1 = it$1.next();\n      var nextIn$1 = nextOut$1.getSym();\n      if (nextOut$1.isLineEdge()) {\n        nextOut$1.getEdge().setCovered(currLoc === Location.INTERIOR);\n      } else {\n        if (nextOut$1.isInResult()) { currLoc = Location.EXTERIOR; }\n        if (nextIn$1.isInResult()) { currLoc = Location.INTERIOR; }\n      }\n    }\n  };\n  DirectedEdgeStar.prototype.computeLabelling = function computeLabelling (geom) {\n    var this$1 = this;\n\n    EdgeEndStar$$1.prototype.computeLabelling.call(this, geom);\n    this._label = new Label(Location.NONE);\n    for (var it = this.iterator(); it.hasNext();) {\n      var ee = it.next();\n      var e = ee.getEdge();\n      var eLabel = e.getLabel();\n      for (var i = 0; i < 2; i++) {\n        var eLoc = eLabel.getLocation(i);\n        if (eLoc === Location.INTERIOR || eLoc === Location.BOUNDARY) { this$1._label.setLocation(i, Location.INTERIOR); }\n      }\n    }\n  };\n  DirectedEdgeStar.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  DirectedEdgeStar.prototype.getClass = function getClass () {\n    return DirectedEdgeStar\n  };\n\n  return DirectedEdgeStar;\n}(EdgeEndStar));\n\nvar OverlayNodeFactory = (function (NodeFactory$$1) {\n  function OverlayNodeFactory () {\n    NodeFactory$$1.apply(this, arguments);\n  }\n\n  if ( NodeFactory$$1 ) OverlayNodeFactory.__proto__ = NodeFactory$$1;\n  OverlayNodeFactory.prototype = Object.create( NodeFactory$$1 && NodeFactory$$1.prototype );\n  OverlayNodeFactory.prototype.constructor = OverlayNodeFactory;\n\n  OverlayNodeFactory.prototype.createNode = function createNode (coord) {\n    return new Node(coord, new DirectedEdgeStar())\n  };\n  OverlayNodeFactory.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  OverlayNodeFactory.prototype.getClass = function getClass () {\n    return OverlayNodeFactory\n  };\n\n  return OverlayNodeFactory;\n}(NodeFactory));\n\nvar OrientedCoordinateArray = function OrientedCoordinateArray () {\n  this._pts = null;\n  this._orientation = null;\n  var pts = arguments[0];\n  this._pts = pts;\n  this._orientation = OrientedCoordinateArray.orientation(pts);\n};\nOrientedCoordinateArray.prototype.compareTo = function compareTo (o1) {\n  var oca = o1;\n  var comp = OrientedCoordinateArray.compareOriented(this._pts, this._orientation, oca._pts, oca._orientation);\n  return comp\n};\nOrientedCoordinateArray.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nOrientedCoordinateArray.prototype.getClass = function getClass () {\n  return OrientedCoordinateArray\n};\nOrientedCoordinateArray.orientation = function orientation (pts) {\n  return CoordinateArrays.increasingDirection(pts) === 1\n};\nOrientedCoordinateArray.compareOriented = function compareOriented (pts1, orientation1, pts2, orientation2) {\n  var dir1 = orientation1 ? 1 : -1;\n  var dir2 = orientation2 ? 1 : -1;\n  var limit1 = orientation1 ? pts1.length : -1;\n  var limit2 = orientation2 ? pts2.length : -1;\n  var i1 = orientation1 ? 0 : pts1.length - 1;\n  var i2 = orientation2 ? 0 : pts2.length - 1;\n  // const comp = 0\n  while (true) {\n    var compPt = pts1[i1].compareTo(pts2[i2]);\n    if (compPt !== 0) { return compPt }\n    i1 += dir1;\n    i2 += dir2;\n    var done1 = i1 === limit1;\n    var done2 = i2 === limit2;\n    if (done1 && !done2) { return -1 }\n    if (!done1 && done2) { return 1 }\n    if (done1 && done2) { return 0 }\n  }\n};\n\nvar EdgeList = function EdgeList () {\n  this._edges = new ArrayList();\n  this._ocaMap = new TreeMap();\n};\nEdgeList.prototype.print = function print (out) {\n    var this$1 = this;\n\n  out.print('MULTILINESTRING ( ');\n  for (var j = 0; j < this._edges.size(); j++) {\n    var e = this$1._edges.get(j);\n    if (j > 0) { out.print(','); }\n    out.print('(');\n    var pts = e.getCoordinates();\n    for (var i = 0; i < pts.length; i++) {\n      if (i > 0) { out.print(','); }\n      out.print(pts[i].x + ' ' + pts[i].y);\n    }\n    out.println(')');\n  }\n  out.print(')  ');\n};\nEdgeList.prototype.addAll = function addAll (edgeColl) {\n    var this$1 = this;\n\n  for (var i = edgeColl.iterator(); i.hasNext();) {\n    this$1.add(i.next());\n  }\n};\nEdgeList.prototype.findEdgeIndex = function findEdgeIndex (e) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._edges.size(); i++) {\n    if (this$1._edges.get(i).equals(e)) { return i }\n  }\n  return -1\n};\nEdgeList.prototype.iterator = function iterator () {\n  return this._edges.iterator()\n};\nEdgeList.prototype.getEdges = function getEdges () {\n  return this._edges\n};\nEdgeList.prototype.get = function get (i) {\n  return this._edges.get(i)\n};\nEdgeList.prototype.findEqualEdge = function findEqualEdge (e) {\n  var oca = new OrientedCoordinateArray(e.getCoordinates());\n  var matchEdge = this._ocaMap.get(oca);\n  return matchEdge\n};\nEdgeList.prototype.add = function add (e) {\n  this._edges.add(e);\n  var oca = new OrientedCoordinateArray(e.getCoordinates());\n  this._ocaMap.put(oca, e);\n};\nEdgeList.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nEdgeList.prototype.getClass = function getClass () {\n  return EdgeList\n};\n\nvar SegmentIntersector = function SegmentIntersector () {};\n\nSegmentIntersector.prototype.processIntersections = function processIntersections (e0, segIndex0, e1, segIndex1) {};\nSegmentIntersector.prototype.isDone = function isDone () {};\nSegmentIntersector.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSegmentIntersector.prototype.getClass = function getClass () {\n  return SegmentIntersector\n};\n\nvar IntersectionAdder = function IntersectionAdder () {\n  this._hasIntersection = false;\n  this._hasProper = false;\n  this._hasProperInterior = false;\n  this._hasInterior = false;\n  this._properIntersectionPoint = null;\n  this._li = null;\n  this._isSelfIntersection = null;\n  this.numIntersections = 0;\n  this.numInteriorIntersections = 0;\n  this.numProperIntersections = 0;\n  this.numTests = 0;\n  var li = arguments[0];\n  this._li = li;\n};\nIntersectionAdder.prototype.isTrivialIntersection = function isTrivialIntersection (e0, segIndex0, e1, segIndex1) {\n  if (e0 === e1) {\n    if (this._li.getIntersectionNum() === 1) {\n      if (IntersectionAdder.isAdjacentSegments(segIndex0, segIndex1)) { return true }\n      if (e0.isClosed()) {\n        var maxSegIndex = e0.size() - 1;\n        if ((segIndex0 === 0 && segIndex1 === maxSegIndex) ||\n            (segIndex1 === 0 && segIndex0 === maxSegIndex)) {\n          return true\n        }\n      }\n    }\n  }\n  return false\n};\nIntersectionAdder.prototype.getProperIntersectionPoint = function getProperIntersectionPoint () {\n  return this._properIntersectionPoint\n};\nIntersectionAdder.prototype.hasProperInteriorIntersection = function hasProperInteriorIntersection () {\n  return this._hasProperInterior\n};\nIntersectionAdder.prototype.getLineIntersector = function getLineIntersector () {\n  return this._li\n};\nIntersectionAdder.prototype.hasProperIntersection = function hasProperIntersection () {\n  return this._hasProper\n};\nIntersectionAdder.prototype.processIntersections = function processIntersections (e0, segIndex0, e1, segIndex1) {\n  if (e0 === e1 && segIndex0 === segIndex1) { return null }\n  this.numTests++;\n  var p00 = e0.getCoordinates()[segIndex0];\n  var p01 = e0.getCoordinates()[segIndex0 + 1];\n  var p10 = e1.getCoordinates()[segIndex1];\n  var p11 = e1.getCoordinates()[segIndex1 + 1];\n  this._li.computeIntersection(p00, p01, p10, p11);\n  if (this._li.hasIntersection()) {\n    this.numIntersections++;\n    if (this._li.isInteriorIntersection()) {\n      this.numInteriorIntersections++;\n      this._hasInterior = true;\n    }\n    if (!this.isTrivialIntersection(e0, segIndex0, e1, segIndex1)) {\n      this._hasIntersection = true;\n      e0.addIntersections(this._li, segIndex0, 0);\n      e1.addIntersections(this._li, segIndex1, 1);\n      if (this._li.isProper()) {\n        this.numProperIntersections++;\n        this._hasProper = true;\n        this._hasProperInterior = true;\n      }\n    }\n  }\n};\nIntersectionAdder.prototype.hasIntersection = function hasIntersection () {\n  return this._hasIntersection\n};\nIntersectionAdder.prototype.isDone = function isDone () {\n  return false\n};\nIntersectionAdder.prototype.hasInteriorIntersection = function hasInteriorIntersection () {\n  return this._hasInterior\n};\nIntersectionAdder.prototype.interfaces_ = function interfaces_ () {\n  return [SegmentIntersector]\n};\nIntersectionAdder.prototype.getClass = function getClass () {\n  return IntersectionAdder\n};\nIntersectionAdder.isAdjacentSegments = function isAdjacentSegments (i1, i2) {\n  return Math.abs(i1 - i2) === 1\n};\n\nvar EdgeIntersection = function EdgeIntersection () {\n  this.coord = null;\n  this.segmentIndex = null;\n  this.dist = null;\n  var coord = arguments[0];\n  var segmentIndex = arguments[1];\n  var dist = arguments[2];\n  this.coord = new Coordinate(coord);\n  this.segmentIndex = segmentIndex;\n  this.dist = dist;\n};\nEdgeIntersection.prototype.getSegmentIndex = function getSegmentIndex () {\n  return this.segmentIndex\n};\nEdgeIntersection.prototype.getCoordinate = function getCoordinate () {\n  return this.coord\n};\nEdgeIntersection.prototype.print = function print (out) {\n  out.print(this.coord);\n  out.print(' seg # = ' + this.segmentIndex);\n  out.println(' dist = ' + this.dist);\n};\nEdgeIntersection.prototype.compareTo = function compareTo (obj) {\n  var other = obj;\n  return this.compare(other.segmentIndex, other.dist)\n};\nEdgeIntersection.prototype.isEndPoint = function isEndPoint (maxSegmentIndex) {\n  if (this.segmentIndex === 0 && this.dist === 0.0) { return true }\n  if (this.segmentIndex === maxSegmentIndex) { return true }\n  return false\n};\nEdgeIntersection.prototype.toString = function toString () {\n  return this.coord + ' seg # = ' + this.segmentIndex + ' dist = ' + this.dist\n};\nEdgeIntersection.prototype.getDistance = function getDistance () {\n  return this.dist\n};\nEdgeIntersection.prototype.compare = function compare (segmentIndex, dist) {\n  if (this.segmentIndex < segmentIndex) { return -1 }\n  if (this.segmentIndex > segmentIndex) { return 1 }\n  if (this.dist < dist) { return -1 }\n  if (this.dist > dist) { return 1 }\n  return 0\n};\nEdgeIntersection.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nEdgeIntersection.prototype.getClass = function getClass () {\n  return EdgeIntersection\n};\n\nvar EdgeIntersectionList = function EdgeIntersectionList () {\n  this._nodeMap = new TreeMap();\n  this.edge = null;\n  var edge = arguments[0];\n  this.edge = edge;\n};\nEdgeIntersectionList.prototype.print = function print (out) {\n  out.println('Intersections:');\n  for (var it = this.iterator(); it.hasNext();) {\n    var ei = it.next();\n    ei.print(out);\n  }\n};\nEdgeIntersectionList.prototype.iterator = function iterator () {\n  return this._nodeMap.values().iterator()\n};\nEdgeIntersectionList.prototype.addSplitEdges = function addSplitEdges (edgeList) {\n    var this$1 = this;\n\n  this.addEndpoints();\n  var it = this.iterator();\n  var eiPrev = it.next();\n  while (it.hasNext()) {\n    var ei = it.next();\n    var newEdge = this$1.createSplitEdge(eiPrev, ei);\n    edgeList.add(newEdge);\n    eiPrev = ei;\n  }\n};\nEdgeIntersectionList.prototype.addEndpoints = function addEndpoints () {\n  var maxSegIndex = this.edge.pts.length - 1;\n  this.add(this.edge.pts[0], 0, 0.0);\n  this.add(this.edge.pts[maxSegIndex], maxSegIndex, 0.0);\n};\nEdgeIntersectionList.prototype.createSplitEdge = function createSplitEdge (ei0, ei1) {\n    var this$1 = this;\n\n  var npts = ei1.segmentIndex - ei0.segmentIndex + 2;\n  var lastSegStartPt = this.edge.pts[ei1.segmentIndex];\n  var useIntPt1 = ei1.dist > 0.0 || !ei1.coord.equals2D(lastSegStartPt);\n  if (!useIntPt1) {\n    npts--;\n  }\n  var pts = new Array(npts).fill(null);\n  var ipt = 0;\n  pts[ipt++] = new Coordinate(ei0.coord);\n  for (var i = ei0.segmentIndex + 1; i <= ei1.segmentIndex; i++) {\n    pts[ipt++] = this$1.edge.pts[i];\n  }\n  if (useIntPt1) { pts[ipt] = ei1.coord; }\n  return new Edge(pts, new Label(this.edge._label))\n};\nEdgeIntersectionList.prototype.add = function add (intPt, segmentIndex, dist) {\n  var eiNew = new EdgeIntersection(intPt, segmentIndex, dist);\n  var ei = this._nodeMap.get(eiNew);\n  if (ei !== null) {\n    return ei\n  }\n  this._nodeMap.put(eiNew, eiNew);\n  return eiNew\n};\nEdgeIntersectionList.prototype.isIntersection = function isIntersection (pt) {\n  for (var it = this.iterator(); it.hasNext();) {\n    var ei = it.next();\n    if (ei.coord.equals(pt)) { return true }\n  }\n  return false\n};\nEdgeIntersectionList.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nEdgeIntersectionList.prototype.getClass = function getClass () {\n  return EdgeIntersectionList\n};\n\nvar MonotoneChainIndexer = function MonotoneChainIndexer () {};\n\nMonotoneChainIndexer.prototype.getChainStartIndices = function getChainStartIndices (pts) {\n    var this$1 = this;\n\n  var start = 0;\n  var startIndexList = new ArrayList();\n  startIndexList.add(new Integer(start));\n  do {\n    var last = this$1.findChainEnd(pts, start);\n    startIndexList.add(new Integer(last));\n    start = last;\n  } while (start < pts.length - 1)\n  var startIndex = MonotoneChainIndexer.toIntArray(startIndexList);\n  return startIndex\n};\nMonotoneChainIndexer.prototype.findChainEnd = function findChainEnd (pts, start) {\n  var chainQuad = Quadrant.quadrant(pts[start], pts[start + 1]);\n  var last = start + 1;\n  while (last < pts.length) {\n    var quad = Quadrant.quadrant(pts[last - 1], pts[last]);\n    if (quad !== chainQuad) { break }\n    last++;\n  }\n  return last - 1\n};\nMonotoneChainIndexer.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChainIndexer.prototype.getClass = function getClass () {\n  return MonotoneChainIndexer\n};\nMonotoneChainIndexer.toIntArray = function toIntArray (list) {\n  var array = new Array(list.size()).fill(null);\n  for (var i = 0; i < array.length; i++) {\n    array[i] = list.get(i).intValue();\n  }\n  return array\n};\n\nvar MonotoneChainEdge = function MonotoneChainEdge () {\n  this.e = null;\n  this.pts = null;\n  this.startIndex = null;\n  this.env1 = new Envelope();\n  this.env2 = new Envelope();\n  var e = arguments[0];\n  this.e = e;\n  this.pts = e.getCoordinates();\n  var mcb = new MonotoneChainIndexer();\n  this.startIndex = mcb.getChainStartIndices(this.pts);\n};\nMonotoneChainEdge.prototype.getCoordinates = function getCoordinates () {\n  return this.pts\n};\nMonotoneChainEdge.prototype.getMaxX = function getMaxX (chainIndex) {\n  var x1 = this.pts[this.startIndex[chainIndex]].x;\n  var x2 = this.pts[this.startIndex[chainIndex + 1]].x;\n  return x1 > x2 ? x1 : x2\n};\nMonotoneChainEdge.prototype.getMinX = function getMinX (chainIndex) {\n  var x1 = this.pts[this.startIndex[chainIndex]].x;\n  var x2 = this.pts[this.startIndex[chainIndex + 1]].x;\n  return x1 < x2 ? x1 : x2\n};\nMonotoneChainEdge.prototype.computeIntersectsForChain = function computeIntersectsForChain () {\n  if (arguments.length === 4) {\n    var chainIndex0 = arguments[0];\n    var mce = arguments[1];\n    var chainIndex1 = arguments[2];\n    var si = arguments[3];\n    this.computeIntersectsForChain(this.startIndex[chainIndex0], this.startIndex[chainIndex0 + 1], mce, mce.startIndex[chainIndex1], mce.startIndex[chainIndex1 + 1], si);\n  } else if (arguments.length === 6) {\n    var start0 = arguments[0];\n    var end0 = arguments[1];\n    var mce$1 = arguments[2];\n    var start1 = arguments[3];\n    var end1 = arguments[4];\n    var ei = arguments[5];\n    var p00 = this.pts[start0];\n    var p01 = this.pts[end0];\n    var p10 = mce$1.pts[start1];\n    var p11 = mce$1.pts[end1];\n    if (end0 - start0 === 1 && end1 - start1 === 1) {\n      ei.addIntersections(this.e, start0, mce$1.e, start1);\n      return null\n    }\n    this.env1.init(p00, p01);\n    this.env2.init(p10, p11);\n    if (!this.env1.intersects(this.env2)) { return null }\n    var mid0 = Math.trunc((start0 + end0) / 2);\n    var mid1 = Math.trunc((start1 + end1) / 2);\n    if (start0 < mid0) {\n      if (start1 < mid1) { this.computeIntersectsForChain(start0, mid0, mce$1, start1, mid1, ei); }\n      if (mid1 < end1) { this.computeIntersectsForChain(start0, mid0, mce$1, mid1, end1, ei); }\n    }\n    if (mid0 < end0) {\n      if (start1 < mid1) { this.computeIntersectsForChain(mid0, end0, mce$1, start1, mid1, ei); }\n      if (mid1 < end1) { this.computeIntersectsForChain(mid0, end0, mce$1, mid1, end1, ei); }\n    }\n  }\n};\nMonotoneChainEdge.prototype.getStartIndexes = function getStartIndexes () {\n  return this.startIndex\n};\nMonotoneChainEdge.prototype.computeIntersects = function computeIntersects (mce, si) {\n    var this$1 = this;\n\n  for (var i = 0; i < this.startIndex.length - 1; i++) {\n    for (var j = 0; j < mce.startIndex.length - 1; j++) {\n      this$1.computeIntersectsForChain(i, mce, j, si);\n    }\n  }\n};\nMonotoneChainEdge.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChainEdge.prototype.getClass = function getClass () {\n  return MonotoneChainEdge\n};\n\nvar Depth = function Depth () {\n  var this$1 = this;\n\n  this._depth = Array(2).fill().map(function () { return Array(3); });\n  for (var i = 0; i < 2; i++) {\n    for (var j = 0; j < 3; j++) {\n      this$1._depth[i][j] = Depth.NULL_VALUE;\n    }\n  }\n};\n\nvar staticAccessors$31 = { NULL_VALUE: { configurable: true } };\nDepth.prototype.getDepth = function getDepth (geomIndex, posIndex) {\n  return this._depth[geomIndex][posIndex]\n};\nDepth.prototype.setDepth = function setDepth (geomIndex, posIndex, depthValue) {\n  this._depth[geomIndex][posIndex] = depthValue;\n};\nDepth.prototype.isNull = function isNull () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    for (var i = 0; i < 2; i++) {\n      for (var j = 0; j < 3; j++) {\n        if (this$1._depth[i][j] !== Depth.NULL_VALUE) { return false }\n      }\n    }\n    return true\n  } else if (arguments.length === 1) {\n    var geomIndex = arguments[0];\n    return this._depth[geomIndex][1] === Depth.NULL_VALUE\n  } else if (arguments.length === 2) {\n    var geomIndex$1 = arguments[0];\n    var posIndex = arguments[1];\n    return this._depth[geomIndex$1][posIndex] === Depth.NULL_VALUE\n  }\n};\nDepth.prototype.normalize = function normalize () {\n    var this$1 = this;\n\n  for (var i = 0; i < 2; i++) {\n    if (!this$1.isNull(i)) {\n      var minDepth = this$1._depth[i][1];\n      if (this$1._depth[i][2] < minDepth) { minDepth = this$1._depth[i][2]; }\n      if (minDepth < 0) { minDepth = 0; }\n      for (var j = 1; j < 3; j++) {\n        var newValue = 0;\n        if (this$1._depth[i][j] > minDepth) { newValue = 1; }\n        this$1._depth[i][j] = newValue;\n      }\n    }\n  }\n};\nDepth.prototype.getDelta = function getDelta (geomIndex) {\n  return this._depth[geomIndex][Position.RIGHT] - this._depth[geomIndex][Position.LEFT]\n};\nDepth.prototype.getLocation = function getLocation (geomIndex, posIndex) {\n  if (this._depth[geomIndex][posIndex] <= 0) { return Location.EXTERIOR }\n  return Location.INTERIOR\n};\nDepth.prototype.toString = function toString () {\n  return 'A: ' + this._depth[0][1] + ',' + this._depth[0][2] + ' B: ' + this._depth[1][1] + ',' + this._depth[1][2]\n};\nDepth.prototype.add = function add () {\n    var this$1 = this;\n\n  if (arguments.length === 1) {\n    var lbl = arguments[0];\n    for (var i = 0; i < 2; i++) {\n      for (var j = 1; j < 3; j++) {\n        var loc = lbl.getLocation(i, j);\n        if (loc === Location.EXTERIOR || loc === Location.INTERIOR) {\n          if (this$1.isNull(i, j)) {\n            this$1._depth[i][j] = Depth.depthAtLocation(loc);\n          } else { this$1._depth[i][j] += Depth.depthAtLocation(loc); }\n        }\n      }\n    }\n  } else if (arguments.length === 3) {\n    var geomIndex = arguments[0];\n    var posIndex = arguments[1];\n    var location = arguments[2];\n    if (location === Location.INTERIOR) { this._depth[geomIndex][posIndex]++; }\n  }\n};\nDepth.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nDepth.prototype.getClass = function getClass () {\n  return Depth\n};\nDepth.depthAtLocation = function depthAtLocation (location) {\n  if (location === Location.EXTERIOR) { return 0 }\n  if (location === Location.INTERIOR) { return 1 }\n  return Depth.NULL_VALUE\n};\nstaticAccessors$31.NULL_VALUE.get = function () { return -1 };\n\nObject.defineProperties( Depth, staticAccessors$31 );\n\nvar Edge = (function (GraphComponent$$1) {\n  function Edge () {\n    GraphComponent$$1.call(this);\n    this.pts = null;\n    this._env = null;\n    this.eiList = new EdgeIntersectionList(this);\n    this._name = null;\n    this._mce = null;\n    this._isIsolated = true;\n    this._depth = new Depth();\n    this._depthDelta = 0;\n    if (arguments.length === 1) {\n      var pts = arguments[0];\n      Edge.call(this, pts, null);\n    } else if (arguments.length === 2) {\n      var pts$1 = arguments[0];\n      var label = arguments[1];\n      this.pts = pts$1;\n      this._label = label;\n    }\n  }\n\n  if ( GraphComponent$$1 ) Edge.__proto__ = GraphComponent$$1;\n  Edge.prototype = Object.create( GraphComponent$$1 && GraphComponent$$1.prototype );\n  Edge.prototype.constructor = Edge;\n  Edge.prototype.getDepth = function getDepth () {\n    return this._depth\n  };\n  Edge.prototype.getCollapsedEdge = function getCollapsedEdge () {\n    var newPts = new Array(2).fill(null);\n    newPts[0] = this.pts[0];\n    newPts[1] = this.pts[1];\n    var newe = new Edge(newPts, Label.toLineLabel(this._label));\n    return newe\n  };\n  Edge.prototype.isIsolated = function isIsolated () {\n    return this._isIsolated\n  };\n  Edge.prototype.getCoordinates = function getCoordinates () {\n    return this.pts\n  };\n  Edge.prototype.setIsolated = function setIsolated (isIsolated) {\n    this._isIsolated = isIsolated;\n  };\n  Edge.prototype.setName = function setName (name) {\n    this._name = name;\n  };\n  Edge.prototype.equals = function equals (o) {\n    var this$1 = this;\n\n    if (!(o instanceof Edge)) { return false }\n    var e = o;\n    if (this.pts.length !== e.pts.length) { return false }\n    var isEqualForward = true;\n    var isEqualReverse = true;\n    var iRev = this.pts.length;\n    for (var i = 0; i < this.pts.length; i++) {\n      if (!this$1.pts[i].equals2D(e.pts[i])) {\n        isEqualForward = false;\n      }\n      if (!this$1.pts[i].equals2D(e.pts[--iRev])) {\n        isEqualReverse = false;\n      }\n      if (!isEqualForward && !isEqualReverse) { return false }\n    }\n    return true\n  };\n  Edge.prototype.getCoordinate = function getCoordinate () {\n    if (arguments.length === 0) {\n      if (this.pts.length > 0) { return this.pts[0] }\n      return null\n    } else if (arguments.length === 1) {\n      var i = arguments[0];\n      return this.pts[i]\n    }\n  };\n  Edge.prototype.print = function print (out) {\n    var this$1 = this;\n\n    out.print('edge ' + this._name + ': ');\n    out.print('LINESTRING (');\n    for (var i = 0; i < this.pts.length; i++) {\n      if (i > 0) { out.print(','); }\n      out.print(this$1.pts[i].x + ' ' + this$1.pts[i].y);\n    }\n    out.print(')  ' + this._label + ' ' + this._depthDelta);\n  };\n  Edge.prototype.computeIM = function computeIM (im) {\n    Edge.updateIM(this._label, im);\n  };\n  Edge.prototype.isCollapsed = function isCollapsed () {\n    if (!this._label.isArea()) { return false }\n    if (this.pts.length !== 3) { return false }\n    if (this.pts[0].equals(this.pts[2])) { return true }\n    return false\n  };\n  Edge.prototype.isClosed = function isClosed () {\n    return this.pts[0].equals(this.pts[this.pts.length - 1])\n  };\n  Edge.prototype.getMaximumSegmentIndex = function getMaximumSegmentIndex () {\n    return this.pts.length - 1\n  };\n  Edge.prototype.getDepthDelta = function getDepthDelta () {\n    return this._depthDelta\n  };\n  Edge.prototype.getNumPoints = function getNumPoints () {\n    return this.pts.length\n  };\n  Edge.prototype.printReverse = function printReverse (out) {\n    var this$1 = this;\n\n    out.print('edge ' + this._name + ': ');\n    for (var i = this.pts.length - 1; i >= 0; i--) {\n      out.print(this$1.pts[i] + ' ');\n    }\n    out.println('');\n  };\n  Edge.prototype.getMonotoneChainEdge = function getMonotoneChainEdge () {\n    if (this._mce === null) { this._mce = new MonotoneChainEdge(this); }\n    return this._mce\n  };\n  Edge.prototype.getEnvelope = function getEnvelope () {\n    var this$1 = this;\n\n    if (this._env === null) {\n      this._env = new Envelope();\n      for (var i = 0; i < this.pts.length; i++) {\n        this$1._env.expandToInclude(this$1.pts[i]);\n      }\n    }\n    return this._env\n  };\n  Edge.prototype.addIntersection = function addIntersection (li, segmentIndex, geomIndex, intIndex) {\n    var intPt = new Coordinate(li.getIntersection(intIndex));\n    var normalizedSegmentIndex = segmentIndex;\n    var dist = li.getEdgeDistance(geomIndex, intIndex);\n    var nextSegIndex = normalizedSegmentIndex + 1;\n    if (nextSegIndex < this.pts.length) {\n      var nextPt = this.pts[nextSegIndex];\n      if (intPt.equals2D(nextPt)) {\n        normalizedSegmentIndex = nextSegIndex;\n        dist = 0.0;\n      }\n    }\n    this.eiList.add(intPt, normalizedSegmentIndex, dist);\n  };\n  Edge.prototype.toString = function toString () {\n    var this$1 = this;\n\n    var buf = new StringBuffer();\n    buf.append('edge ' + this._name + ': ');\n    buf.append('LINESTRING (');\n    for (var i = 0; i < this.pts.length; i++) {\n      if (i > 0) { buf.append(','); }\n      buf.append(this$1.pts[i].x + ' ' + this$1.pts[i].y);\n    }\n    buf.append(')  ' + this._label + ' ' + this._depthDelta);\n    return buf.toString()\n  };\n  Edge.prototype.isPointwiseEqual = function isPointwiseEqual (e) {\n    var this$1 = this;\n\n    if (this.pts.length !== e.pts.length) { return false }\n    for (var i = 0; i < this.pts.length; i++) {\n      if (!this$1.pts[i].equals2D(e.pts[i])) {\n        return false\n      }\n    }\n    return true\n  };\n  Edge.prototype.setDepthDelta = function setDepthDelta (depthDelta) {\n    this._depthDelta = depthDelta;\n  };\n  Edge.prototype.getEdgeIntersectionList = function getEdgeIntersectionList () {\n    return this.eiList\n  };\n  Edge.prototype.addIntersections = function addIntersections (li, segmentIndex, geomIndex) {\n    var this$1 = this;\n\n    for (var i = 0; i < li.getIntersectionNum(); i++) {\n      this$1.addIntersection(li, segmentIndex, geomIndex, i);\n    }\n  };\n  Edge.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  Edge.prototype.getClass = function getClass () {\n    return Edge\n  };\n  Edge.updateIM = function updateIM () {\n    if (arguments.length === 2) {\n      var label = arguments[0];\n      var im = arguments[1];\n      im.setAtLeastIfValid(label.getLocation(0, Position.ON), label.getLocation(1, Position.ON), 1);\n      if (label.isArea()) {\n        im.setAtLeastIfValid(label.getLocation(0, Position.LEFT), label.getLocation(1, Position.LEFT), 2);\n        im.setAtLeastIfValid(label.getLocation(0, Position.RIGHT), label.getLocation(1, Position.RIGHT), 2);\n      }\n    } else { return GraphComponent$$1.prototype.updateIM.apply(this, arguments) }\n  };\n\n  return Edge;\n}(GraphComponent));\n\nvar BufferBuilder = function BufferBuilder (bufParams) {\n  this._workingPrecisionModel = null;\n  this._workingNoder = null;\n  this._geomFact = null;\n  this._graph = null;\n  this._edgeList = new EdgeList();\n  this._bufParams = bufParams || null;\n};\nBufferBuilder.prototype.setWorkingPrecisionModel = function setWorkingPrecisionModel (pm) {\n  this._workingPrecisionModel = pm;\n};\nBufferBuilder.prototype.insertUniqueEdge = function insertUniqueEdge (e) {\n  var existingEdge = this._edgeList.findEqualEdge(e);\n  if (existingEdge !== null) {\n    var existingLabel = existingEdge.getLabel();\n    var labelToMerge = e.getLabel();\n    if (!existingEdge.isPointwiseEqual(e)) {\n      labelToMerge = new Label(e.getLabel());\n      labelToMerge.flip();\n    }\n    existingLabel.merge(labelToMerge);\n    var mergeDelta = BufferBuilder.depthDelta(labelToMerge);\n    var existingDelta = existingEdge.getDepthDelta();\n    var newDelta = existingDelta + mergeDelta;\n    existingEdge.setDepthDelta(newDelta);\n  } else {\n    this._edgeList.add(e);\n    e.setDepthDelta(BufferBuilder.depthDelta(e.getLabel()));\n  }\n};\nBufferBuilder.prototype.buildSubgraphs = function buildSubgraphs (subgraphList, polyBuilder) {\n  var processedGraphs = new ArrayList();\n  for (var i = subgraphList.iterator(); i.hasNext();) {\n    var subgraph = i.next();\n    var p = subgraph.getRightmostCoordinate();\n    var locater = new SubgraphDepthLocater(processedGraphs);\n    var outsideDepth = locater.getDepth(p);\n    subgraph.computeDepth(outsideDepth);\n    subgraph.findResultEdges();\n    processedGraphs.add(subgraph);\n    polyBuilder.add(subgraph.getDirectedEdges(), subgraph.getNodes());\n  }\n};\nBufferBuilder.prototype.createSubgraphs = function createSubgraphs (graph) {\n  var subgraphList = new ArrayList();\n  for (var i = graph.getNodes().iterator(); i.hasNext();) {\n    var node = i.next();\n    if (!node.isVisited()) {\n      var subgraph = new BufferSubgraph();\n      subgraph.create(node);\n      subgraphList.add(subgraph);\n    }\n  }\n  Collections.sort(subgraphList, Collections.reverseOrder());\n  return subgraphList\n};\nBufferBuilder.prototype.createEmptyResultGeometry = function createEmptyResultGeometry () {\n  var emptyGeom = this._geomFact.createPolygon();\n  return emptyGeom\n};\nBufferBuilder.prototype.getNoder = function getNoder (precisionModel) {\n  if (this._workingNoder !== null) { return this._workingNoder }\n  var noder = new MCIndexNoder();\n  var li = new RobustLineIntersector();\n  li.setPrecisionModel(precisionModel);\n  noder.setSegmentIntersector(new IntersectionAdder(li));\n  return noder\n};\nBufferBuilder.prototype.buffer = function buffer (g, distance) {\n  var precisionModel = this._workingPrecisionModel;\n  if (precisionModel === null) { precisionModel = g.getPrecisionModel(); }\n  this._geomFact = g.getFactory();\n  var curveBuilder = new OffsetCurveBuilder(precisionModel, this._bufParams);\n  var curveSetBuilder = new OffsetCurveSetBuilder(g, distance, curveBuilder);\n  var bufferSegStrList = curveSetBuilder.getCurves();\n  if (bufferSegStrList.size() <= 0) {\n    return this.createEmptyResultGeometry()\n  }\n  this.computeNodedEdges(bufferSegStrList, precisionModel);\n  this._graph = new PlanarGraph(new OverlayNodeFactory());\n  this._graph.addEdges(this._edgeList.getEdges());\n  var subgraphList = this.createSubgraphs(this._graph);\n  var polyBuilder = new PolygonBuilder(this._geomFact);\n  this.buildSubgraphs(subgraphList, polyBuilder);\n  var resultPolyList = polyBuilder.getPolygons();\n  if (resultPolyList.size() <= 0) {\n    return this.createEmptyResultGeometry()\n  }\n  var resultGeom = this._geomFact.buildGeometry(resultPolyList);\n  return resultGeom\n};\nBufferBuilder.prototype.computeNodedEdges = function computeNodedEdges (bufferSegStrList, precisionModel) {\n    var this$1 = this;\n\n  var noder = this.getNoder(precisionModel);\n  noder.computeNodes(bufferSegStrList);\n  var nodedSegStrings = noder.getNodedSubstrings();\n  for (var i = nodedSegStrings.iterator(); i.hasNext();) {\n    var segStr = i.next();\n    var pts = segStr.getCoordinates();\n    if (pts.length === 2 && pts[0].equals2D(pts[1])) { continue }\n    var oldLabel = segStr.getData();\n    var edge = new Edge(segStr.getCoordinates(), new Label(oldLabel));\n    this$1.insertUniqueEdge(edge);\n  }\n};\nBufferBuilder.prototype.setNoder = function setNoder (noder) {\n  this._workingNoder = noder;\n};\nBufferBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferBuilder.prototype.getClass = function getClass () {\n  return BufferBuilder\n};\nBufferBuilder.depthDelta = function depthDelta (label) {\n  var lLoc = label.getLocation(0, Position.LEFT);\n  var rLoc = label.getLocation(0, Position.RIGHT);\n  if (lLoc === Location.INTERIOR && rLoc === Location.EXTERIOR) { return 1; } else if (lLoc === Location.EXTERIOR && rLoc === Location.INTERIOR) { return -1 }\n  return 0\n};\nBufferBuilder.convertSegStrings = function convertSegStrings (it) {\n  var fact = new GeometryFactory();\n  var lines = new ArrayList();\n  while (it.hasNext()) {\n    var ss = it.next();\n    var line = fact.createLineString(ss.getCoordinates());\n    lines.add(line);\n  }\n  return fact.buildGeometry(lines)\n};\n\nvar ScaledNoder = function ScaledNoder () {\n  this._noder = null;\n  this._scaleFactor = null;\n  this._offsetX = null;\n  this._offsetY = null;\n  this._isScaled = false;\n  if (arguments.length === 2) {\n    var noder = arguments[0];\n    var scaleFactor = arguments[1];\n    this._noder = noder;\n    this._scaleFactor = scaleFactor;\n    this._offsetX = 0.0;\n    this._offsetY = 0.0;\n    this._isScaled = !this.isIntegerPrecision();\n  } else if (arguments.length === 4) {\n    var noder$1 = arguments[0];\n    var scaleFactor$1 = arguments[1];\n    var offsetX = arguments[2];\n    var offsetY = arguments[3];\n    this._noder = noder$1;\n    this._scaleFactor = scaleFactor$1;\n    this._offsetX = offsetX;\n    this._offsetY = offsetY;\n    this._isScaled = !this.isIntegerPrecision();\n  }\n};\nScaledNoder.prototype.rescale = function rescale () {\n    var this$1 = this;\n\n  if (hasInterface(arguments[0], Collection)) {\n    var segStrings = arguments[0];\n    for (var i = segStrings.iterator(); i.hasNext();) {\n      var ss = i.next();\n      this$1.rescale(ss.getCoordinates());\n    }\n  } else if (arguments[0] instanceof Array) {\n    var pts = arguments[0];\n    // let p0 = null\n    // let p1 = null\n    // if (pts.length === 2) {\n    // p0 = new Coordinate(pts[0])\n    // p1 = new Coordinate(pts[1])\n    // }\n    for (var i$1 = 0; i$1 < pts.length; i$1++) {\n      pts[i$1].x = pts[i$1].x / this$1._scaleFactor + this$1._offsetX;\n      pts[i$1].y = pts[i$1].y / this$1._scaleFactor + this$1._offsetY;\n    }\n    if (pts.length === 2 && pts[0].equals2D(pts[1])) {\n      System.out.println(pts);\n    }\n  }\n};\nScaledNoder.prototype.scale = function scale () {\n    var this$1 = this;\n\n  if (hasInterface(arguments[0], Collection)) {\n    var segStrings = arguments[0];\n    var nodedSegmentStrings = new ArrayList();\n    for (var i = segStrings.iterator(); i.hasNext();) {\n      var ss = i.next();\n      nodedSegmentStrings.add(new NodedSegmentString(this$1.scale(ss.getCoordinates()), ss.getData()));\n    }\n    return nodedSegmentStrings\n  } else if (arguments[0] instanceof Array) {\n    var pts = arguments[0];\n    var roundPts = new Array(pts.length).fill(null);\n    for (var i$1 = 0; i$1 < pts.length; i$1++) {\n      roundPts[i$1] = new Coordinate(Math.round((pts[i$1].x - this$1._offsetX) * this$1._scaleFactor), Math.round((pts[i$1].y - this$1._offsetY) * this$1._scaleFactor), pts[i$1].z);\n    }\n    var roundPtsNoDup = CoordinateArrays.removeRepeatedPoints(roundPts);\n    return roundPtsNoDup\n  }\n};\nScaledNoder.prototype.isIntegerPrecision = function isIntegerPrecision () {\n  return this._scaleFactor === 1.0\n};\nScaledNoder.prototype.getNodedSubstrings = function getNodedSubstrings () {\n  var splitSS = this._noder.getNodedSubstrings();\n  if (this._isScaled) { this.rescale(splitSS); }\n  return splitSS\n};\nScaledNoder.prototype.computeNodes = function computeNodes (inputSegStrings) {\n  var intSegStrings = inputSegStrings;\n  if (this._isScaled) { intSegStrings = this.scale(inputSegStrings); }\n  this._noder.computeNodes(intSegStrings);\n};\nScaledNoder.prototype.interfaces_ = function interfaces_ () {\n  return [Noder]\n};\nScaledNoder.prototype.getClass = function getClass () {\n  return ScaledNoder\n};\n\nvar NodingValidator = function NodingValidator () {\n  this._li = new RobustLineIntersector();\n  this._segStrings = null;\n  var segStrings = arguments[0];\n  this._segStrings = segStrings;\n};\n\nvar staticAccessors$33 = { fact: { configurable: true } };\nNodingValidator.prototype.checkEndPtVertexIntersections = function checkEndPtVertexIntersections () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    for (var i = this._segStrings.iterator(); i.hasNext();) {\n      var ss = i.next();\n      var pts = ss.getCoordinates();\n      this$1.checkEndPtVertexIntersections(pts[0], this$1._segStrings);\n      this$1.checkEndPtVertexIntersections(pts[pts.length - 1], this$1._segStrings);\n    }\n  } else if (arguments.length === 2) {\n    var testPt = arguments[0];\n    var segStrings = arguments[1];\n    for (var i$1 = segStrings.iterator(); i$1.hasNext();) {\n      var ss$1 = i$1.next();\n      var pts$1 = ss$1.getCoordinates();\n      for (var j = 1; j < pts$1.length - 1; j++) {\n        if (pts$1[j].equals(testPt)) { throw new RuntimeException('found endpt/interior pt intersection at index ' + j + ' :pt ' + testPt) }\n      }\n    }\n  }\n};\nNodingValidator.prototype.checkInteriorIntersections = function checkInteriorIntersections () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    for (var i = this._segStrings.iterator(); i.hasNext();) {\n      var ss0 = i.next();\n      for (var j = this._segStrings.iterator(); j.hasNext();) {\n        var ss1 = j.next();\n        this$1.checkInteriorIntersections(ss0, ss1);\n      }\n    }\n  } else if (arguments.length === 2) {\n    var ss0$1 = arguments[0];\n    var ss1$1 = arguments[1];\n    var pts0 = ss0$1.getCoordinates();\n    var pts1 = ss1$1.getCoordinates();\n    for (var i0 = 0; i0 < pts0.length - 1; i0++) {\n      for (var i1 = 0; i1 < pts1.length - 1; i1++) {\n        this$1.checkInteriorIntersections(ss0$1, i0, ss1$1, i1);\n      }\n    }\n  } else if (arguments.length === 4) {\n    var e0 = arguments[0];\n    var segIndex0 = arguments[1];\n    var e1 = arguments[2];\n    var segIndex1 = arguments[3];\n    if (e0 === e1 && segIndex0 === segIndex1) { return null }\n    var p00 = e0.getCoordinates()[segIndex0];\n    var p01 = e0.getCoordinates()[segIndex0 + 1];\n    var p10 = e1.getCoordinates()[segIndex1];\n    var p11 = e1.getCoordinates()[segIndex1 + 1];\n    this._li.computeIntersection(p00, p01, p10, p11);\n    if (this._li.hasIntersection()) {\n      if (this._li.isProper() || this.hasInteriorIntersection(this._li, p00, p01) || this.hasInteriorIntersection(this._li, p10, p11)) {\n        throw new RuntimeException('found non-noded intersection at ' + p00 + '-' + p01 + ' and ' + p10 + '-' + p11)\n      }\n    }\n  }\n};\nNodingValidator.prototype.checkValid = function checkValid () {\n  this.checkEndPtVertexIntersections();\n  this.checkInteriorIntersections();\n  this.checkCollapses();\n};\nNodingValidator.prototype.checkCollapses = function checkCollapses () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    for (var i = this._segStrings.iterator(); i.hasNext();) {\n      var ss = i.next();\n      this$1.checkCollapses(ss);\n    }\n  } else if (arguments.length === 1) {\n    var ss$1 = arguments[0];\n    var pts = ss$1.getCoordinates();\n    for (var i$1 = 0; i$1 < pts.length - 2; i$1++) {\n      this$1.checkCollapse(pts[i$1], pts[i$1 + 1], pts[i$1 + 2]);\n    }\n  }\n};\nNodingValidator.prototype.hasInteriorIntersection = function hasInteriorIntersection (li, p0, p1) {\n  for (var i = 0; i < li.getIntersectionNum(); i++) {\n    var intPt = li.getIntersection(i);\n    if (!(intPt.equals(p0) || intPt.equals(p1))) { return true }\n  }\n  return false\n};\nNodingValidator.prototype.checkCollapse = function checkCollapse (p0, p1, p2) {\n  if (p0.equals(p2)) { throw new RuntimeException('found non-noded collapse at ' + NodingValidator.fact.createLineString([p0, p1, p2])) }\n};\nNodingValidator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nNodingValidator.prototype.getClass = function getClass () {\n  return NodingValidator\n};\nstaticAccessors$33.fact.get = function () { return new GeometryFactory() };\n\nObject.defineProperties( NodingValidator, staticAccessors$33 );\n\nvar HotPixel = function HotPixel () {\n  this._li = null;\n  this._pt = null;\n  this._originalPt = null;\n  this._ptScaled = null;\n  this._p0Scaled = null;\n  this._p1Scaled = null;\n  this._scaleFactor = null;\n  this._minx = null;\n  this._maxx = null;\n  this._miny = null;\n  this._maxy = null;\n  this._corner = new Array(4).fill(null);\n  this._safeEnv = null;\n  var pt = arguments[0];\n  var scaleFactor = arguments[1];\n  var li = arguments[2];\n  this._originalPt = pt;\n  this._pt = pt;\n  this._scaleFactor = scaleFactor;\n  this._li = li;\n  if (scaleFactor <= 0) { throw new IllegalArgumentException('Scale factor must be non-zero') }\n  if (scaleFactor !== 1.0) {\n    this._pt = new Coordinate(this.scale(pt.x), this.scale(pt.y));\n    this._p0Scaled = new Coordinate();\n    this._p1Scaled = new Coordinate();\n  }\n  this.initCorners(this._pt);\n};\n\nvar staticAccessors$34 = { SAFE_ENV_EXPANSION_FACTOR: { configurable: true } };\nHotPixel.prototype.intersectsScaled = function intersectsScaled (p0, p1) {\n  var segMinx = Math.min(p0.x, p1.x);\n  var segMaxx = Math.max(p0.x, p1.x);\n  var segMiny = Math.min(p0.y, p1.y);\n  var segMaxy = Math.max(p0.y, p1.y);\n  var isOutsidePixelEnv = this._maxx < segMinx || this._minx > segMaxx || this._maxy < segMiny || this._miny > segMaxy;\n  if (isOutsidePixelEnv) { return false }\n  var intersects = this.intersectsToleranceSquare(p0, p1);\n  Assert.isTrue(!(isOutsidePixelEnv && intersects), 'Found bad envelope test');\n  return intersects\n};\nHotPixel.prototype.initCorners = function initCorners (pt) {\n  var tolerance = 0.5;\n  this._minx = pt.x - tolerance;\n  this._maxx = pt.x + tolerance;\n  this._miny = pt.y - tolerance;\n  this._maxy = pt.y + tolerance;\n  this._corner[0] = new Coordinate(this._maxx, this._maxy);\n  this._corner[1] = new Coordinate(this._minx, this._maxy);\n  this._corner[2] = new Coordinate(this._minx, this._miny);\n  this._corner[3] = new Coordinate(this._maxx, this._miny);\n};\nHotPixel.prototype.intersects = function intersects (p0, p1) {\n  if (this._scaleFactor === 1.0) { return this.intersectsScaled(p0, p1) }\n  this.copyScaled(p0, this._p0Scaled);\n  this.copyScaled(p1, this._p1Scaled);\n  return this.intersectsScaled(this._p0Scaled, this._p1Scaled)\n};\nHotPixel.prototype.scale = function scale (val) {\n  return Math.round(val * this._scaleFactor)\n};\nHotPixel.prototype.getCoordinate = function getCoordinate () {\n  return this._originalPt\n};\nHotPixel.prototype.copyScaled = function copyScaled (p, pScaled) {\n  pScaled.x = this.scale(p.x);\n  pScaled.y = this.scale(p.y);\n};\nHotPixel.prototype.getSafeEnvelope = function getSafeEnvelope () {\n  if (this._safeEnv === null) {\n    var safeTolerance = HotPixel.SAFE_ENV_EXPANSION_FACTOR / this._scaleFactor;\n    this._safeEnv = new Envelope(this._originalPt.x - safeTolerance, this._originalPt.x + safeTolerance, this._originalPt.y - safeTolerance, this._originalPt.y + safeTolerance);\n  }\n  return this._safeEnv\n};\nHotPixel.prototype.intersectsPixelClosure = function intersectsPixelClosure (p0, p1) {\n  this._li.computeIntersection(p0, p1, this._corner[0], this._corner[1]);\n  if (this._li.hasIntersection()) { return true }\n  this._li.computeIntersection(p0, p1, this._corner[1], this._corner[2]);\n  if (this._li.hasIntersection()) { return true }\n  this._li.computeIntersection(p0, p1, this._corner[2], this._corner[3]);\n  if (this._li.hasIntersection()) { return true }\n  this._li.computeIntersection(p0, p1, this._corner[3], this._corner[0]);\n  if (this._li.hasIntersection()) { return true }\n  return false\n};\nHotPixel.prototype.intersectsToleranceSquare = function intersectsToleranceSquare (p0, p1) {\n  var intersectsLeft = false;\n  var intersectsBottom = false;\n  this._li.computeIntersection(p0, p1, this._corner[0], this._corner[1]);\n  if (this._li.isProper()) { return true }\n  this._li.computeIntersection(p0, p1, this._corner[1], this._corner[2]);\n  if (this._li.isProper()) { return true }\n  if (this._li.hasIntersection()) { intersectsLeft = true; }\n  this._li.computeIntersection(p0, p1, this._corner[2], this._corner[3]);\n  if (this._li.isProper()) { return true }\n  if (this._li.hasIntersection()) { intersectsBottom = true; }\n  this._li.computeIntersection(p0, p1, this._corner[3], this._corner[0]);\n  if (this._li.isProper()) { return true }\n  if (intersectsLeft && intersectsBottom) { return true }\n  if (p0.equals(this._pt)) { return true }\n  if (p1.equals(this._pt)) { return true }\n  return false\n};\nHotPixel.prototype.addSnappedNode = function addSnappedNode (segStr, segIndex) {\n  var p0 = segStr.getCoordinate(segIndex);\n  var p1 = segStr.getCoordinate(segIndex + 1);\n  if (this.intersects(p0, p1)) {\n    segStr.addIntersection(this.getCoordinate(), segIndex);\n    return true\n  }\n  return false\n};\nHotPixel.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nHotPixel.prototype.getClass = function getClass () {\n  return HotPixel\n};\nstaticAccessors$34.SAFE_ENV_EXPANSION_FACTOR.get = function () { return 0.75 };\n\nObject.defineProperties( HotPixel, staticAccessors$34 );\n\nvar MonotoneChainSelectAction = function MonotoneChainSelectAction () {\n  this.tempEnv1 = new Envelope();\n  this.selectedSegment = new LineSegment();\n};\nMonotoneChainSelectAction.prototype.select = function select () {\n  if (arguments.length === 1) {\n    // const seg = arguments[0]\n  } else if (arguments.length === 2) {\n    var mc = arguments[0];\n    var startIndex = arguments[1];\n    mc.getLineSegment(startIndex, this.selectedSegment);\n    this.select(this.selectedSegment);\n  }\n};\nMonotoneChainSelectAction.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChainSelectAction.prototype.getClass = function getClass () {\n  return MonotoneChainSelectAction\n};\n\nvar MCIndexPointSnapper = function MCIndexPointSnapper () {\n  this._index = null;\n  var index = arguments[0];\n  this._index = index;\n};\n\nvar staticAccessors$35 = { HotPixelSnapAction: { configurable: true } };\nMCIndexPointSnapper.prototype.snap = function snap () {\n  if (arguments.length === 1) {\n    var hotPixel = arguments[0];\n    return this.snap(hotPixel, null, -1)\n  } else if (arguments.length === 3) {\n    var hotPixel$1 = arguments[0];\n    var parentEdge = arguments[1];\n    var hotPixelVertexIndex = arguments[2];\n    var pixelEnv = hotPixel$1.getSafeEnvelope();\n    var hotPixelSnapAction = new HotPixelSnapAction(hotPixel$1, parentEdge, hotPixelVertexIndex);\n    this._index.query(pixelEnv, {\n      interfaces_: function () {\n        return [ItemVisitor]\n      },\n      visitItem: function (item) {\n        var testChain = item;\n        testChain.select(pixelEnv, hotPixelSnapAction);\n      }\n    });\n    return hotPixelSnapAction.isNodeAdded()\n  }\n};\nMCIndexPointSnapper.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMCIndexPointSnapper.prototype.getClass = function getClass () {\n  return MCIndexPointSnapper\n};\nstaticAccessors$35.HotPixelSnapAction.get = function () { return HotPixelSnapAction };\n\nObject.defineProperties( MCIndexPointSnapper, staticAccessors$35 );\n\nvar HotPixelSnapAction = (function (MonotoneChainSelectAction$$1) {\n  function HotPixelSnapAction () {\n    MonotoneChainSelectAction$$1.call(this);\n    this._hotPixel = null;\n    this._parentEdge = null;\n    this._hotPixelVertexIndex = null;\n    this._isNodeAdded = false;\n    var hotPixel = arguments[0];\n    var parentEdge = arguments[1];\n    var hotPixelVertexIndex = arguments[2];\n    this._hotPixel = hotPixel;\n    this._parentEdge = parentEdge;\n    this._hotPixelVertexIndex = hotPixelVertexIndex;\n  }\n\n  if ( MonotoneChainSelectAction$$1 ) HotPixelSnapAction.__proto__ = MonotoneChainSelectAction$$1;\n  HotPixelSnapAction.prototype = Object.create( MonotoneChainSelectAction$$1 && MonotoneChainSelectAction$$1.prototype );\n  HotPixelSnapAction.prototype.constructor = HotPixelSnapAction;\n  HotPixelSnapAction.prototype.isNodeAdded = function isNodeAdded () {\n    return this._isNodeAdded\n  };\n  HotPixelSnapAction.prototype.select = function select () {\n    if (arguments.length === 2) {\n      var mc = arguments[0];\n      var startIndex = arguments[1];\n      var ss = mc.getContext();\n      if (this._parentEdge !== null) {\n        if (ss === this._parentEdge && startIndex === this._hotPixelVertexIndex) { return null }\n      }\n      this._isNodeAdded = this._hotPixel.addSnappedNode(ss, startIndex);\n    } else { return MonotoneChainSelectAction$$1.prototype.select.apply(this, arguments) }\n  };\n  HotPixelSnapAction.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  HotPixelSnapAction.prototype.getClass = function getClass () {\n    return HotPixelSnapAction\n  };\n\n  return HotPixelSnapAction;\n}(MonotoneChainSelectAction));\n\nvar InteriorIntersectionFinderAdder = function InteriorIntersectionFinderAdder () {\n  this._li = null;\n  this._interiorIntersections = null;\n  var li = arguments[0];\n  this._li = li;\n  this._interiorIntersections = new ArrayList();\n};\nInteriorIntersectionFinderAdder.prototype.processIntersections = function processIntersections (e0, segIndex0, e1, segIndex1) {\n    var this$1 = this;\n\n  if (e0 === e1 && segIndex0 === segIndex1) { return null }\n  var p00 = e0.getCoordinates()[segIndex0];\n  var p01 = e0.getCoordinates()[segIndex0 + 1];\n  var p10 = e1.getCoordinates()[segIndex1];\n  var p11 = e1.getCoordinates()[segIndex1 + 1];\n  this._li.computeIntersection(p00, p01, p10, p11);\n  if (this._li.hasIntersection()) {\n    if (this._li.isInteriorIntersection()) {\n      for (var intIndex = 0; intIndex < this._li.getIntersectionNum(); intIndex++) {\n        this$1._interiorIntersections.add(this$1._li.getIntersection(intIndex));\n      }\n      e0.addIntersections(this._li, segIndex0, 0);\n      e1.addIntersections(this._li, segIndex1, 1);\n    }\n  }\n};\nInteriorIntersectionFinderAdder.prototype.isDone = function isDone () {\n  return false\n};\nInteriorIntersectionFinderAdder.prototype.getInteriorIntersections = function getInteriorIntersections () {\n  return this._interiorIntersections\n};\nInteriorIntersectionFinderAdder.prototype.interfaces_ = function interfaces_ () {\n  return [SegmentIntersector]\n};\nInteriorIntersectionFinderAdder.prototype.getClass = function getClass () {\n  return InteriorIntersectionFinderAdder\n};\n\nvar MCIndexSnapRounder = function MCIndexSnapRounder () {\n  this._pm = null;\n  this._li = null;\n  this._scaleFactor = null;\n  this._noder = null;\n  this._pointSnapper = null;\n  this._nodedSegStrings = null;\n  var pm = arguments[0];\n  this._pm = pm;\n  this._li = new RobustLineIntersector();\n  this._li.setPrecisionModel(pm);\n  this._scaleFactor = pm.getScale();\n};\nMCIndexSnapRounder.prototype.checkCorrectness = function checkCorrectness (inputSegmentStrings) {\n  var resultSegStrings = NodedSegmentString.getNodedSubstrings(inputSegmentStrings);\n  var nv = new NodingValidator(resultSegStrings);\n  try {\n    nv.checkValid();\n  } catch (ex) {\n    if (ex instanceof Exception) {\n      ex.printStackTrace();\n    } else { throw ex }\n  } finally {}\n};\nMCIndexSnapRounder.prototype.getNodedSubstrings = function getNodedSubstrings () {\n  return NodedSegmentString.getNodedSubstrings(this._nodedSegStrings)\n};\nMCIndexSnapRounder.prototype.snapRound = function snapRound (segStrings, li) {\n  var intersections = this.findInteriorIntersections(segStrings, li);\n  this.computeIntersectionSnaps(intersections);\n  this.computeVertexSnaps(segStrings);\n};\nMCIndexSnapRounder.prototype.findInteriorIntersections = function findInteriorIntersections (segStrings, li) {\n  var intFinderAdder = new InteriorIntersectionFinderAdder(li);\n  this._noder.setSegmentIntersector(intFinderAdder);\n  this._noder.computeNodes(segStrings);\n  return intFinderAdder.getInteriorIntersections()\n};\nMCIndexSnapRounder.prototype.computeVertexSnaps = function computeVertexSnaps () {\n    var this$1 = this;\n\n  if (hasInterface(arguments[0], Collection)) {\n    var edges = arguments[0];\n    for (var i0 = edges.iterator(); i0.hasNext();) {\n      var edge0 = i0.next();\n      this$1.computeVertexSnaps(edge0);\n    }\n  } else if (arguments[0] instanceof NodedSegmentString) {\n    var e = arguments[0];\n    var pts0 = e.getCoordinates();\n    for (var i = 0; i < pts0.length; i++) {\n      var hotPixel = new HotPixel(pts0[i], this$1._scaleFactor, this$1._li);\n      var isNodeAdded = this$1._pointSnapper.snap(hotPixel, e, i);\n      if (isNodeAdded) {\n        e.addIntersection(pts0[i], i);\n      }\n    }\n  }\n};\nMCIndexSnapRounder.prototype.computeNodes = function computeNodes (inputSegmentStrings) {\n  this._nodedSegStrings = inputSegmentStrings;\n  this._noder = new MCIndexNoder();\n  this._pointSnapper = new MCIndexPointSnapper(this._noder.getIndex());\n  this.snapRound(inputSegmentStrings, this._li);\n};\nMCIndexSnapRounder.prototype.computeIntersectionSnaps = function computeIntersectionSnaps (snapPts) {\n    var this$1 = this;\n\n  for (var it = snapPts.iterator(); it.hasNext();) {\n    var snapPt = it.next();\n    var hotPixel = new HotPixel(snapPt, this$1._scaleFactor, this$1._li);\n    this$1._pointSnapper.snap(hotPixel);\n  }\n};\nMCIndexSnapRounder.prototype.interfaces_ = function interfaces_ () {\n  return [Noder]\n};\nMCIndexSnapRounder.prototype.getClass = function getClass () {\n  return MCIndexSnapRounder\n};\n\nvar BufferOp = function BufferOp () {\n  this._argGeom = null;\n  this._distance = null;\n  this._bufParams = new BufferParameters();\n  this._resultGeometry = null;\n  this._saveException = null;\n  if (arguments.length === 1) {\n    var g = arguments[0];\n    this._argGeom = g;\n  } else if (arguments.length === 2) {\n    var g$1 = arguments[0];\n    var bufParams = arguments[1];\n    this._argGeom = g$1;\n    this._bufParams = bufParams;\n  }\n};\n\nvar staticAccessors$32 = { CAP_ROUND: { configurable: true },CAP_BUTT: { configurable: true },CAP_FLAT: { configurable: true },CAP_SQUARE: { configurable: true },MAX_PRECISION_DIGITS: { configurable: true } };\nBufferOp.prototype.bufferFixedPrecision = function bufferFixedPrecision (fixedPM) {\n  var noder = new ScaledNoder(new MCIndexSnapRounder(new PrecisionModel(1.0)), fixedPM.getScale());\n  var bufBuilder = new BufferBuilder(this._bufParams);\n  bufBuilder.setWorkingPrecisionModel(fixedPM);\n  bufBuilder.setNoder(noder);\n  this._resultGeometry = bufBuilder.buffer(this._argGeom, this._distance);\n};\nBufferOp.prototype.bufferReducedPrecision = function bufferReducedPrecision () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    for (var precDigits = BufferOp.MAX_PRECISION_DIGITS; precDigits >= 0; precDigits--) {\n      try {\n        this$1.bufferReducedPrecision(precDigits);\n      } catch (ex) {\n        if (ex instanceof TopologyException) {\n          this$1._saveException = ex;\n        } else { throw ex }\n      } finally {}\n      if (this$1._resultGeometry !== null) { return null }\n    }\n    throw this._saveException\n  } else if (arguments.length === 1) {\n    var precisionDigits = arguments[0];\n    var sizeBasedScaleFactor = BufferOp.precisionScaleFactor(this._argGeom, this._distance, precisionDigits);\n    var fixedPM = new PrecisionModel(sizeBasedScaleFactor);\n    this.bufferFixedPrecision(fixedPM);\n  }\n};\nBufferOp.prototype.computeGeometry = function computeGeometry () {\n  this.bufferOriginalPrecision();\n  if (this._resultGeometry !== null) { return null }\n  var argPM = this._argGeom.getFactory().getPrecisionModel();\n  if (argPM.getType() === PrecisionModel.FIXED) { this.bufferFixedPrecision(argPM); } else { this.bufferReducedPrecision(); }\n};\nBufferOp.prototype.setQuadrantSegments = function setQuadrantSegments (quadrantSegments) {\n  this._bufParams.setQuadrantSegments(quadrantSegments);\n};\nBufferOp.prototype.bufferOriginalPrecision = function bufferOriginalPrecision () {\n  try {\n    var bufBuilder = new BufferBuilder(this._bufParams);\n    this._resultGeometry = bufBuilder.buffer(this._argGeom, this._distance);\n  } catch (ex) {\n    if (ex instanceof RuntimeException) {\n      this._saveException = ex;\n    } else { throw ex }\n  } finally {}\n};\nBufferOp.prototype.getResultGeometry = function getResultGeometry (distance) {\n  this._distance = distance;\n  this.computeGeometry();\n  return this._resultGeometry\n};\nBufferOp.prototype.setEndCapStyle = function setEndCapStyle (endCapStyle) {\n  this._bufParams.setEndCapStyle(endCapStyle);\n};\nBufferOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferOp.prototype.getClass = function getClass () {\n  return BufferOp\n};\nBufferOp.bufferOp = function bufferOp () {\n  if (arguments.length === 2) {\n    var g = arguments[0];\n    var distance = arguments[1];\n    var gBuf = new BufferOp(g);\n    var geomBuf = gBuf.getResultGeometry(distance);\n    return geomBuf\n  } else if (arguments.length === 3) {\n    if (Number.isInteger(arguments[2]) && (arguments[0] instanceof Geometry && typeof arguments[1] === 'number')) {\n      var g$1 = arguments[0];\n      var distance$1 = arguments[1];\n      var quadrantSegments = arguments[2];\n      var bufOp = new BufferOp(g$1);\n      bufOp.setQuadrantSegments(quadrantSegments);\n      var geomBuf$1 = bufOp.getResultGeometry(distance$1);\n      return geomBuf$1\n    } else if (arguments[2] instanceof BufferParameters && (arguments[0] instanceof Geometry && typeof arguments[1] === 'number')) {\n      var g$2 = arguments[0];\n      var distance$2 = arguments[1];\n      var params = arguments[2];\n      var bufOp$1 = new BufferOp(g$2, params);\n      var geomBuf$2 = bufOp$1.getResultGeometry(distance$2);\n      return geomBuf$2\n    }\n  } else if (arguments.length === 4) {\n    var g$3 = arguments[0];\n    var distance$3 = arguments[1];\n    var quadrantSegments$1 = arguments[2];\n    var endCapStyle = arguments[3];\n    var bufOp$2 = new BufferOp(g$3);\n    bufOp$2.setQuadrantSegments(quadrantSegments$1);\n    bufOp$2.setEndCapStyle(endCapStyle);\n    var geomBuf$3 = bufOp$2.getResultGeometry(distance$3);\n    return geomBuf$3\n  }\n};\nBufferOp.precisionScaleFactor = function precisionScaleFactor (g, distance, maxPrecisionDigits) {\n  var env = g.getEnvelopeInternal();\n  var envMax = MathUtil.max(Math.abs(env.getMaxX()), Math.abs(env.getMaxY()), Math.abs(env.getMinX()), Math.abs(env.getMinY()));\n  var expandByDistance = distance > 0.0 ? distance : 0.0;\n  var bufEnvMax = envMax + 2 * expandByDistance;\n  var bufEnvPrecisionDigits = Math.trunc(Math.log(bufEnvMax) / Math.log(10) + 1.0);\n  var minUnitLog10 = maxPrecisionDigits - bufEnvPrecisionDigits;\n  var scaleFactor = Math.pow(10.0, minUnitLog10);\n  return scaleFactor\n};\nstaticAccessors$32.CAP_ROUND.get = function () { return BufferParameters.CAP_ROUND };\nstaticAccessors$32.CAP_BUTT.get = function () { return BufferParameters.CAP_FLAT };\nstaticAccessors$32.CAP_FLAT.get = function () { return BufferParameters.CAP_FLAT };\nstaticAccessors$32.CAP_SQUARE.get = function () { return BufferParameters.CAP_SQUARE };\nstaticAccessors$32.MAX_PRECISION_DIGITS.get = function () { return 12 };\n\nObject.defineProperties( BufferOp, staticAccessors$32 );\n\nvar PointPairDistance = function PointPairDistance () {\n  this._pt = [new Coordinate(), new Coordinate()];\n  this._distance = Double.NaN;\n  this._isNull = true;\n};\nPointPairDistance.prototype.getCoordinates = function getCoordinates () {\n  return this._pt\n};\nPointPairDistance.prototype.getCoordinate = function getCoordinate (i) {\n  return this._pt[i]\n};\nPointPairDistance.prototype.setMinimum = function setMinimum () {\n  if (arguments.length === 1) {\n    var ptDist = arguments[0];\n    this.setMinimum(ptDist._pt[0], ptDist._pt[1]);\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    if (this._isNull) {\n      this.initialize(p0, p1);\n      return null\n    }\n    var dist = p0.distance(p1);\n    if (dist < this._distance) { this.initialize(p0, p1, dist); }\n  }\n};\nPointPairDistance.prototype.initialize = function initialize () {\n  if (arguments.length === 0) {\n    this._isNull = true;\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    this._pt[0].setCoordinate(p0);\n    this._pt[1].setCoordinate(p1);\n    this._distance = p0.distance(p1);\n    this._isNull = false;\n  } else if (arguments.length === 3) {\n    var p0$1 = arguments[0];\n    var p1$1 = arguments[1];\n    var distance = arguments[2];\n    this._pt[0].setCoordinate(p0$1);\n    this._pt[1].setCoordinate(p1$1);\n    this._distance = distance;\n    this._isNull = false;\n  }\n};\nPointPairDistance.prototype.getDistance = function getDistance () {\n  return this._distance\n};\nPointPairDistance.prototype.setMaximum = function setMaximum () {\n  if (arguments.length === 1) {\n    var ptDist = arguments[0];\n    this.setMaximum(ptDist._pt[0], ptDist._pt[1]);\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    if (this._isNull) {\n      this.initialize(p0, p1);\n      return null\n    }\n    var dist = p0.distance(p1);\n    if (dist > this._distance) { this.initialize(p0, p1, dist); }\n  }\n};\nPointPairDistance.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPointPairDistance.prototype.getClass = function getClass () {\n  return PointPairDistance\n};\n\nvar DistanceToPointFinder = function DistanceToPointFinder () {};\n\nDistanceToPointFinder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nDistanceToPointFinder.prototype.getClass = function getClass () {\n  return DistanceToPointFinder\n};\nDistanceToPointFinder.computeDistance = function computeDistance () {\n  if (arguments[2] instanceof PointPairDistance && (arguments[0] instanceof LineString && arguments[1] instanceof Coordinate)) {\n    var line = arguments[0];\n    var pt = arguments[1];\n    var ptDist = arguments[2];\n    var coords = line.getCoordinates();\n    var tempSegment = new LineSegment();\n    for (var i = 0; i < coords.length - 1; i++) {\n      tempSegment.setCoordinates(coords[i], coords[i + 1]);\n      var closestPt = tempSegment.closestPoint(pt);\n      ptDist.setMinimum(closestPt, pt);\n    }\n  } else if (arguments[2] instanceof PointPairDistance && (arguments[0] instanceof Polygon && arguments[1] instanceof Coordinate)) {\n    var poly = arguments[0];\n    var pt$1 = arguments[1];\n    var ptDist$1 = arguments[2];\n    DistanceToPointFinder.computeDistance(poly.getExteriorRing(), pt$1, ptDist$1);\n    for (var i$1 = 0; i$1 < poly.getNumInteriorRing(); i$1++) {\n      DistanceToPointFinder.computeDistance(poly.getInteriorRingN(i$1), pt$1, ptDist$1);\n    }\n  } else if (arguments[2] instanceof PointPairDistance && (arguments[0] instanceof Geometry && arguments[1] instanceof Coordinate)) {\n    var geom = arguments[0];\n    var pt$2 = arguments[1];\n    var ptDist$2 = arguments[2];\n    if (geom instanceof LineString) {\n      DistanceToPointFinder.computeDistance(geom, pt$2, ptDist$2);\n    } else if (geom instanceof Polygon) {\n      DistanceToPointFinder.computeDistance(geom, pt$2, ptDist$2);\n    } else if (geom instanceof GeometryCollection) {\n      var gc = geom;\n      for (var i$2 = 0; i$2 < gc.getNumGeometries(); i$2++) {\n        var g = gc.getGeometryN(i$2);\n        DistanceToPointFinder.computeDistance(g, pt$2, ptDist$2);\n      }\n    } else {\n      ptDist$2.setMinimum(geom.getCoordinate(), pt$2);\n    }\n  } else if (arguments[2] instanceof PointPairDistance && (arguments[0] instanceof LineSegment && arguments[1] instanceof Coordinate)) {\n    var segment = arguments[0];\n    var pt$3 = arguments[1];\n    var ptDist$3 = arguments[2];\n    var closestPt$1 = segment.closestPoint(pt$3);\n    ptDist$3.setMinimum(closestPt$1, pt$3);\n  }\n};\n\nvar BufferCurveMaximumDistanceFinder = function BufferCurveMaximumDistanceFinder (inputGeom) {\n  this._maxPtDist = new PointPairDistance();\n  this._inputGeom = inputGeom || null;\n};\n\nvar staticAccessors$36 = { MaxPointDistanceFilter: { configurable: true },MaxMidpointDistanceFilter: { configurable: true } };\nBufferCurveMaximumDistanceFinder.prototype.computeMaxMidpointDistance = function computeMaxMidpointDistance (curve) {\n  var distFilter = new MaxMidpointDistanceFilter(this._inputGeom);\n  curve.apply(distFilter);\n  this._maxPtDist.setMaximum(distFilter.getMaxPointDistance());\n};\nBufferCurveMaximumDistanceFinder.prototype.computeMaxVertexDistance = function computeMaxVertexDistance (curve) {\n  var distFilter = new MaxPointDistanceFilter(this._inputGeom);\n  curve.apply(distFilter);\n  this._maxPtDist.setMaximum(distFilter.getMaxPointDistance());\n};\nBufferCurveMaximumDistanceFinder.prototype.findDistance = function findDistance (bufferCurve) {\n  this.computeMaxVertexDistance(bufferCurve);\n  this.computeMaxMidpointDistance(bufferCurve);\n  return this._maxPtDist.getDistance()\n};\nBufferCurveMaximumDistanceFinder.prototype.getDistancePoints = function getDistancePoints () {\n  return this._maxPtDist\n};\nBufferCurveMaximumDistanceFinder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferCurveMaximumDistanceFinder.prototype.getClass = function getClass () {\n  return BufferCurveMaximumDistanceFinder\n};\nstaticAccessors$36.MaxPointDistanceFilter.get = function () { return MaxPointDistanceFilter };\nstaticAccessors$36.MaxMidpointDistanceFilter.get = function () { return MaxMidpointDistanceFilter };\n\nObject.defineProperties( BufferCurveMaximumDistanceFinder, staticAccessors$36 );\n\nvar MaxPointDistanceFilter = function MaxPointDistanceFilter (geom) {\n  this._maxPtDist = new PointPairDistance();\n  this._minPtDist = new PointPairDistance();\n  this._geom = geom || null;\n};\nMaxPointDistanceFilter.prototype.filter = function filter (pt) {\n  this._minPtDist.initialize();\n  DistanceToPointFinder.computeDistance(this._geom, pt, this._minPtDist);\n  this._maxPtDist.setMaximum(this._minPtDist);\n};\nMaxPointDistanceFilter.prototype.getMaxPointDistance = function getMaxPointDistance () {\n  return this._maxPtDist\n};\nMaxPointDistanceFilter.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateFilter]\n};\nMaxPointDistanceFilter.prototype.getClass = function getClass () {\n  return MaxPointDistanceFilter\n};\n\nvar MaxMidpointDistanceFilter = function MaxMidpointDistanceFilter (geom) {\n  this._maxPtDist = new PointPairDistance();\n  this._minPtDist = new PointPairDistance();\n  this._geom = geom || null;\n};\nMaxMidpointDistanceFilter.prototype.filter = function filter (seq, index) {\n  if (index === 0) { return null }\n  var p0 = seq.getCoordinate(index - 1);\n  var p1 = seq.getCoordinate(index);\n  var midPt = new Coordinate((p0.x + p1.x) / 2, (p0.y + p1.y) / 2);\n  this._minPtDist.initialize();\n  DistanceToPointFinder.computeDistance(this._geom, midPt, this._minPtDist);\n  this._maxPtDist.setMaximum(this._minPtDist);\n};\nMaxMidpointDistanceFilter.prototype.isDone = function isDone () {\n  return false\n};\nMaxMidpointDistanceFilter.prototype.isGeometryChanged = function isGeometryChanged () {\n  return false\n};\nMaxMidpointDistanceFilter.prototype.getMaxPointDistance = function getMaxPointDistance () {\n  return this._maxPtDist\n};\nMaxMidpointDistanceFilter.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateSequenceFilter]\n};\nMaxMidpointDistanceFilter.prototype.getClass = function getClass () {\n  return MaxMidpointDistanceFilter\n};\n\nvar PolygonExtracter = function PolygonExtracter (comps) {\n  this._comps = comps || null;\n};\nPolygonExtracter.prototype.filter = function filter (geom) {\n  if (geom instanceof Polygon) { this._comps.add(geom); }\n};\nPolygonExtracter.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryFilter]\n};\nPolygonExtracter.prototype.getClass = function getClass () {\n  return PolygonExtracter\n};\nPolygonExtracter.getPolygons = function getPolygons () {\n  if (arguments.length === 1) {\n    var geom = arguments[0];\n    return PolygonExtracter.getPolygons(geom, new ArrayList())\n  } else if (arguments.length === 2) {\n    var geom$1 = arguments[0];\n    var list = arguments[1];\n    if (geom$1 instanceof Polygon) {\n      list.add(geom$1);\n    } else if (geom$1 instanceof GeometryCollection) {\n      geom$1.apply(new PolygonExtracter(list));\n    }\n    return list\n  }\n};\n\nvar LinearComponentExtracter = function LinearComponentExtracter () {\n  this._lines = null;\n  this._isForcedToLineString = false;\n  if (arguments.length === 1) {\n    var lines = arguments[0];\n    this._lines = lines;\n  } else if (arguments.length === 2) {\n    var lines$1 = arguments[0];\n    var isForcedToLineString = arguments[1];\n    this._lines = lines$1;\n    this._isForcedToLineString = isForcedToLineString;\n  }\n};\nLinearComponentExtracter.prototype.filter = function filter (geom) {\n  if (this._isForcedToLineString && geom instanceof LinearRing) {\n    var line = geom.getFactory().createLineString(geom.getCoordinateSequence());\n    this._lines.add(line);\n    return null\n  }\n  if (geom instanceof LineString) { this._lines.add(geom); }\n};\nLinearComponentExtracter.prototype.setForceToLineString = function setForceToLineString (isForcedToLineString) {\n  this._isForcedToLineString = isForcedToLineString;\n};\nLinearComponentExtracter.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryComponentFilter]\n};\nLinearComponentExtracter.prototype.getClass = function getClass () {\n  return LinearComponentExtracter\n};\nLinearComponentExtracter.getGeometry = function getGeometry () {\n  if (arguments.length === 1) {\n    var geom = arguments[0];\n    return geom.getFactory().buildGeometry(LinearComponentExtracter.getLines(geom))\n  } else if (arguments.length === 2) {\n    var geom$1 = arguments[0];\n    var forceToLineString = arguments[1];\n    return geom$1.getFactory().buildGeometry(LinearComponentExtracter.getLines(geom$1, forceToLineString))\n  }\n};\nLinearComponentExtracter.getLines = function getLines () {\n  if (arguments.length === 1) {\n    var geom = arguments[0];\n    return LinearComponentExtracter.getLines(geom, false)\n  } else if (arguments.length === 2) {\n    if (hasInterface(arguments[0], Collection) && hasInterface(arguments[1], Collection)) {\n      var geoms = arguments[0];\n      var lines$1 = arguments[1];\n      for (var i = geoms.iterator(); i.hasNext();) {\n        var g = i.next();\n        LinearComponentExtracter.getLines(g, lines$1);\n      }\n      return lines$1\n    } else if (arguments[0] instanceof Geometry && typeof arguments[1] === 'boolean') {\n      var geom$1 = arguments[0];\n      var forceToLineString = arguments[1];\n      var lines = new ArrayList();\n      geom$1.apply(new LinearComponentExtracter(lines, forceToLineString));\n      return lines\n    } else if (arguments[0] instanceof Geometry && hasInterface(arguments[1], Collection)) {\n      var geom$2 = arguments[0];\n      var lines$2 = arguments[1];\n      if (geom$2 instanceof LineString) {\n        lines$2.add(geom$2);\n      } else {\n        geom$2.apply(new LinearComponentExtracter(lines$2));\n      }\n      return lines$2\n    }\n  } else if (arguments.length === 3) {\n    if (typeof arguments[2] === 'boolean' && (hasInterface(arguments[0], Collection) && hasInterface(arguments[1], Collection))) {\n      var geoms$1 = arguments[0];\n      var lines$3 = arguments[1];\n      var forceToLineString$1 = arguments[2];\n      for (var i$1 = geoms$1.iterator(); i$1.hasNext();) {\n        var g$1 = i$1.next();\n        LinearComponentExtracter.getLines(g$1, lines$3, forceToLineString$1);\n      }\n      return lines$3\n    } else if (typeof arguments[2] === 'boolean' && (arguments[0] instanceof Geometry && hasInterface(arguments[1], Collection))) {\n      var geom$3 = arguments[0];\n      var lines$4 = arguments[1];\n      var forceToLineString$2 = arguments[2];\n      geom$3.apply(new LinearComponentExtracter(lines$4, forceToLineString$2));\n      return lines$4\n    }\n  }\n};\n\nvar PointLocator = function PointLocator () {\n  this._boundaryRule = BoundaryNodeRule.OGC_SFS_BOUNDARY_RULE;\n  this._isIn = null;\n  this._numBoundaries = null;\n  if (arguments.length === 0) {} else if (arguments.length === 1) {\n    var boundaryRule = arguments[0];\n    if (boundaryRule === null) { throw new IllegalArgumentException('Rule must be non-null') }\n    this._boundaryRule = boundaryRule;\n  }\n};\nPointLocator.prototype.locateInternal = function locateInternal () {\n    var this$1 = this;\n\n  if (arguments[0] instanceof Coordinate && arguments[1] instanceof Polygon) {\n    var p = arguments[0];\n    var poly = arguments[1];\n    if (poly.isEmpty()) { return Location.EXTERIOR }\n    var shell = poly.getExteriorRing();\n    var shellLoc = this.locateInPolygonRing(p, shell);\n    if (shellLoc === Location.EXTERIOR) { return Location.EXTERIOR }\n    if (shellLoc === Location.BOUNDARY) { return Location.BOUNDARY }\n    for (var i = 0; i < poly.getNumInteriorRing(); i++) {\n      var hole = poly.getInteriorRingN(i);\n      var holeLoc = this$1.locateInPolygonRing(p, hole);\n      if (holeLoc === Location.INTERIOR) { return Location.EXTERIOR }\n      if (holeLoc === Location.BOUNDARY) { return Location.BOUNDARY }\n    }\n    return Location.INTERIOR\n  } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof LineString) {\n    var p$1 = arguments[0];\n    var l = arguments[1];\n    if (!l.getEnvelopeInternal().intersects(p$1)) { return Location.EXTERIOR }\n    var pt = l.getCoordinates();\n    if (!l.isClosed()) {\n      if (p$1.equals(pt[0]) || p$1.equals(pt[pt.length - 1])) {\n        return Location.BOUNDARY\n      }\n    }\n    if (CGAlgorithms.isOnLine(p$1, pt)) { return Location.INTERIOR }\n    return Location.EXTERIOR\n  } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Point) {\n    var p$2 = arguments[0];\n    var pt$1 = arguments[1];\n    var ptCoord = pt$1.getCoordinate();\n    if (ptCoord.equals2D(p$2)) { return Location.INTERIOR }\n    return Location.EXTERIOR\n  }\n};\nPointLocator.prototype.locateInPolygonRing = function locateInPolygonRing (p, ring) {\n  if (!ring.getEnvelopeInternal().intersects(p)) { return Location.EXTERIOR }\n  return CGAlgorithms.locatePointInRing(p, ring.getCoordinates())\n};\nPointLocator.prototype.intersects = function intersects (p, geom) {\n  return this.locate(p, geom) !== Location.EXTERIOR\n};\nPointLocator.prototype.updateLocationInfo = function updateLocationInfo (loc) {\n  if (loc === Location.INTERIOR) { this._isIn = true; }\n  if (loc === Location.BOUNDARY) { this._numBoundaries++; }\n};\nPointLocator.prototype.computeLocation = function computeLocation (p, geom) {\n    var this$1 = this;\n\n  if (geom instanceof Point) {\n    this.updateLocationInfo(this.locateInternal(p, geom));\n  }\n  if (geom instanceof LineString) {\n    this.updateLocationInfo(this.locateInternal(p, geom));\n  } else if (geom instanceof Polygon) {\n    this.updateLocationInfo(this.locateInternal(p, geom));\n  } else if (geom instanceof MultiLineString) {\n    var ml = geom;\n    for (var i = 0; i < ml.getNumGeometries(); i++) {\n      var l = ml.getGeometryN(i);\n      this$1.updateLocationInfo(this$1.locateInternal(p, l));\n    }\n  } else if (geom instanceof MultiPolygon) {\n    var mpoly = geom;\n    for (var i$1 = 0; i$1 < mpoly.getNumGeometries(); i$1++) {\n      var poly = mpoly.getGeometryN(i$1);\n      this$1.updateLocationInfo(this$1.locateInternal(p, poly));\n    }\n  } else if (geom instanceof GeometryCollection) {\n    var geomi = new GeometryCollectionIterator(geom);\n    while (geomi.hasNext()) {\n      var g2 = geomi.next();\n      if (g2 !== geom) { this$1.computeLocation(p, g2); }\n    }\n  }\n};\nPointLocator.prototype.locate = function locate (p, geom) {\n  if (geom.isEmpty()) { return Location.EXTERIOR }\n  if (geom instanceof LineString) {\n    return this.locateInternal(p, geom)\n  } else if (geom instanceof Polygon) {\n    return this.locateInternal(p, geom)\n  }\n  this._isIn = false;\n  this._numBoundaries = 0;\n  this.computeLocation(p, geom);\n  if (this._boundaryRule.isInBoundary(this._numBoundaries)) { return Location.BOUNDARY }\n  if (this._numBoundaries > 0 || this._isIn) { return Location.INTERIOR }\n  return Location.EXTERIOR\n};\nPointLocator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPointLocator.prototype.getClass = function getClass () {\n  return PointLocator\n};\n\nvar GeometryLocation = function GeometryLocation () {\n  this._component = null;\n  this._segIndex = null;\n  this._pt = null;\n  if (arguments.length === 2) {\n    var component = arguments[0];\n    var pt = arguments[1];\n    GeometryLocation.call(this, component, GeometryLocation.INSIDE_AREA, pt);\n  } else if (arguments.length === 3) {\n    var component$1 = arguments[0];\n    var segIndex = arguments[1];\n    var pt$1 = arguments[2];\n    this._component = component$1;\n    this._segIndex = segIndex;\n    this._pt = pt$1;\n  }\n};\n\nvar staticAccessors$38 = { INSIDE_AREA: { configurable: true } };\nGeometryLocation.prototype.isInsideArea = function isInsideArea () {\n  return this._segIndex === GeometryLocation.INSIDE_AREA\n};\nGeometryLocation.prototype.getCoordinate = function getCoordinate () {\n  return this._pt\n};\nGeometryLocation.prototype.getGeometryComponent = function getGeometryComponent () {\n  return this._component\n};\nGeometryLocation.prototype.getSegmentIndex = function getSegmentIndex () {\n  return this._segIndex\n};\nGeometryLocation.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryLocation.prototype.getClass = function getClass () {\n  return GeometryLocation\n};\nstaticAccessors$38.INSIDE_AREA.get = function () { return -1 };\n\nObject.defineProperties( GeometryLocation, staticAccessors$38 );\n\nvar PointExtracter = function PointExtracter (pts) {\n  this._pts = pts || null;\n};\nPointExtracter.prototype.filter = function filter (geom) {\n  if (geom instanceof Point) { this._pts.add(geom); }\n};\nPointExtracter.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryFilter]\n};\nPointExtracter.prototype.getClass = function getClass () {\n  return PointExtracter\n};\nPointExtracter.getPoints = function getPoints () {\n  if (arguments.length === 1) {\n    var geom = arguments[0];\n    if (geom instanceof Point) {\n      return Collections.singletonList(geom)\n    }\n    return PointExtracter.getPoints(geom, new ArrayList())\n  } else if (arguments.length === 2) {\n    var geom$1 = arguments[0];\n    var list = arguments[1];\n    if (geom$1 instanceof Point) {\n      list.add(geom$1);\n    } else if (geom$1 instanceof GeometryCollection) {\n      geom$1.apply(new PointExtracter(list));\n    }\n    return list\n  }\n};\n\nvar ConnectedElementLocationFilter = function ConnectedElementLocationFilter () {\n  this._locations = null;\n  var locations = arguments[0];\n  this._locations = locations;\n};\nConnectedElementLocationFilter.prototype.filter = function filter (geom) {\n  if (geom instanceof Point || geom instanceof LineString || geom instanceof Polygon) { this._locations.add(new GeometryLocation(geom, 0, geom.getCoordinate())); }\n};\nConnectedElementLocationFilter.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryFilter]\n};\nConnectedElementLocationFilter.prototype.getClass = function getClass () {\n  return ConnectedElementLocationFilter\n};\nConnectedElementLocationFilter.getLocations = function getLocations (geom) {\n  var locations = new ArrayList();\n  geom.apply(new ConnectedElementLocationFilter(locations));\n  return locations\n};\n\nvar DistanceOp = function DistanceOp () {\n  this._geom = null;\n  this._terminateDistance = 0.0;\n  this._ptLocator = new PointLocator();\n  this._minDistanceLocation = null;\n  this._minDistance = Double.MAX_VALUE;\n  if (arguments.length === 2) {\n    var g0 = arguments[0];\n    var g1 = arguments[1];\n    this._geom = [g0, g1];\n    this._terminateDistance = 0.0;\n  } else if (arguments.length === 3) {\n    var g0$1 = arguments[0];\n    var g1$1 = arguments[1];\n    var terminateDistance = arguments[2];\n    this._geom = new Array(2).fill(null);\n    this._geom[0] = g0$1;\n    this._geom[1] = g1$1;\n    this._terminateDistance = terminateDistance;\n  }\n};\nDistanceOp.prototype.computeContainmentDistance = function computeContainmentDistance () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    var locPtPoly = new Array(2).fill(null);\n    this.computeContainmentDistance(0, locPtPoly);\n    if (this._minDistance <= this._terminateDistance) { return null }\n    this.computeContainmentDistance(1, locPtPoly);\n  } else if (arguments.length === 2) {\n    var polyGeomIndex = arguments[0];\n    var locPtPoly$1 = arguments[1];\n    var locationsIndex = 1 - polyGeomIndex;\n    var polys = PolygonExtracter.getPolygons(this._geom[polyGeomIndex]);\n    if (polys.size() > 0) {\n      var insideLocs = ConnectedElementLocationFilter.getLocations(this._geom[locationsIndex]);\n      this.computeContainmentDistance(insideLocs, polys, locPtPoly$1);\n      if (this._minDistance <= this._terminateDistance) {\n        this._minDistanceLocation[locationsIndex] = locPtPoly$1[0];\n        this._minDistanceLocation[polyGeomIndex] = locPtPoly$1[1];\n        return null\n      }\n    }\n  } else if (arguments.length === 3) {\n    if (arguments[2] instanceof Array && (hasInterface(arguments[0], List) && hasInterface(arguments[1], List))) {\n      var locs = arguments[0];\n      var polys$1 = arguments[1];\n      var locPtPoly$2 = arguments[2];\n      for (var i = 0; i < locs.size(); i++) {\n        var loc = locs.get(i);\n        for (var j = 0; j < polys$1.size(); j++) {\n          this$1.computeContainmentDistance(loc, polys$1.get(j), locPtPoly$2);\n          if (this$1._minDistance <= this$1._terminateDistance) { return null }\n        }\n      }\n    } else if (arguments[2] instanceof Array && (arguments[0] instanceof GeometryLocation && arguments[1] instanceof Polygon)) {\n      var ptLoc = arguments[0];\n      var poly = arguments[1];\n      var locPtPoly$3 = arguments[2];\n      var pt = ptLoc.getCoordinate();\n      if (Location.EXTERIOR !== this._ptLocator.locate(pt, poly)) {\n        this._minDistance = 0.0;\n        locPtPoly$3[0] = ptLoc;\n        locPtPoly$3[1] = new GeometryLocation(poly, pt);\n\n        return null\n      }\n    }\n  }\n};\nDistanceOp.prototype.computeMinDistanceLinesPoints = function computeMinDistanceLinesPoints (lines, points, locGeom) {\n    var this$1 = this;\n\n  for (var i = 0; i < lines.size(); i++) {\n    var line = lines.get(i);\n    for (var j = 0; j < points.size(); j++) {\n      var pt = points.get(j);\n      this$1.computeMinDistance(line, pt, locGeom);\n      if (this$1._minDistance <= this$1._terminateDistance) { return null }\n    }\n  }\n};\nDistanceOp.prototype.computeFacetDistance = function computeFacetDistance () {\n  var locGeom = new Array(2).fill(null);\n  var lines0 = LinearComponentExtracter.getLines(this._geom[0]);\n  var lines1 = LinearComponentExtracter.getLines(this._geom[1]);\n  var pts0 = PointExtracter.getPoints(this._geom[0]);\n  var pts1 = PointExtracter.getPoints(this._geom[1]);\n  this.computeMinDistanceLines(lines0, lines1, locGeom);\n  this.updateMinDistance(locGeom, false);\n  if (this._minDistance <= this._terminateDistance) { return null }\n  locGeom[0] = null;\n  locGeom[1] = null;\n  this.computeMinDistanceLinesPoints(lines0, pts1, locGeom);\n  this.updateMinDistance(locGeom, false);\n  if (this._minDistance <= this._terminateDistance) { return null }\n  locGeom[0] = null;\n  locGeom[1] = null;\n  this.computeMinDistanceLinesPoints(lines1, pts0, locGeom);\n  this.updateMinDistance(locGeom, true);\n  if (this._minDistance <= this._terminateDistance) { return null }\n  locGeom[0] = null;\n  locGeom[1] = null;\n  this.computeMinDistancePoints(pts0, pts1, locGeom);\n  this.updateMinDistance(locGeom, false);\n};\nDistanceOp.prototype.nearestLocations = function nearestLocations () {\n  this.computeMinDistance();\n  return this._minDistanceLocation\n};\nDistanceOp.prototype.updateMinDistance = function updateMinDistance (locGeom, flip) {\n  if (locGeom[0] === null) { return null }\n  if (flip) {\n    this._minDistanceLocation[0] = locGeom[1];\n    this._minDistanceLocation[1] = locGeom[0];\n  } else {\n    this._minDistanceLocation[0] = locGeom[0];\n    this._minDistanceLocation[1] = locGeom[1];\n  }\n};\nDistanceOp.prototype.nearestPoints = function nearestPoints () {\n  this.computeMinDistance();\n  var nearestPts = [this._minDistanceLocation[0].getCoordinate(), this._minDistanceLocation[1].getCoordinate()];\n  return nearestPts\n};\nDistanceOp.prototype.computeMinDistance = function computeMinDistance () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    if (this._minDistanceLocation !== null) { return null }\n    this._minDistanceLocation = new Array(2).fill(null);\n    this.computeContainmentDistance();\n    if (this._minDistance <= this._terminateDistance) { return null }\n    this.computeFacetDistance();\n  } else if (arguments.length === 3) {\n    if (arguments[2] instanceof Array && (arguments[0] instanceof LineString && arguments[1] instanceof Point)) {\n      var line = arguments[0];\n      var pt = arguments[1];\n      var locGeom = arguments[2];\n      if (line.getEnvelopeInternal().distance(pt.getEnvelopeInternal()) > this._minDistance) { return null }\n      var coord0 = line.getCoordinates();\n      var coord = pt.getCoordinate();\n      for (var i = 0; i < coord0.length - 1; i++) {\n        var dist = CGAlgorithms.distancePointLine(coord, coord0[i], coord0[i + 1]);\n        if (dist < this$1._minDistance) {\n          this$1._minDistance = dist;\n          var seg = new LineSegment(coord0[i], coord0[i + 1]);\n          var segClosestPoint = seg.closestPoint(coord);\n          locGeom[0] = new GeometryLocation(line, i, segClosestPoint);\n          locGeom[1] = new GeometryLocation(pt, 0, coord);\n        }\n        if (this$1._minDistance <= this$1._terminateDistance) { return null }\n      }\n    } else if (arguments[2] instanceof Array && (arguments[0] instanceof LineString && arguments[1] instanceof LineString)) {\n      var line0 = arguments[0];\n      var line1 = arguments[1];\n      var locGeom$1 = arguments[2];\n      if (line0.getEnvelopeInternal().distance(line1.getEnvelopeInternal()) > this._minDistance) { return null }\n      var coord0$1 = line0.getCoordinates();\n      var coord1 = line1.getCoordinates();\n      for (var i$1 = 0; i$1 < coord0$1.length - 1; i$1++) {\n        for (var j = 0; j < coord1.length - 1; j++) {\n          var dist$1 = CGAlgorithms.distanceLineLine(coord0$1[i$1], coord0$1[i$1 + 1], coord1[j], coord1[j + 1]);\n          if (dist$1 < this$1._minDistance) {\n            this$1._minDistance = dist$1;\n            var seg0 = new LineSegment(coord0$1[i$1], coord0$1[i$1 + 1]);\n            var seg1 = new LineSegment(coord1[j], coord1[j + 1]);\n            var closestPt = seg0.closestPoints(seg1);\n            locGeom$1[0] = new GeometryLocation(line0, i$1, closestPt[0]);\n            locGeom$1[1] = new GeometryLocation(line1, j, closestPt[1]);\n          }\n          if (this$1._minDistance <= this$1._terminateDistance) { return null }\n        }\n      }\n    }\n  }\n};\nDistanceOp.prototype.computeMinDistancePoints = function computeMinDistancePoints (points0, points1, locGeom) {\n    var this$1 = this;\n\n  for (var i = 0; i < points0.size(); i++) {\n    var pt0 = points0.get(i);\n    for (var j = 0; j < points1.size(); j++) {\n      var pt1 = points1.get(j);\n      var dist = pt0.getCoordinate().distance(pt1.getCoordinate());\n      if (dist < this$1._minDistance) {\n        this$1._minDistance = dist;\n        locGeom[0] = new GeometryLocation(pt0, 0, pt0.getCoordinate());\n        locGeom[1] = new GeometryLocation(pt1, 0, pt1.getCoordinate());\n      }\n      if (this$1._minDistance <= this$1._terminateDistance) { return null }\n    }\n  }\n};\nDistanceOp.prototype.distance = function distance () {\n  if (this._geom[0] === null || this._geom[1] === null) { throw new IllegalArgumentException('null geometries are not supported') }\n  if (this._geom[0].isEmpty() || this._geom[1].isEmpty()) { return 0.0 }\n  this.computeMinDistance();\n  return this._minDistance\n};\nDistanceOp.prototype.computeMinDistanceLines = function computeMinDistanceLines (lines0, lines1, locGeom) {\n    var this$1 = this;\n\n  for (var i = 0; i < lines0.size(); i++) {\n    var line0 = lines0.get(i);\n    for (var j = 0; j < lines1.size(); j++) {\n      var line1 = lines1.get(j);\n      this$1.computeMinDistance(line0, line1, locGeom);\n      if (this$1._minDistance <= this$1._terminateDistance) { return null }\n    }\n  }\n};\nDistanceOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nDistanceOp.prototype.getClass = function getClass () {\n  return DistanceOp\n};\nDistanceOp.distance = function distance (g0, g1) {\n  var distOp = new DistanceOp(g0, g1);\n  return distOp.distance()\n};\nDistanceOp.isWithinDistance = function isWithinDistance (g0, g1, distance) {\n  var distOp = new DistanceOp(g0, g1, distance);\n  return distOp.distance() <= distance\n};\nDistanceOp.nearestPoints = function nearestPoints (g0, g1) {\n  var distOp = new DistanceOp(g0, g1);\n  return distOp.nearestPoints()\n};\n\nvar PointPairDistance$2 = function PointPairDistance () {\n  this._pt = [new Coordinate(), new Coordinate()];\n  this._distance = Double.NaN;\n  this._isNull = true;\n};\nPointPairDistance$2.prototype.getCoordinates = function getCoordinates () {\n  return this._pt\n};\nPointPairDistance$2.prototype.getCoordinate = function getCoordinate (i) {\n  return this._pt[i]\n};\nPointPairDistance$2.prototype.setMinimum = function setMinimum () {\n  if (arguments.length === 1) {\n    var ptDist = arguments[0];\n    this.setMinimum(ptDist._pt[0], ptDist._pt[1]);\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    if (this._isNull) {\n      this.initialize(p0, p1);\n      return null\n    }\n    var dist = p0.distance(p1);\n    if (dist < this._distance) { this.initialize(p0, p1, dist); }\n  }\n};\nPointPairDistance$2.prototype.initialize = function initialize () {\n  if (arguments.length === 0) {\n    this._isNull = true;\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    this._pt[0].setCoordinate(p0);\n    this._pt[1].setCoordinate(p1);\n    this._distance = p0.distance(p1);\n    this._isNull = false;\n  } else if (arguments.length === 3) {\n    var p0$1 = arguments[0];\n    var p1$1 = arguments[1];\n    var distance = arguments[2];\n    this._pt[0].setCoordinate(p0$1);\n    this._pt[1].setCoordinate(p1$1);\n    this._distance = distance;\n    this._isNull = false;\n  }\n};\nPointPairDistance$2.prototype.toString = function toString () {\n  return WKTWriter.toLineString(this._pt[0], this._pt[1])\n};\nPointPairDistance$2.prototype.getDistance = function getDistance () {\n  return this._distance\n};\nPointPairDistance$2.prototype.setMaximum = function setMaximum () {\n  if (arguments.length === 1) {\n    var ptDist = arguments[0];\n    this.setMaximum(ptDist._pt[0], ptDist._pt[1]);\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    if (this._isNull) {\n      this.initialize(p0, p1);\n      return null\n    }\n    var dist = p0.distance(p1);\n    if (dist > this._distance) { this.initialize(p0, p1, dist); }\n  }\n};\nPointPairDistance$2.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPointPairDistance$2.prototype.getClass = function getClass () {\n  return PointPairDistance$2\n};\n\nvar DistanceToPoint = function DistanceToPoint () {};\n\nDistanceToPoint.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nDistanceToPoint.prototype.getClass = function getClass () {\n  return DistanceToPoint\n};\nDistanceToPoint.computeDistance = function computeDistance () {\n  if (arguments[2] instanceof PointPairDistance$2 && (arguments[0] instanceof LineString && arguments[1] instanceof Coordinate)) {\n    var line = arguments[0];\n    var pt = arguments[1];\n    var ptDist = arguments[2];\n    var tempSegment = new LineSegment();\n    var coords = line.getCoordinates();\n    for (var i = 0; i < coords.length - 1; i++) {\n      tempSegment.setCoordinates(coords[i], coords[i + 1]);\n      var closestPt = tempSegment.closestPoint(pt);\n      ptDist.setMinimum(closestPt, pt);\n    }\n  } else if (arguments[2] instanceof PointPairDistance$2 && (arguments[0] instanceof Polygon && arguments[1] instanceof Coordinate)) {\n    var poly = arguments[0];\n    var pt$1 = arguments[1];\n    var ptDist$1 = arguments[2];\n    DistanceToPoint.computeDistance(poly.getExteriorRing(), pt$1, ptDist$1);\n    for (var i$1 = 0; i$1 < poly.getNumInteriorRing(); i$1++) {\n      DistanceToPoint.computeDistance(poly.getInteriorRingN(i$1), pt$1, ptDist$1);\n    }\n  } else if (arguments[2] instanceof PointPairDistance$2 && (arguments[0] instanceof Geometry && arguments[1] instanceof Coordinate)) {\n    var geom = arguments[0];\n    var pt$2 = arguments[1];\n    var ptDist$2 = arguments[2];\n    if (geom instanceof LineString) {\n      DistanceToPoint.computeDistance(geom, pt$2, ptDist$2);\n    } else if (geom instanceof Polygon) {\n      DistanceToPoint.computeDistance(geom, pt$2, ptDist$2);\n    } else if (geom instanceof GeometryCollection) {\n      var gc = geom;\n      for (var i$2 = 0; i$2 < gc.getNumGeometries(); i$2++) {\n        var g = gc.getGeometryN(i$2);\n        DistanceToPoint.computeDistance(g, pt$2, ptDist$2);\n      }\n    } else {\n      ptDist$2.setMinimum(geom.getCoordinate(), pt$2);\n    }\n  } else if (arguments[2] instanceof PointPairDistance$2 && (arguments[0] instanceof LineSegment && arguments[1] instanceof Coordinate)) {\n    var segment = arguments[0];\n    var pt$3 = arguments[1];\n    var ptDist$3 = arguments[2];\n    var closestPt$1 = segment.closestPoint(pt$3);\n    ptDist$3.setMinimum(closestPt$1, pt$3);\n  }\n};\n\nvar DiscreteHausdorffDistance = function DiscreteHausdorffDistance () {\n  this._g0 = null;\n  this._g1 = null;\n  this._ptDist = new PointPairDistance$2();\n  this._densifyFrac = 0.0;\n  var g0 = arguments[0];\n  var g1 = arguments[1];\n  this._g0 = g0;\n  this._g1 = g1;\n};\n\nvar staticAccessors$39 = { MaxPointDistanceFilter: { configurable: true },MaxDensifiedByFractionDistanceFilter: { configurable: true } };\nDiscreteHausdorffDistance.prototype.getCoordinates = function getCoordinates () {\n  return this._ptDist.getCoordinates()\n};\nDiscreteHausdorffDistance.prototype.setDensifyFraction = function setDensifyFraction (densifyFrac) {\n  if (densifyFrac > 1.0 || densifyFrac <= 0.0) { throw new IllegalArgumentException('Fraction is not in range (0.0 - 1.0]') }\n  this._densifyFrac = densifyFrac;\n};\nDiscreteHausdorffDistance.prototype.compute = function compute (g0, g1) {\n  this.computeOrientedDistance(g0, g1, this._ptDist);\n  this.computeOrientedDistance(g1, g0, this._ptDist);\n};\nDiscreteHausdorffDistance.prototype.distance = function distance () {\n  this.compute(this._g0, this._g1);\n  return this._ptDist.getDistance()\n};\nDiscreteHausdorffDistance.prototype.computeOrientedDistance = function computeOrientedDistance (discreteGeom, geom, ptDist) {\n  var distFilter = new MaxPointDistanceFilter$1(geom);\n  discreteGeom.apply(distFilter);\n  ptDist.setMaximum(distFilter.getMaxPointDistance());\n  if (this._densifyFrac > 0) {\n    var fracFilter = new MaxDensifiedByFractionDistanceFilter(geom, this._densifyFrac);\n    discreteGeom.apply(fracFilter);\n    ptDist.setMaximum(fracFilter.getMaxPointDistance());\n  }\n};\nDiscreteHausdorffDistance.prototype.orientedDistance = function orientedDistance () {\n  this.computeOrientedDistance(this._g0, this._g1, this._ptDist);\n  return this._ptDist.getDistance()\n};\nDiscreteHausdorffDistance.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nDiscreteHausdorffDistance.prototype.getClass = function getClass () {\n  return DiscreteHausdorffDistance\n};\nDiscreteHausdorffDistance.distance = function distance () {\n  if (arguments.length === 2) {\n    var g0 = arguments[0];\n    var g1 = arguments[1];\n    var dist = new DiscreteHausdorffDistance(g0, g1);\n    return dist.distance()\n  } else if (arguments.length === 3) {\n    var g0$1 = arguments[0];\n    var g1$1 = arguments[1];\n    var densifyFrac = arguments[2];\n    var dist$1 = new DiscreteHausdorffDistance(g0$1, g1$1);\n    dist$1.setDensifyFraction(densifyFrac);\n    return dist$1.distance()\n  }\n};\nstaticAccessors$39.MaxPointDistanceFilter.get = function () { return MaxPointDistanceFilter$1 };\nstaticAccessors$39.MaxDensifiedByFractionDistanceFilter.get = function () { return MaxDensifiedByFractionDistanceFilter };\n\nObject.defineProperties( DiscreteHausdorffDistance, staticAccessors$39 );\n\nvar MaxPointDistanceFilter$1 = function MaxPointDistanceFilter () {\n  this._maxPtDist = new PointPairDistance$2();\n  this._minPtDist = new PointPairDistance$2();\n  this._euclideanDist = new DistanceToPoint();\n  this._geom = null;\n  var geom = arguments[0];\n  this._geom = geom;\n};\nMaxPointDistanceFilter$1.prototype.filter = function filter (pt) {\n  this._minPtDist.initialize();\n  DistanceToPoint.computeDistance(this._geom, pt, this._minPtDist);\n  this._maxPtDist.setMaximum(this._minPtDist);\n};\nMaxPointDistanceFilter$1.prototype.getMaxPointDistance = function getMaxPointDistance () {\n  return this._maxPtDist\n};\nMaxPointDistanceFilter$1.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateFilter]\n};\nMaxPointDistanceFilter$1.prototype.getClass = function getClass () {\n  return MaxPointDistanceFilter$1\n};\n\nvar MaxDensifiedByFractionDistanceFilter = function MaxDensifiedByFractionDistanceFilter () {\n  this._maxPtDist = new PointPairDistance$2();\n  this._minPtDist = new PointPairDistance$2();\n  this._geom = null;\n  this._numSubSegs = 0;\n  var geom = arguments[0];\n  var fraction = arguments[1];\n  this._geom = geom;\n  this._numSubSegs = Math.trunc(Math.round(1.0 / fraction));\n};\nMaxDensifiedByFractionDistanceFilter.prototype.filter = function filter (seq, index) {\n    var this$1 = this;\n\n  if (index === 0) { return null }\n  var p0 = seq.getCoordinate(index - 1);\n  var p1 = seq.getCoordinate(index);\n  var delx = (p1.x - p0.x) / this._numSubSegs;\n  var dely = (p1.y - p0.y) / this._numSubSegs;\n  for (var i = 0; i < this._numSubSegs; i++) {\n    var x = p0.x + i * delx;\n    var y = p0.y + i * dely;\n    var pt = new Coordinate(x, y);\n    this$1._minPtDist.initialize();\n    DistanceToPoint.computeDistance(this$1._geom, pt, this$1._minPtDist);\n    this$1._maxPtDist.setMaximum(this$1._minPtDist);\n  }\n};\nMaxDensifiedByFractionDistanceFilter.prototype.isDone = function isDone () {\n  return false\n};\nMaxDensifiedByFractionDistanceFilter.prototype.isGeometryChanged = function isGeometryChanged () {\n  return false\n};\nMaxDensifiedByFractionDistanceFilter.prototype.getMaxPointDistance = function getMaxPointDistance () {\n  return this._maxPtDist\n};\nMaxDensifiedByFractionDistanceFilter.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateSequenceFilter]\n};\nMaxDensifiedByFractionDistanceFilter.prototype.getClass = function getClass () {\n  return MaxDensifiedByFractionDistanceFilter\n};\n\nvar BufferDistanceValidator = function BufferDistanceValidator (input, bufDistance, result) {\n  this._minValidDistance = null;\n  this._maxValidDistance = null;\n  this._minDistanceFound = null;\n  this._maxDistanceFound = null;\n  this._isValid = true;\n  this._errMsg = null;\n  this._errorLocation = null;\n  this._errorIndicator = null;\n  this._input = input || null;\n  this._bufDistance = bufDistance || null;\n  this._result = result || null;\n};\n\nvar staticAccessors$37 = { VERBOSE: { configurable: true },MAX_DISTANCE_DIFF_FRAC: { configurable: true } };\nBufferDistanceValidator.prototype.checkMaximumDistance = function checkMaximumDistance (input, bufCurve, maxDist) {\n  var haus = new DiscreteHausdorffDistance(bufCurve, input);\n  haus.setDensifyFraction(0.25);\n  this._maxDistanceFound = haus.orientedDistance();\n  if (this._maxDistanceFound > maxDist) {\n    this._isValid = false;\n    var pts = haus.getCoordinates();\n    this._errorLocation = pts[1];\n    this._errorIndicator = input.getFactory().createLineString(pts);\n    this._errMsg = 'Distance between buffer curve and input is too large (' + this._maxDistanceFound + ' at ' + WKTWriter.toLineString(pts[0], pts[1]) + ')';\n  }\n};\nBufferDistanceValidator.prototype.isValid = function isValid () {\n  var posDistance = Math.abs(this._bufDistance);\n  var distDelta = BufferDistanceValidator.MAX_DISTANCE_DIFF_FRAC * posDistance;\n  this._minValidDistance = posDistance - distDelta;\n  this._maxValidDistance = posDistance + distDelta;\n  if (this._input.isEmpty() || this._result.isEmpty()) { return true }\n  if (this._bufDistance > 0.0) {\n    this.checkPositiveValid();\n  } else {\n    this.checkNegativeValid();\n  }\n  if (BufferDistanceValidator.VERBOSE) {\n    System.out.println('Min Dist= ' + this._minDistanceFound + '  err= ' + (1.0 - this._minDistanceFound / this._bufDistance) + '  Max Dist= ' + this._maxDistanceFound + '  err= ' + (this._maxDistanceFound / this._bufDistance - 1.0));\n  }\n  return this._isValid\n};\nBufferDistanceValidator.prototype.checkNegativeValid = function checkNegativeValid () {\n  if (!(this._input instanceof Polygon || this._input instanceof MultiPolygon || this._input instanceof GeometryCollection)) {\n    return null\n  }\n  var inputCurve = this.getPolygonLines(this._input);\n  this.checkMinimumDistance(inputCurve, this._result, this._minValidDistance);\n  if (!this._isValid) { return null }\n  this.checkMaximumDistance(inputCurve, this._result, this._maxValidDistance);\n};\nBufferDistanceValidator.prototype.getErrorIndicator = function getErrorIndicator () {\n  return this._errorIndicator\n};\nBufferDistanceValidator.prototype.checkMinimumDistance = function checkMinimumDistance (g1, g2, minDist) {\n  var distOp = new DistanceOp(g1, g2, minDist);\n  this._minDistanceFound = distOp.distance();\n  if (this._minDistanceFound < minDist) {\n    this._isValid = false;\n    var pts = distOp.nearestPoints();\n    this._errorLocation = distOp.nearestPoints()[1];\n    this._errorIndicator = g1.getFactory().createLineString(pts);\n    this._errMsg = 'Distance between buffer curve and input is too small (' + this._minDistanceFound + ' at ' + WKTWriter.toLineString(pts[0], pts[1]) + ' )';\n  }\n};\nBufferDistanceValidator.prototype.checkPositiveValid = function checkPositiveValid () {\n  var bufCurve = this._result.getBoundary();\n  this.checkMinimumDistance(this._input, bufCurve, this._minValidDistance);\n  if (!this._isValid) { return null }\n  this.checkMaximumDistance(this._input, bufCurve, this._maxValidDistance);\n};\nBufferDistanceValidator.prototype.getErrorLocation = function getErrorLocation () {\n  return this._errorLocation\n};\nBufferDistanceValidator.prototype.getPolygonLines = function getPolygonLines (g) {\n  var lines = new ArrayList();\n  var lineExtracter = new LinearComponentExtracter(lines);\n  var polys = PolygonExtracter.getPolygons(g);\n  for (var i = polys.iterator(); i.hasNext();) {\n    var poly = i.next();\n    poly.apply(lineExtracter);\n  }\n  return g.getFactory().buildGeometry(lines)\n};\nBufferDistanceValidator.prototype.getErrorMessage = function getErrorMessage () {\n  return this._errMsg\n};\nBufferDistanceValidator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferDistanceValidator.prototype.getClass = function getClass () {\n  return BufferDistanceValidator\n};\nstaticAccessors$37.VERBOSE.get = function () { return false };\nstaticAccessors$37.MAX_DISTANCE_DIFF_FRAC.get = function () { return 0.012 };\n\nObject.defineProperties( BufferDistanceValidator, staticAccessors$37 );\n\nvar BufferResultValidator = function BufferResultValidator (input, distance, result) {\n  this._isValid = true;\n  this._errorMsg = null;\n  this._errorLocation = null;\n  this._errorIndicator = null;\n  this._input = input || null;\n  this._distance = distance || null;\n  this._result = result || null;\n};\n\nvar staticAccessors$40 = { VERBOSE: { configurable: true },MAX_ENV_DIFF_FRAC: { configurable: true } };\nBufferResultValidator.prototype.isValid = function isValid () {\n  this.checkPolygonal();\n  if (!this._isValid) { return this._isValid }\n  this.checkExpectedEmpty();\n  if (!this._isValid) { return this._isValid }\n  this.checkEnvelope();\n  if (!this._isValid) { return this._isValid }\n  this.checkArea();\n  if (!this._isValid) { return this._isValid }\n  this.checkDistance();\n  return this._isValid\n};\nBufferResultValidator.prototype.checkEnvelope = function checkEnvelope () {\n  if (this._distance < 0.0) { return null }\n  var padding = this._distance * BufferResultValidator.MAX_ENV_DIFF_FRAC;\n  if (padding === 0.0) { padding = 0.001; }\n  var expectedEnv = new Envelope(this._input.getEnvelopeInternal());\n  expectedEnv.expandBy(this._distance);\n  var bufEnv = new Envelope(this._result.getEnvelopeInternal());\n  bufEnv.expandBy(padding);\n  if (!bufEnv.contains(expectedEnv)) {\n    this._isValid = false;\n    this._errorMsg = 'Buffer envelope is incorrect';\n    this._errorIndicator = this._input.getFactory().toGeometry(bufEnv);\n  }\n  this.report('Envelope');\n};\nBufferResultValidator.prototype.checkDistance = function checkDistance () {\n  var distValid = new BufferDistanceValidator(this._input, this._distance, this._result);\n  if (!distValid.isValid()) {\n    this._isValid = false;\n    this._errorMsg = distValid.getErrorMessage();\n    this._errorLocation = distValid.getErrorLocation();\n    this._errorIndicator = distValid.getErrorIndicator();\n  }\n  this.report('Distance');\n};\nBufferResultValidator.prototype.checkArea = function checkArea () {\n  var inputArea = this._input.getArea();\n  var resultArea = this._result.getArea();\n  if (this._distance > 0.0 && inputArea > resultArea) {\n    this._isValid = false;\n    this._errorMsg = 'Area of positive buffer is smaller than input';\n    this._errorIndicator = this._result;\n  }\n  if (this._distance < 0.0 && inputArea < resultArea) {\n    this._isValid = false;\n    this._errorMsg = 'Area of negative buffer is larger than input';\n    this._errorIndicator = this._result;\n  }\n  this.report('Area');\n};\nBufferResultValidator.prototype.checkPolygonal = function checkPolygonal () {\n  if (!(this._result instanceof Polygon || this._result instanceof MultiPolygon)) { this._isValid = false; }\n  this._errorMsg = 'Result is not polygonal';\n  this._errorIndicator = this._result;\n  this.report('Polygonal');\n};\nBufferResultValidator.prototype.getErrorIndicator = function getErrorIndicator () {\n  return this._errorIndicator\n};\nBufferResultValidator.prototype.getErrorLocation = function getErrorLocation () {\n  return this._errorLocation\n};\nBufferResultValidator.prototype.checkExpectedEmpty = function checkExpectedEmpty () {\n  if (this._input.getDimension() >= 2) { return null }\n  if (this._distance > 0.0) { return null }\n  if (!this._result.isEmpty()) {\n    this._isValid = false;\n    this._errorMsg = 'Result is non-empty';\n    this._errorIndicator = this._result;\n  }\n  this.report('ExpectedEmpty');\n};\nBufferResultValidator.prototype.report = function report (checkName) {\n  if (!BufferResultValidator.VERBOSE) { return null }\n  System.out.println('Check ' + checkName + ': ' + (this._isValid ? 'passed' : 'FAILED'));\n};\nBufferResultValidator.prototype.getErrorMessage = function getErrorMessage () {\n  return this._errorMsg\n};\nBufferResultValidator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferResultValidator.prototype.getClass = function getClass () {\n  return BufferResultValidator\n};\nBufferResultValidator.isValidMsg = function isValidMsg (g, distance, result) {\n  var validator = new BufferResultValidator(g, distance, result);\n  if (!validator.isValid()) { return validator.getErrorMessage() }\n  return null\n};\nBufferResultValidator.isValid = function isValid (g, distance, result) {\n  var validator = new BufferResultValidator(g, distance, result);\n  if (validator.isValid()) { return true }\n  return false\n};\nstaticAccessors$40.VERBOSE.get = function () { return false };\nstaticAccessors$40.MAX_ENV_DIFF_FRAC.get = function () { return 0.012 };\n\nObject.defineProperties( BufferResultValidator, staticAccessors$40 );\n\n// operation.buffer\n\nvar BasicSegmentString = function BasicSegmentString () {\n  this._pts = null;\n  this._data = null;\n  var pts = arguments[0];\n  var data = arguments[1];\n  this._pts = pts;\n  this._data = data;\n};\nBasicSegmentString.prototype.getCoordinates = function getCoordinates () {\n  return this._pts\n};\nBasicSegmentString.prototype.size = function size () {\n  return this._pts.length\n};\nBasicSegmentString.prototype.getCoordinate = function getCoordinate (i) {\n  return this._pts[i]\n};\nBasicSegmentString.prototype.isClosed = function isClosed () {\n  return this._pts[0].equals(this._pts[this._pts.length - 1])\n};\nBasicSegmentString.prototype.getSegmentOctant = function getSegmentOctant (index) {\n  if (index === this._pts.length - 1) { return -1 }\n  return Octant.octant(this.getCoordinate(index), this.getCoordinate(index + 1))\n};\nBasicSegmentString.prototype.setData = function setData (data) {\n  this._data = data;\n};\nBasicSegmentString.prototype.getData = function getData () {\n  return this._data\n};\nBasicSegmentString.prototype.toString = function toString () {\n  return WKTWriter.toLineString(new CoordinateArraySequence(this._pts))\n};\nBasicSegmentString.prototype.interfaces_ = function interfaces_ () {\n  return [SegmentString]\n};\nBasicSegmentString.prototype.getClass = function getClass () {\n  return BasicSegmentString\n};\n\nvar InteriorIntersectionFinder = function InteriorIntersectionFinder () {\n  this._findAllIntersections = false;\n  this._isCheckEndSegmentsOnly = false;\n  this._li = null;\n  this._interiorIntersection = null;\n  this._intSegments = null;\n  this._intersections = new ArrayList();\n  this._intersectionCount = 0;\n  this._keepIntersections = true;\n  var li = arguments[0];\n  this._li = li;\n  this._interiorIntersection = null;\n};\nInteriorIntersectionFinder.prototype.getInteriorIntersection = function getInteriorIntersection () {\n  return this._interiorIntersection\n};\nInteriorIntersectionFinder.prototype.setCheckEndSegmentsOnly = function setCheckEndSegmentsOnly (isCheckEndSegmentsOnly) {\n  this._isCheckEndSegmentsOnly = isCheckEndSegmentsOnly;\n};\nInteriorIntersectionFinder.prototype.getIntersectionSegments = function getIntersectionSegments () {\n  return this._intSegments\n};\nInteriorIntersectionFinder.prototype.count = function count () {\n  return this._intersectionCount\n};\nInteriorIntersectionFinder.prototype.getIntersections = function getIntersections () {\n  return this._intersections\n};\nInteriorIntersectionFinder.prototype.setFindAllIntersections = function setFindAllIntersections (findAllIntersections) {\n  this._findAllIntersections = findAllIntersections;\n};\nInteriorIntersectionFinder.prototype.setKeepIntersections = function setKeepIntersections (keepIntersections) {\n  this._keepIntersections = keepIntersections;\n};\nInteriorIntersectionFinder.prototype.processIntersections = function processIntersections (e0, segIndex0, e1, segIndex1) {\n  if (!this._findAllIntersections && this.hasIntersection()) { return null }\n  if (e0 === e1 && segIndex0 === segIndex1) { return null }\n  if (this._isCheckEndSegmentsOnly) {\n    var isEndSegPresent = this.isEndSegment(e0, segIndex0) || this.isEndSegment(e1, segIndex1);\n    if (!isEndSegPresent) { return null }\n  }\n  var p00 = e0.getCoordinates()[segIndex0];\n  var p01 = e0.getCoordinates()[segIndex0 + 1];\n  var p10 = e1.getCoordinates()[segIndex1];\n  var p11 = e1.getCoordinates()[segIndex1 + 1];\n  this._li.computeIntersection(p00, p01, p10, p11);\n  if (this._li.hasIntersection()) {\n    if (this._li.isInteriorIntersection()) {\n      this._intSegments = new Array(4).fill(null);\n      this._intSegments[0] = p00;\n      this._intSegments[1] = p01;\n      this._intSegments[2] = p10;\n      this._intSegments[3] = p11;\n      this._interiorIntersection = this._li.getIntersection(0);\n      if (this._keepIntersections) { this._intersections.add(this._interiorIntersection); }\n      this._intersectionCount++;\n    }\n  }\n};\nInteriorIntersectionFinder.prototype.isEndSegment = function isEndSegment (segStr, index) {\n  if (index === 0) { return true }\n  if (index >= segStr.size() - 2) { return true }\n  return false\n};\nInteriorIntersectionFinder.prototype.hasIntersection = function hasIntersection () {\n  return this._interiorIntersection !== null\n};\nInteriorIntersectionFinder.prototype.isDone = function isDone () {\n  if (this._findAllIntersections) { return false }\n  return this._interiorIntersection !== null\n};\nInteriorIntersectionFinder.prototype.interfaces_ = function interfaces_ () {\n  return [SegmentIntersector]\n};\nInteriorIntersectionFinder.prototype.getClass = function getClass () {\n  return InteriorIntersectionFinder\n};\nInteriorIntersectionFinder.createAllIntersectionsFinder = function createAllIntersectionsFinder (li) {\n  var finder = new InteriorIntersectionFinder(li);\n  finder.setFindAllIntersections(true);\n  return finder\n};\nInteriorIntersectionFinder.createAnyIntersectionFinder = function createAnyIntersectionFinder (li) {\n  return new InteriorIntersectionFinder(li)\n};\nInteriorIntersectionFinder.createIntersectionCounter = function createIntersectionCounter (li) {\n  var finder = new InteriorIntersectionFinder(li);\n  finder.setFindAllIntersections(true);\n  finder.setKeepIntersections(false);\n  return finder\n};\n\nvar FastNodingValidator = function FastNodingValidator () {\n  this._li = new RobustLineIntersector();\n  this._segStrings = null;\n  this._findAllIntersections = false;\n  this._segInt = null;\n  this._isValid = true;\n  var segStrings = arguments[0];\n  this._segStrings = segStrings;\n};\nFastNodingValidator.prototype.execute = function execute () {\n  if (this._segInt !== null) { return null }\n  this.checkInteriorIntersections();\n};\nFastNodingValidator.prototype.getIntersections = function getIntersections () {\n  return this._segInt.getIntersections()\n};\nFastNodingValidator.prototype.isValid = function isValid () {\n  this.execute();\n  return this._isValid\n};\nFastNodingValidator.prototype.setFindAllIntersections = function setFindAllIntersections (findAllIntersections) {\n  this._findAllIntersections = findAllIntersections;\n};\nFastNodingValidator.prototype.checkInteriorIntersections = function checkInteriorIntersections () {\n  this._isValid = true;\n  this._segInt = new InteriorIntersectionFinder(this._li);\n  this._segInt.setFindAllIntersections(this._findAllIntersections);\n  var noder = new MCIndexNoder();\n  noder.setSegmentIntersector(this._segInt);\n  noder.computeNodes(this._segStrings);\n  if (this._segInt.hasIntersection()) {\n    this._isValid = false;\n    return null\n  }\n};\nFastNodingValidator.prototype.checkValid = function checkValid () {\n  this.execute();\n  if (!this._isValid) { throw new TopologyException(this.getErrorMessage(), this._segInt.getInteriorIntersection()) }\n};\nFastNodingValidator.prototype.getErrorMessage = function getErrorMessage () {\n  if (this._isValid) { return 'no intersections found' }\n  var intSegs = this._segInt.getIntersectionSegments();\n  return 'found non-noded intersection between ' + WKTWriter.toLineString(intSegs[0], intSegs[1]) + ' and ' + WKTWriter.toLineString(intSegs[2], intSegs[3])\n};\nFastNodingValidator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nFastNodingValidator.prototype.getClass = function getClass () {\n  return FastNodingValidator\n};\nFastNodingValidator.computeIntersections = function computeIntersections (segStrings) {\n  var nv = new FastNodingValidator(segStrings);\n  nv.setFindAllIntersections(true);\n  nv.isValid();\n  return nv.getIntersections()\n};\n\nvar EdgeNodingValidator = function EdgeNodingValidator () {\n  this._nv = null;\n  var edges = arguments[0];\n  this._nv = new FastNodingValidator(EdgeNodingValidator.toSegmentStrings(edges));\n};\nEdgeNodingValidator.prototype.checkValid = function checkValid () {\n  this._nv.checkValid();\n};\nEdgeNodingValidator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nEdgeNodingValidator.prototype.getClass = function getClass () {\n  return EdgeNodingValidator\n};\nEdgeNodingValidator.toSegmentStrings = function toSegmentStrings (edges) {\n  var segStrings = new ArrayList();\n  for (var i = edges.iterator(); i.hasNext();) {\n    var e = i.next();\n    segStrings.add(new BasicSegmentString(e.getCoordinates(), e));\n  }\n  return segStrings\n};\nEdgeNodingValidator.checkValid = function checkValid (edges) {\n  var validator = new EdgeNodingValidator(edges);\n  validator.checkValid();\n};\n\nvar GeometryCollectionMapper = function GeometryCollectionMapper (mapOp) {\n  this._mapOp = mapOp;\n};\nGeometryCollectionMapper.prototype.map = function map (gc) {\n    var this$1 = this;\n\n  var mapped = new ArrayList();\n  for (var i = 0; i < gc.getNumGeometries(); i++) {\n    var g = this$1._mapOp.map(gc.getGeometryN(i));\n    if (!g.isEmpty()) { mapped.add(g); }\n  }\n  return gc.getFactory().createGeometryCollection(GeometryFactory.toGeometryArray(mapped))\n};\nGeometryCollectionMapper.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryCollectionMapper.prototype.getClass = function getClass () {\n  return GeometryCollectionMapper\n};\nGeometryCollectionMapper.map = function map (gc, op) {\n  var mapper = new GeometryCollectionMapper(op);\n  return mapper.map(gc)\n};\n\nvar LineBuilder = function LineBuilder () {\n  this._op = null;\n  this._geometryFactory = null;\n  this._ptLocator = null;\n  this._lineEdgesList = new ArrayList();\n  this._resultLineList = new ArrayList();\n  var op = arguments[0];\n  var geometryFactory = arguments[1];\n  var ptLocator = arguments[2];\n  this._op = op;\n  this._geometryFactory = geometryFactory;\n  this._ptLocator = ptLocator;\n};\nLineBuilder.prototype.collectLines = function collectLines (opCode) {\n    var this$1 = this;\n\n  for (var it = this._op.getGraph().getEdgeEnds().iterator(); it.hasNext();) {\n    var de = it.next();\n    this$1.collectLineEdge(de, opCode, this$1._lineEdgesList);\n    this$1.collectBoundaryTouchEdge(de, opCode, this$1._lineEdgesList);\n  }\n};\nLineBuilder.prototype.labelIsolatedLine = function labelIsolatedLine (e, targetIndex) {\n  var loc = this._ptLocator.locate(e.getCoordinate(), this._op.getArgGeometry(targetIndex));\n  e.getLabel().setLocation(targetIndex, loc);\n};\nLineBuilder.prototype.build = function build (opCode) {\n  this.findCoveredLineEdges();\n  this.collectLines(opCode);\n  this.buildLines(opCode);\n  return this._resultLineList\n};\nLineBuilder.prototype.collectLineEdge = function collectLineEdge (de, opCode, edges) {\n  var label = de.getLabel();\n  var e = de.getEdge();\n  if (de.isLineEdge()) {\n    if (!de.isVisited() && OverlayOp.isResultOfOp(label, opCode) && !e.isCovered()) {\n      edges.add(e);\n      de.setVisitedEdge(true);\n    }\n  }\n};\nLineBuilder.prototype.findCoveredLineEdges = function findCoveredLineEdges () {\n    var this$1 = this;\n\n  for (var nodeit = this._op.getGraph().getNodes().iterator(); nodeit.hasNext();) {\n    var node = nodeit.next();\n    node.getEdges().findCoveredLineEdges();\n  }\n  for (var it = this._op.getGraph().getEdgeEnds().iterator(); it.hasNext();) {\n    var de = it.next();\n    var e = de.getEdge();\n    if (de.isLineEdge() && !e.isCoveredSet()) {\n      var isCovered = this$1._op.isCoveredByA(de.getCoordinate());\n      e.setCovered(isCovered);\n    }\n  }\n};\nLineBuilder.prototype.labelIsolatedLines = function labelIsolatedLines (edgesList) {\n    var this$1 = this;\n\n  for (var it = edgesList.iterator(); it.hasNext();) {\n    var e = it.next();\n    var label = e.getLabel();\n    if (e.isIsolated()) {\n      if (label.isNull(0)) { this$1.labelIsolatedLine(e, 0); } else { this$1.labelIsolatedLine(e, 1); }\n    }\n  }\n};\nLineBuilder.prototype.buildLines = function buildLines (opCode) {\n    var this$1 = this;\n\n  for (var it = this._lineEdgesList.iterator(); it.hasNext();) {\n    var e = it.next();\n    // const label = e.getLabel()\n    var line = this$1._geometryFactory.createLineString(e.getCoordinates());\n    this$1._resultLineList.add(line);\n    e.setInResult(true);\n  }\n};\nLineBuilder.prototype.collectBoundaryTouchEdge = function collectBoundaryTouchEdge (de, opCode, edges) {\n  var label = de.getLabel();\n  if (de.isLineEdge()) { return null }\n  if (de.isVisited()) { return null }\n  if (de.isInteriorAreaEdge()) { return null }\n  if (de.getEdge().isInResult()) { return null }\n  Assert.isTrue(!(de.isInResult() || de.getSym().isInResult()) || !de.getEdge().isInResult());\n  if (OverlayOp.isResultOfOp(label, opCode) && opCode === OverlayOp.INTERSECTION) {\n    edges.add(de.getEdge());\n    de.setVisitedEdge(true);\n  }\n};\nLineBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nLineBuilder.prototype.getClass = function getClass () {\n  return LineBuilder\n};\n\nvar PointBuilder = function PointBuilder () {\n  this._op = null;\n  this._geometryFactory = null;\n  this._resultPointList = new ArrayList();\n  var op = arguments[0];\n  var geometryFactory = arguments[1];\n  // const ptLocator = arguments[2]\n  this._op = op;\n  this._geometryFactory = geometryFactory;\n};\nPointBuilder.prototype.filterCoveredNodeToPoint = function filterCoveredNodeToPoint (n) {\n  var coord = n.getCoordinate();\n  if (!this._op.isCoveredByLA(coord)) {\n    var pt = this._geometryFactory.createPoint(coord);\n    this._resultPointList.add(pt);\n  }\n};\nPointBuilder.prototype.extractNonCoveredResultNodes = function extractNonCoveredResultNodes (opCode) {\n    var this$1 = this;\n\n  for (var nodeit = this._op.getGraph().getNodes().iterator(); nodeit.hasNext();) {\n    var n = nodeit.next();\n    if (n.isInResult()) { continue }\n    if (n.isIncidentEdgeInResult()) { continue }\n    if (n.getEdges().getDegree() === 0 || opCode === OverlayOp.INTERSECTION) {\n      var label = n.getLabel();\n      if (OverlayOp.isResultOfOp(label, opCode)) {\n        this$1.filterCoveredNodeToPoint(n);\n      }\n    }\n  }\n};\nPointBuilder.prototype.build = function build (opCode) {\n  this.extractNonCoveredResultNodes(opCode);\n  return this._resultPointList\n};\nPointBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPointBuilder.prototype.getClass = function getClass () {\n  return PointBuilder\n};\n\nvar GeometryTransformer = function GeometryTransformer () {\n  this._inputGeom = null;\n  this._factory = null;\n  this._pruneEmptyGeometry = true;\n  this._preserveGeometryCollectionType = true;\n  this._preserveCollections = false;\n  this._preserveType = false;\n};\nGeometryTransformer.prototype.transformPoint = function transformPoint (geom, parent) {\n  return this._factory.createPoint(this.transformCoordinates(geom.getCoordinateSequence(), geom))\n};\nGeometryTransformer.prototype.transformPolygon = function transformPolygon (geom, parent) {\n    var this$1 = this;\n\n  var isAllValidLinearRings = true;\n  var shell = this.transformLinearRing(geom.getExteriorRing(), geom);\n  if (shell === null || !(shell instanceof LinearRing) || shell.isEmpty()) { isAllValidLinearRings = false; }\n  var holes = new ArrayList();\n  for (var i = 0; i < geom.getNumInteriorRing(); i++) {\n    var hole = this$1.transformLinearRing(geom.getInteriorRingN(i), geom);\n    if (hole === null || hole.isEmpty()) {\n      continue\n    }\n    if (!(hole instanceof LinearRing)) { isAllValidLinearRings = false; }\n    holes.add(hole);\n  }\n  if (isAllValidLinearRings) { return this._factory.createPolygon(shell, holes.toArray([])); } else {\n    var components = new ArrayList();\n    if (shell !== null) { components.add(shell); }\n    components.addAll(holes);\n    return this._factory.buildGeometry(components)\n  }\n};\nGeometryTransformer.prototype.createCoordinateSequence = function createCoordinateSequence (coords) {\n  return this._factory.getCoordinateSequenceFactory().create(coords)\n};\nGeometryTransformer.prototype.getInputGeometry = function getInputGeometry () {\n  return this._inputGeom\n};\nGeometryTransformer.prototype.transformMultiLineString = function transformMultiLineString (geom, parent) {\n    var this$1 = this;\n\n  var transGeomList = new ArrayList();\n  for (var i = 0; i < geom.getNumGeometries(); i++) {\n    var transformGeom = this$1.transformLineString(geom.getGeometryN(i), geom);\n    if (transformGeom === null) { continue }\n    if (transformGeom.isEmpty()) { continue }\n    transGeomList.add(transformGeom);\n  }\n  return this._factory.buildGeometry(transGeomList)\n};\nGeometryTransformer.prototype.transformCoordinates = function transformCoordinates (coords, parent) {\n  return this.copy(coords)\n};\nGeometryTransformer.prototype.transformLineString = function transformLineString (geom, parent) {\n  return this._factory.createLineString(this.transformCoordinates(geom.getCoordinateSequence(), geom))\n};\nGeometryTransformer.prototype.transformMultiPoint = function transformMultiPoint (geom, parent) {\n    var this$1 = this;\n\n  var transGeomList = new ArrayList();\n  for (var i = 0; i < geom.getNumGeometries(); i++) {\n    var transformGeom = this$1.transformPoint(geom.getGeometryN(i), geom);\n    if (transformGeom === null) { continue }\n    if (transformGeom.isEmpty()) { continue }\n    transGeomList.add(transformGeom);\n  }\n  return this._factory.buildGeometry(transGeomList)\n};\nGeometryTransformer.prototype.transformMultiPolygon = function transformMultiPolygon (geom, parent) {\n    var this$1 = this;\n\n  var transGeomList = new ArrayList();\n  for (var i = 0; i < geom.getNumGeometries(); i++) {\n    var transformGeom = this$1.transformPolygon(geom.getGeometryN(i), geom);\n    if (transformGeom === null) { continue }\n    if (transformGeom.isEmpty()) { continue }\n    transGeomList.add(transformGeom);\n  }\n  return this._factory.buildGeometry(transGeomList)\n};\nGeometryTransformer.prototype.copy = function copy (seq) {\n  return seq.copy()\n};\nGeometryTransformer.prototype.transformGeometryCollection = function transformGeometryCollection (geom, parent) {\n    var this$1 = this;\n\n  var transGeomList = new ArrayList();\n  for (var i = 0; i < geom.getNumGeometries(); i++) {\n    var transformGeom = this$1.transform(geom.getGeometryN(i));\n    if (transformGeom === null) { continue }\n    if (this$1._pruneEmptyGeometry && transformGeom.isEmpty()) { continue }\n    transGeomList.add(transformGeom);\n  }\n  if (this._preserveGeometryCollectionType) { return this._factory.createGeometryCollection(GeometryFactory.toGeometryArray(transGeomList)) }\n  return this._factory.buildGeometry(transGeomList)\n};\nGeometryTransformer.prototype.transform = function transform (inputGeom) {\n  this._inputGeom = inputGeom;\n  this._factory = inputGeom.getFactory();\n  if (inputGeom instanceof Point) { return this.transformPoint(inputGeom, null) }\n  if (inputGeom instanceof MultiPoint) { return this.transformMultiPoint(inputGeom, null) }\n  if (inputGeom instanceof LinearRing) { return this.transformLinearRing(inputGeom, null) }\n  if (inputGeom instanceof LineString) { return this.transformLineString(inputGeom, null) }\n  if (inputGeom instanceof MultiLineString) { return this.transformMultiLineString(inputGeom, null) }\n  if (inputGeom instanceof Polygon) { return this.transformPolygon(inputGeom, null) }\n  if (inputGeom instanceof MultiPolygon) { return this.transformMultiPolygon(inputGeom, null) }\n  if (inputGeom instanceof GeometryCollection) { return this.transformGeometryCollection(inputGeom, null) }\n  throw new IllegalArgumentException('Unknown Geometry subtype: ' + inputGeom.getClass().getName())\n};\nGeometryTransformer.prototype.transformLinearRing = function transformLinearRing (geom, parent) {\n  var seq = this.transformCoordinates(geom.getCoordinateSequence(), geom);\n  if (seq === null) { return this._factory.createLinearRing(null) }\n  var seqSize = seq.size();\n  if (seqSize > 0 && seqSize < 4 && !this._preserveType) { return this._factory.createLineString(seq) }\n  return this._factory.createLinearRing(seq)\n};\nGeometryTransformer.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryTransformer.prototype.getClass = function getClass () {\n  return GeometryTransformer\n};\n\nvar LineStringSnapper = function LineStringSnapper () {\n  this._snapTolerance = 0.0;\n  this._srcPts = null;\n  this._seg = new LineSegment();\n  this._allowSnappingToSourceVertices = false;\n  this._isClosed = false;\n  if (arguments[0] instanceof LineString && typeof arguments[1] === 'number') {\n    var srcLine = arguments[0];\n    var snapTolerance = arguments[1];\n    LineStringSnapper.call(this, srcLine.getCoordinates(), snapTolerance);\n  } else if (arguments[0] instanceof Array && typeof arguments[1] === 'number') {\n    var srcPts = arguments[0];\n    var snapTolerance$1 = arguments[1];\n    this._srcPts = srcPts;\n    this._isClosed = LineStringSnapper.isClosed(srcPts);\n    this._snapTolerance = snapTolerance$1;\n  }\n};\nLineStringSnapper.prototype.snapVertices = function snapVertices (srcCoords, snapPts) {\n    var this$1 = this;\n\n  var end = this._isClosed ? srcCoords.size() - 1 : srcCoords.size();\n  for (var i = 0; i < end; i++) {\n    var srcPt = srcCoords.get(i);\n    var snapVert = this$1.findSnapForVertex(srcPt, snapPts);\n    if (snapVert !== null) {\n      srcCoords.set(i, new Coordinate(snapVert));\n      if (i === 0 && this$1._isClosed) { srcCoords.set(srcCoords.size() - 1, new Coordinate(snapVert)); }\n    }\n  }\n};\nLineStringSnapper.prototype.findSnapForVertex = function findSnapForVertex (pt, snapPts) {\n    var this$1 = this;\n\n  for (var i = 0; i < snapPts.length; i++) {\n    if (pt.equals2D(snapPts[i])) { return null }\n    if (pt.distance(snapPts[i]) < this$1._snapTolerance) { return snapPts[i] }\n  }\n  return null\n};\nLineStringSnapper.prototype.snapTo = function snapTo (snapPts) {\n  var coordList = new CoordinateList(this._srcPts);\n  this.snapVertices(coordList, snapPts);\n  this.snapSegments(coordList, snapPts);\n  var newPts = coordList.toCoordinateArray();\n  return newPts\n};\nLineStringSnapper.prototype.snapSegments = function snapSegments (srcCoords, snapPts) {\n    var this$1 = this;\n\n  if (snapPts.length === 0) { return null }\n  var distinctPtCount = snapPts.length;\n  if (snapPts[0].equals2D(snapPts[snapPts.length - 1])) { distinctPtCount = snapPts.length - 1; }\n  for (var i = 0; i < distinctPtCount; i++) {\n    var snapPt = snapPts[i];\n    var index = this$1.findSegmentIndexToSnap(snapPt, srcCoords);\n    if (index >= 0) {\n      srcCoords.add(index + 1, new Coordinate(snapPt), false);\n    }\n  }\n};\nLineStringSnapper.prototype.findSegmentIndexToSnap = function findSegmentIndexToSnap (snapPt, srcCoords) {\n    var this$1 = this;\n\n  var minDist = Double.MAX_VALUE;\n  var snapIndex = -1;\n  for (var i = 0; i < srcCoords.size() - 1; i++) {\n    this$1._seg.p0 = srcCoords.get(i);\n    this$1._seg.p1 = srcCoords.get(i + 1);\n    if (this$1._seg.p0.equals2D(snapPt) || this$1._seg.p1.equals2D(snapPt)) {\n      if (this$1._allowSnappingToSourceVertices) { continue; } else { return -1 }\n    }\n    var dist = this$1._seg.distance(snapPt);\n    if (dist < this$1._snapTolerance && dist < minDist) {\n      minDist = dist;\n      snapIndex = i;\n    }\n  }\n  return snapIndex\n};\nLineStringSnapper.prototype.setAllowSnappingToSourceVertices = function setAllowSnappingToSourceVertices (allowSnappingToSourceVertices) {\n  this._allowSnappingToSourceVertices = allowSnappingToSourceVertices;\n};\nLineStringSnapper.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nLineStringSnapper.prototype.getClass = function getClass () {\n  return LineStringSnapper\n};\nLineStringSnapper.isClosed = function isClosed (pts) {\n  if (pts.length <= 1) { return false }\n  return pts[0].equals2D(pts[pts.length - 1])\n};\n\nvar GeometrySnapper = function GeometrySnapper (srcGeom) {\n  this._srcGeom = srcGeom || null;\n};\n\nvar staticAccessors$41 = { SNAP_PRECISION_FACTOR: { configurable: true } };\nGeometrySnapper.prototype.snapTo = function snapTo (snapGeom, snapTolerance) {\n  var snapPts = this.extractTargetCoordinates(snapGeom);\n  var snapTrans = new SnapTransformer(snapTolerance, snapPts);\n  return snapTrans.transform(this._srcGeom)\n};\nGeometrySnapper.prototype.snapToSelf = function snapToSelf (snapTolerance, cleanResult) {\n  var snapPts = this.extractTargetCoordinates(this._srcGeom);\n  var snapTrans = new SnapTransformer(snapTolerance, snapPts, true);\n  var snappedGeom = snapTrans.transform(this._srcGeom);\n  var result = snappedGeom;\n  if (cleanResult && hasInterface(result, Polygonal)) {\n    result = snappedGeom.buffer(0);\n  }\n  return result\n};\nGeometrySnapper.prototype.computeSnapTolerance = function computeSnapTolerance (ringPts) {\n  var minSegLen = this.computeMinimumSegmentLength(ringPts);\n  var snapTol = minSegLen / 10;\n  return snapTol\n};\nGeometrySnapper.prototype.extractTargetCoordinates = function extractTargetCoordinates (g) {\n  var ptSet = new TreeSet();\n  var pts = g.getCoordinates();\n  for (var i = 0; i < pts.length; i++) {\n    ptSet.add(pts[i]);\n  }\n  return ptSet.toArray(new Array(0).fill(null))\n};\nGeometrySnapper.prototype.computeMinimumSegmentLength = function computeMinimumSegmentLength (pts) {\n  var minSegLen = Double.MAX_VALUE;\n  for (var i = 0; i < pts.length - 1; i++) {\n    var segLen = pts[i].distance(pts[i + 1]);\n    if (segLen < minSegLen) { minSegLen = segLen; }\n  }\n  return minSegLen\n};\nGeometrySnapper.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometrySnapper.prototype.getClass = function getClass () {\n  return GeometrySnapper\n};\nGeometrySnapper.snap = function snap (g0, g1, snapTolerance) {\n  var snapGeom = new Array(2).fill(null);\n  var snapper0 = new GeometrySnapper(g0);\n  snapGeom[0] = snapper0.snapTo(g1, snapTolerance);\n  var snapper1 = new GeometrySnapper(g1);\n  snapGeom[1] = snapper1.snapTo(snapGeom[0], snapTolerance);\n  return snapGeom\n};\nGeometrySnapper.computeOverlaySnapTolerance = function computeOverlaySnapTolerance () {\n  if (arguments.length === 1) {\n    var g = arguments[0];\n    var snapTolerance = GeometrySnapper.computeSizeBasedSnapTolerance(g);\n    var pm = g.getPrecisionModel();\n    if (pm.getType() === PrecisionModel.FIXED) {\n      var fixedSnapTol = 1 / pm.getScale() * 2 / 1.415;\n      if (fixedSnapTol > snapTolerance) { snapTolerance = fixedSnapTol; }\n    }\n    return snapTolerance\n  } else if (arguments.length === 2) {\n    var g0 = arguments[0];\n    var g1 = arguments[1];\n    return Math.min(GeometrySnapper.computeOverlaySnapTolerance(g0), GeometrySnapper.computeOverlaySnapTolerance(g1))\n  }\n};\nGeometrySnapper.computeSizeBasedSnapTolerance = function computeSizeBasedSnapTolerance (g) {\n  var env = g.getEnvelopeInternal();\n  var minDimension = Math.min(env.getHeight(), env.getWidth());\n  var snapTol = minDimension * GeometrySnapper.SNAP_PRECISION_FACTOR;\n  return snapTol\n};\nGeometrySnapper.snapToSelf = function snapToSelf (geom, snapTolerance, cleanResult) {\n  var snapper0 = new GeometrySnapper(geom);\n  return snapper0.snapToSelf(snapTolerance, cleanResult)\n};\nstaticAccessors$41.SNAP_PRECISION_FACTOR.get = function () { return 1e-9 };\n\nObject.defineProperties( GeometrySnapper, staticAccessors$41 );\n\nvar SnapTransformer = (function (GeometryTransformer$$1) {\n  function SnapTransformer (snapTolerance, snapPts, isSelfSnap) {\n    GeometryTransformer$$1.call(this);\n    this._snapTolerance = snapTolerance || null;\n    this._snapPts = snapPts || null;\n    this._isSelfSnap = (isSelfSnap !== undefined) ? isSelfSnap : false;\n  }\n\n  if ( GeometryTransformer$$1 ) SnapTransformer.__proto__ = GeometryTransformer$$1;\n  SnapTransformer.prototype = Object.create( GeometryTransformer$$1 && GeometryTransformer$$1.prototype );\n  SnapTransformer.prototype.constructor = SnapTransformer;\n  SnapTransformer.prototype.snapLine = function snapLine (srcPts, snapPts) {\n    var snapper = new LineStringSnapper(srcPts, this._snapTolerance);\n    snapper.setAllowSnappingToSourceVertices(this._isSelfSnap);\n    return snapper.snapTo(snapPts)\n  };\n  SnapTransformer.prototype.transformCoordinates = function transformCoordinates (coords, parent) {\n    var srcPts = coords.toCoordinateArray();\n    var newPts = this.snapLine(srcPts, this._snapPts);\n    return this._factory.getCoordinateSequenceFactory().create(newPts)\n  };\n  SnapTransformer.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  SnapTransformer.prototype.getClass = function getClass () {\n    return SnapTransformer\n  };\n\n  return SnapTransformer;\n}(GeometryTransformer));\n\nvar CommonBits = function CommonBits () {\n  this._isFirst = true;\n  this._commonMantissaBitsCount = 53;\n  this._commonBits = 0;\n  this._commonSignExp = null;\n};\nCommonBits.prototype.getCommon = function getCommon () {\n  return Double.longBitsToDouble(this._commonBits)\n};\nCommonBits.prototype.add = function add (num) {\n  var numBits = Double.doubleToLongBits(num);\n  if (this._isFirst) {\n    this._commonBits = numBits;\n    this._commonSignExp = CommonBits.signExpBits(this._commonBits);\n    this._isFirst = false;\n    return null\n  }\n  var numSignExp = CommonBits.signExpBits(numBits);\n  if (numSignExp !== this._commonSignExp) {\n    this._commonBits = 0;\n    return null\n  }\n  this._commonMantissaBitsCount = CommonBits.numCommonMostSigMantissaBits(this._commonBits, numBits);\n  this._commonBits = CommonBits.zeroLowerBits(this._commonBits, 64 - (12 + this._commonMantissaBitsCount));\n};\nCommonBits.prototype.toString = function toString () {\n  if (arguments.length === 1) {\n    var bits = arguments[0];\n    var x = Double.longBitsToDouble(bits);\n    var numStr = Double.toBinaryString(bits);\n    var padStr = '0000000000000000000000000000000000000000000000000000000000000000' + numStr;\n    var bitStr = padStr.substring(padStr.length - 64);\n    var str = bitStr.substring(0, 1) + '  ' + bitStr.substring(1, 12) + '(exp) ' + bitStr.substring(12) + ' [ ' + x + ' ]';\n    return str\n  }\n};\nCommonBits.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCommonBits.prototype.getClass = function getClass () {\n  return CommonBits\n};\nCommonBits.getBit = function getBit (bits, i) {\n  var mask = 1 << i;\n  return (bits & mask) !== 0 ? 1 : 0\n};\nCommonBits.signExpBits = function signExpBits (num) {\n  return num >> 52\n};\nCommonBits.zeroLowerBits = function zeroLowerBits (bits, nBits) {\n  var invMask = (1 << nBits) - 1;\n  var mask = ~invMask;\n  var zeroed = bits & mask;\n  return zeroed\n};\nCommonBits.numCommonMostSigMantissaBits = function numCommonMostSigMantissaBits (num1, num2) {\n  var count = 0;\n  for (var i = 52; i >= 0; i--) {\n    if (CommonBits.getBit(num1, i) !== CommonBits.getBit(num2, i)) { return count }\n    count++;\n  }\n  return 52\n};\n\nvar CommonBitsRemover = function CommonBitsRemover () {\n  this._commonCoord = null;\n  this._ccFilter = new CommonCoordinateFilter();\n};\n\nvar staticAccessors$42 = { CommonCoordinateFilter: { configurable: true },Translater: { configurable: true } };\nCommonBitsRemover.prototype.addCommonBits = function addCommonBits (geom) {\n  var trans = new Translater(this._commonCoord);\n  geom.apply(trans);\n  geom.geometryChanged();\n};\nCommonBitsRemover.prototype.removeCommonBits = function removeCommonBits (geom) {\n  if (this._commonCoord.x === 0.0 && this._commonCoord.y === 0.0) { return geom }\n  var invCoord = new Coordinate(this._commonCoord);\n  invCoord.x = -invCoord.x;\n  invCoord.y = -invCoord.y;\n  var trans = new Translater(invCoord);\n  geom.apply(trans);\n  geom.geometryChanged();\n  return geom\n};\nCommonBitsRemover.prototype.getCommonCoordinate = function getCommonCoordinate () {\n  return this._commonCoord\n};\nCommonBitsRemover.prototype.add = function add (geom) {\n  geom.apply(this._ccFilter);\n  this._commonCoord = this._ccFilter.getCommonCoordinate();\n};\nCommonBitsRemover.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCommonBitsRemover.prototype.getClass = function getClass () {\n  return CommonBitsRemover\n};\nstaticAccessors$42.CommonCoordinateFilter.get = function () { return CommonCoordinateFilter };\nstaticAccessors$42.Translater.get = function () { return Translater };\n\nObject.defineProperties( CommonBitsRemover, staticAccessors$42 );\n\nvar CommonCoordinateFilter = function CommonCoordinateFilter () {\n  this._commonBitsX = new CommonBits();\n  this._commonBitsY = new CommonBits();\n};\nCommonCoordinateFilter.prototype.filter = function filter (coord) {\n  this._commonBitsX.add(coord.x);\n  this._commonBitsY.add(coord.y);\n};\nCommonCoordinateFilter.prototype.getCommonCoordinate = function getCommonCoordinate () {\n  return new Coordinate(this._commonBitsX.getCommon(), this._commonBitsY.getCommon())\n};\nCommonCoordinateFilter.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateFilter]\n};\nCommonCoordinateFilter.prototype.getClass = function getClass () {\n  return CommonCoordinateFilter\n};\n\nvar Translater = function Translater () {\n  this.trans = null;\n  var trans = arguments[0];\n  this.trans = trans;\n};\nTranslater.prototype.filter = function filter (seq, i) {\n  var xp = seq.getOrdinate(i, 0) + this.trans.x;\n  var yp = seq.getOrdinate(i, 1) + this.trans.y;\n  seq.setOrdinate(i, 0, xp);\n  seq.setOrdinate(i, 1, yp);\n};\nTranslater.prototype.isDone = function isDone () {\n  return false\n};\nTranslater.prototype.isGeometryChanged = function isGeometryChanged () {\n  return true\n};\nTranslater.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateSequenceFilter]\n};\nTranslater.prototype.getClass = function getClass () {\n  return Translater\n};\n\nvar SnapOverlayOp = function SnapOverlayOp (g1, g2) {\n  this._geom = new Array(2).fill(null);\n  this._snapTolerance = null;\n  this._cbr = null;\n  this._geom[0] = g1;\n  this._geom[1] = g2;\n  this.computeSnapTolerance();\n};\nSnapOverlayOp.prototype.selfSnap = function selfSnap (geom) {\n  var snapper0 = new GeometrySnapper(geom);\n  var snapGeom = snapper0.snapTo(geom, this._snapTolerance);\n  return snapGeom\n};\nSnapOverlayOp.prototype.removeCommonBits = function removeCommonBits (geom) {\n  this._cbr = new CommonBitsRemover();\n  this._cbr.add(geom[0]);\n  this._cbr.add(geom[1]);\n  var remGeom = new Array(2).fill(null);\n  remGeom[0] = this._cbr.removeCommonBits(geom[0].copy());\n  remGeom[1] = this._cbr.removeCommonBits(geom[1].copy());\n  return remGeom\n};\nSnapOverlayOp.prototype.prepareResult = function prepareResult (geom) {\n  this._cbr.addCommonBits(geom);\n  return geom\n};\nSnapOverlayOp.prototype.getResultGeometry = function getResultGeometry (opCode) {\n  var prepGeom = this.snap(this._geom);\n  var result = OverlayOp.overlayOp(prepGeom[0], prepGeom[1], opCode);\n  return this.prepareResult(result)\n};\nSnapOverlayOp.prototype.checkValid = function checkValid (g) {\n  if (!g.isValid()) {\n    System.out.println('Snapped geometry is invalid');\n  }\n};\nSnapOverlayOp.prototype.computeSnapTolerance = function computeSnapTolerance () {\n  this._snapTolerance = GeometrySnapper.computeOverlaySnapTolerance(this._geom[0], this._geom[1]);\n};\nSnapOverlayOp.prototype.snap = function snap (geom) {\n  var remGeom = this.removeCommonBits(geom);\n  var snapGeom = GeometrySnapper.snap(remGeom[0], remGeom[1], this._snapTolerance);\n  return snapGeom\n};\nSnapOverlayOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSnapOverlayOp.prototype.getClass = function getClass () {\n  return SnapOverlayOp\n};\nSnapOverlayOp.overlayOp = function overlayOp (g0, g1, opCode) {\n  var op = new SnapOverlayOp(g0, g1);\n  return op.getResultGeometry(opCode)\n};\nSnapOverlayOp.union = function union (g0, g1) {\n  return SnapOverlayOp.overlayOp(g0, g1, OverlayOp.UNION)\n};\nSnapOverlayOp.intersection = function intersection (g0, g1) {\n  return SnapOverlayOp.overlayOp(g0, g1, OverlayOp.INTERSECTION)\n};\nSnapOverlayOp.symDifference = function symDifference (g0, g1) {\n  return SnapOverlayOp.overlayOp(g0, g1, OverlayOp.SYMDIFFERENCE)\n};\nSnapOverlayOp.difference = function difference (g0, g1) {\n  return SnapOverlayOp.overlayOp(g0, g1, OverlayOp.DIFFERENCE)\n};\n\nvar SnapIfNeededOverlayOp = function SnapIfNeededOverlayOp (g1, g2) {\n  this._geom = new Array(2).fill(null);\n  this._geom[0] = g1;\n  this._geom[1] = g2;\n};\nSnapIfNeededOverlayOp.prototype.getResultGeometry = function getResultGeometry (opCode) {\n  var result = null;\n  var isSuccess = false;\n  var savedException = null;\n  try {\n    result = OverlayOp.overlayOp(this._geom[0], this._geom[1], opCode);\n    var isValid = true;\n    if (isValid) { isSuccess = true; }\n  } catch (ex) {\n    if (ex instanceof RuntimeException) {\n      savedException = ex;\n    } else { throw ex }\n  } finally {}\n  if (!isSuccess) {\n    try {\n      result = SnapOverlayOp.overlayOp(this._geom[0], this._geom[1], opCode);\n    } catch (ex) {\n      if (ex instanceof RuntimeException) {\n        throw savedException\n      } else { throw ex }\n    } finally {}\n  }\n  return result\n};\nSnapIfNeededOverlayOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSnapIfNeededOverlayOp.prototype.getClass = function getClass () {\n  return SnapIfNeededOverlayOp\n};\nSnapIfNeededOverlayOp.overlayOp = function overlayOp (g0, g1, opCode) {\n  var op = new SnapIfNeededOverlayOp(g0, g1);\n  return op.getResultGeometry(opCode)\n};\nSnapIfNeededOverlayOp.union = function union (g0, g1) {\n  return SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.UNION)\n};\nSnapIfNeededOverlayOp.intersection = function intersection (g0, g1) {\n  return SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.INTERSECTION)\n};\nSnapIfNeededOverlayOp.symDifference = function symDifference (g0, g1) {\n  return SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.SYMDIFFERENCE)\n};\nSnapIfNeededOverlayOp.difference = function difference (g0, g1) {\n  return SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.DIFFERENCE)\n};\n\nvar MonotoneChain$2 = function MonotoneChain () {\n  this.mce = null;\n  this.chainIndex = null;\n  var mce = arguments[0];\n  var chainIndex = arguments[1];\n  this.mce = mce;\n  this.chainIndex = chainIndex;\n};\nMonotoneChain$2.prototype.computeIntersections = function computeIntersections (mc, si) {\n  this.mce.computeIntersectsForChain(this.chainIndex, mc.mce, mc.chainIndex, si);\n};\nMonotoneChain$2.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChain$2.prototype.getClass = function getClass () {\n  return MonotoneChain$2\n};\n\nvar SweepLineEvent = function SweepLineEvent () {\n  this._label = null;\n  this._xValue = null;\n  this._eventType = null;\n  this._insertEvent = null;\n  this._deleteEventIndex = null;\n  this._obj = null;\n  if (arguments.length === 2) {\n    var x = arguments[0];\n    var insertEvent = arguments[1];\n    this._eventType = SweepLineEvent.DELETE;\n    this._xValue = x;\n    this._insertEvent = insertEvent;\n  } else if (arguments.length === 3) {\n    var label = arguments[0];\n    var x$1 = arguments[1];\n    var obj = arguments[2];\n    this._eventType = SweepLineEvent.INSERT;\n    this._label = label;\n    this._xValue = x$1;\n    this._obj = obj;\n  }\n};\n\nvar staticAccessors$43 = { INSERT: { configurable: true },DELETE: { configurable: true } };\nSweepLineEvent.prototype.isDelete = function isDelete () {\n  return this._eventType === SweepLineEvent.DELETE\n};\nSweepLineEvent.prototype.setDeleteEventIndex = function setDeleteEventIndex (deleteEventIndex) {\n  this._deleteEventIndex = deleteEventIndex;\n};\nSweepLineEvent.prototype.getObject = function getObject () {\n  return this._obj\n};\nSweepLineEvent.prototype.compareTo = function compareTo (o) {\n  var pe = o;\n  if (this._xValue < pe._xValue) { return -1 }\n  if (this._xValue > pe._xValue) { return 1 }\n  if (this._eventType < pe._eventType) { return -1 }\n  if (this._eventType > pe._eventType) { return 1 }\n  return 0\n};\nSweepLineEvent.prototype.getInsertEvent = function getInsertEvent () {\n  return this._insertEvent\n};\nSweepLineEvent.prototype.isInsert = function isInsert () {\n  return this._eventType === SweepLineEvent.INSERT\n};\nSweepLineEvent.prototype.isSameLabel = function isSameLabel (ev) {\n  if (this._label === null) { return false }\n  return this._label === ev._label\n};\nSweepLineEvent.prototype.getDeleteEventIndex = function getDeleteEventIndex () {\n  return this._deleteEventIndex\n};\nSweepLineEvent.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nSweepLineEvent.prototype.getClass = function getClass () {\n  return SweepLineEvent\n};\nstaticAccessors$43.INSERT.get = function () { return 1 };\nstaticAccessors$43.DELETE.get = function () { return 2 };\n\nObject.defineProperties( SweepLineEvent, staticAccessors$43 );\n\nvar EdgeSetIntersector = function EdgeSetIntersector () {};\n\nEdgeSetIntersector.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nEdgeSetIntersector.prototype.getClass = function getClass () {\n  return EdgeSetIntersector\n};\n\nvar SegmentIntersector$2 = function SegmentIntersector () {\n  this._hasIntersection = false;\n  this._hasProper = false;\n  this._hasProperInterior = false;\n  this._properIntersectionPoint = null;\n  this._li = null;\n  this._includeProper = null;\n  this._recordIsolated = null;\n  this._isSelfIntersection = null;\n  this._numIntersections = 0;\n  this.numTests = 0;\n  this._bdyNodes = null;\n  this._isDone = false;\n  this._isDoneWhenProperInt = false;\n  var li = arguments[0];\n  var includeProper = arguments[1];\n  var recordIsolated = arguments[2];\n  this._li = li;\n  this._includeProper = includeProper;\n  this._recordIsolated = recordIsolated;\n};\nSegmentIntersector$2.prototype.isTrivialIntersection = function isTrivialIntersection (e0, segIndex0, e1, segIndex1) {\n  if (e0 === e1) {\n    if (this._li.getIntersectionNum() === 1) {\n      if (SegmentIntersector$2.isAdjacentSegments(segIndex0, segIndex1)) { return true }\n      if (e0.isClosed()) {\n        var maxSegIndex = e0.getNumPoints() - 1;\n        if ((segIndex0 === 0 && segIndex1 === maxSegIndex) ||\n            (segIndex1 === 0 && segIndex0 === maxSegIndex)) {\n          return true\n        }\n      }\n    }\n  }\n  return false\n};\nSegmentIntersector$2.prototype.getProperIntersectionPoint = function getProperIntersectionPoint () {\n  return this._properIntersectionPoint\n};\nSegmentIntersector$2.prototype.setIsDoneIfProperInt = function setIsDoneIfProperInt (isDoneWhenProperInt) {\n  this._isDoneWhenProperInt = isDoneWhenProperInt;\n};\nSegmentIntersector$2.prototype.hasProperInteriorIntersection = function hasProperInteriorIntersection () {\n  return this._hasProperInterior\n};\nSegmentIntersector$2.prototype.isBoundaryPointInternal = function isBoundaryPointInternal (li, bdyNodes) {\n  for (var i = bdyNodes.iterator(); i.hasNext();) {\n    var node = i.next();\n    var pt = node.getCoordinate();\n    if (li.isIntersection(pt)) { return true }\n  }\n  return false\n};\nSegmentIntersector$2.prototype.hasProperIntersection = function hasProperIntersection () {\n  return this._hasProper\n};\nSegmentIntersector$2.prototype.hasIntersection = function hasIntersection () {\n  return this._hasIntersection\n};\nSegmentIntersector$2.prototype.isDone = function isDone () {\n  return this._isDone\n};\nSegmentIntersector$2.prototype.isBoundaryPoint = function isBoundaryPoint (li, bdyNodes) {\n  if (bdyNodes === null) { return false }\n  if (this.isBoundaryPointInternal(li, bdyNodes[0])) { return true }\n  if (this.isBoundaryPointInternal(li, bdyNodes[1])) { return true }\n  return false\n};\nSegmentIntersector$2.prototype.setBoundaryNodes = function setBoundaryNodes (bdyNodes0, bdyNodes1) {\n  this._bdyNodes = new Array(2).fill(null);\n  this._bdyNodes[0] = bdyNodes0;\n  this._bdyNodes[1] = bdyNodes1;\n};\nSegmentIntersector$2.prototype.addIntersections = function addIntersections (e0, segIndex0, e1, segIndex1) {\n  if (e0 === e1 && segIndex0 === segIndex1) { return null }\n  this.numTests++;\n  var p00 = e0.getCoordinates()[segIndex0];\n  var p01 = e0.getCoordinates()[segIndex0 + 1];\n  var p10 = e1.getCoordinates()[segIndex1];\n  var p11 = e1.getCoordinates()[segIndex1 + 1];\n  this._li.computeIntersection(p00, p01, p10, p11);\n  if (this._li.hasIntersection()) {\n    if (this._recordIsolated) {\n      e0.setIsolated(false);\n      e1.setIsolated(false);\n    }\n    this._numIntersections++;\n    if (!this.isTrivialIntersection(e0, segIndex0, e1, segIndex1)) {\n      this._hasIntersection = true;\n      if (this._includeProper || !this._li.isProper()) {\n        e0.addIntersections(this._li, segIndex0, 0);\n        e1.addIntersections(this._li, segIndex1, 1);\n      }\n      if (this._li.isProper()) {\n        this._properIntersectionPoint = this._li.getIntersection(0).copy();\n        this._hasProper = true;\n        if (this._isDoneWhenProperInt) {\n          this._isDone = true;\n        }\n        if (!this.isBoundaryPoint(this._li, this._bdyNodes)) { this._hasProperInterior = true; }\n      }\n    }\n  }\n};\nSegmentIntersector$2.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSegmentIntersector$2.prototype.getClass = function getClass () {\n  return SegmentIntersector$2\n};\nSegmentIntersector$2.isAdjacentSegments = function isAdjacentSegments (i1, i2) {\n  return Math.abs(i1 - i2) === 1\n};\n\nvar SimpleMCSweepLineIntersector = (function (EdgeSetIntersector$$1) {\n  function SimpleMCSweepLineIntersector () {\n    EdgeSetIntersector$$1.call(this);\n    this.events = new ArrayList();\n    this.nOverlaps = null;\n  }\n\n  if ( EdgeSetIntersector$$1 ) SimpleMCSweepLineIntersector.__proto__ = EdgeSetIntersector$$1;\n  SimpleMCSweepLineIntersector.prototype = Object.create( EdgeSetIntersector$$1 && EdgeSetIntersector$$1.prototype );\n  SimpleMCSweepLineIntersector.prototype.constructor = SimpleMCSweepLineIntersector;\n  SimpleMCSweepLineIntersector.prototype.prepareEvents = function prepareEvents () {\n    var this$1 = this;\n\n    Collections.sort(this.events);\n    for (var i = 0; i < this.events.size(); i++) {\n      var ev = this$1.events.get(i);\n      if (ev.isDelete()) {\n        ev.getInsertEvent().setDeleteEventIndex(i);\n      }\n    }\n  };\n  SimpleMCSweepLineIntersector.prototype.computeIntersections = function computeIntersections () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var si = arguments[0];\n      this.nOverlaps = 0;\n      this.prepareEvents();\n      for (var i = 0; i < this.events.size(); i++) {\n        var ev = this$1.events.get(i);\n        if (ev.isInsert()) {\n          this$1.processOverlaps(i, ev.getDeleteEventIndex(), ev, si);\n        }\n        if (si.isDone()) {\n          break\n        }\n      }\n    } else if (arguments.length === 3) {\n      if (arguments[2] instanceof SegmentIntersector$2 && (hasInterface(arguments[0], List) && hasInterface(arguments[1], List))) {\n        var edges0 = arguments[0];\n        var edges1 = arguments[1];\n        var si$1 = arguments[2];\n        this.addEdges(edges0, edges0);\n        this.addEdges(edges1, edges1);\n        this.computeIntersections(si$1);\n      } else if (typeof arguments[2] === 'boolean' && (hasInterface(arguments[0], List) && arguments[1] instanceof SegmentIntersector$2)) {\n        var edges = arguments[0];\n        var si$2 = arguments[1];\n        var testAllSegments = arguments[2];\n        if (testAllSegments) { this.addEdges(edges, null); } else { this.addEdges(edges); }\n        this.computeIntersections(si$2);\n      }\n    }\n  };\n  SimpleMCSweepLineIntersector.prototype.addEdge = function addEdge (edge, edgeSet) {\n    var this$1 = this;\n\n    var mce = edge.getMonotoneChainEdge();\n    var startIndex = mce.getStartIndexes();\n    for (var i = 0; i < startIndex.length - 1; i++) {\n      var mc = new MonotoneChain$2(mce, i);\n      var insertEvent = new SweepLineEvent(edgeSet, mce.getMinX(i), mc);\n      this$1.events.add(insertEvent);\n      this$1.events.add(new SweepLineEvent(mce.getMaxX(i), insertEvent));\n    }\n  };\n  SimpleMCSweepLineIntersector.prototype.processOverlaps = function processOverlaps (start, end, ev0, si) {\n    var this$1 = this;\n\n    var mc0 = ev0.getObject();\n    for (var i = start; i < end; i++) {\n      var ev1 = this$1.events.get(i);\n      if (ev1.isInsert()) {\n        var mc1 = ev1.getObject();\n        if (!ev0.isSameLabel(ev1)) {\n          mc0.computeIntersections(mc1, si);\n          this$1.nOverlaps++;\n        }\n      }\n    }\n  };\n  SimpleMCSweepLineIntersector.prototype.addEdges = function addEdges () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var edges = arguments[0];\n      for (var i = edges.iterator(); i.hasNext();) {\n        var edge = i.next();\n        this$1.addEdge(edge, edge);\n      }\n    } else if (arguments.length === 2) {\n      var edges$1 = arguments[0];\n      var edgeSet = arguments[1];\n      for (var i$1 = edges$1.iterator(); i$1.hasNext();) {\n        var edge$1 = i$1.next();\n        this$1.addEdge(edge$1, edgeSet);\n      }\n    }\n  };\n  SimpleMCSweepLineIntersector.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  SimpleMCSweepLineIntersector.prototype.getClass = function getClass () {\n    return SimpleMCSweepLineIntersector\n  };\n\n  return SimpleMCSweepLineIntersector;\n}(EdgeSetIntersector));\n\nvar IntervalRTreeNode = function IntervalRTreeNode () {\n  this._min = Double.POSITIVE_INFINITY;\n  this._max = Double.NEGATIVE_INFINITY;\n};\n\nvar staticAccessors$45 = { NodeComparator: { configurable: true } };\nIntervalRTreeNode.prototype.getMin = function getMin () {\n  return this._min\n};\nIntervalRTreeNode.prototype.intersects = function intersects (queryMin, queryMax) {\n  if (this._min > queryMax || this._max < queryMin) { return false }\n  return true\n};\nIntervalRTreeNode.prototype.getMax = function getMax () {\n  return this._max\n};\nIntervalRTreeNode.prototype.toString = function toString () {\n  return WKTWriter.toLineString(new Coordinate(this._min, 0), new Coordinate(this._max, 0))\n};\nIntervalRTreeNode.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nIntervalRTreeNode.prototype.getClass = function getClass () {\n  return IntervalRTreeNode\n};\nstaticAccessors$45.NodeComparator.get = function () { return NodeComparator };\n\nObject.defineProperties( IntervalRTreeNode, staticAccessors$45 );\n\nvar NodeComparator = function NodeComparator () {};\n\nNodeComparator.prototype.compare = function compare (o1, o2) {\n  var n1 = o1;\n  var n2 = o2;\n  var mid1 = (n1._min + n1._max) / 2;\n  var mid2 = (n2._min + n2._max) / 2;\n  if (mid1 < mid2) { return -1 }\n  if (mid1 > mid2) { return 1 }\n  return 0\n};\nNodeComparator.prototype.interfaces_ = function interfaces_ () {\n  return [Comparator]\n};\nNodeComparator.prototype.getClass = function getClass () {\n  return NodeComparator\n};\n\nvar IntervalRTreeLeafNode = (function (IntervalRTreeNode$$1) {\n  function IntervalRTreeLeafNode () {\n    IntervalRTreeNode$$1.call(this);\n    this._item = null;\n    var min = arguments[0];\n    var max = arguments[1];\n    var item = arguments[2];\n    this._min = min;\n    this._max = max;\n    this._item = item;\n  }\n\n  if ( IntervalRTreeNode$$1 ) IntervalRTreeLeafNode.__proto__ = IntervalRTreeNode$$1;\n  IntervalRTreeLeafNode.prototype = Object.create( IntervalRTreeNode$$1 && IntervalRTreeNode$$1.prototype );\n  IntervalRTreeLeafNode.prototype.constructor = IntervalRTreeLeafNode;\n  IntervalRTreeLeafNode.prototype.query = function query (queryMin, queryMax, visitor) {\n    if (!this.intersects(queryMin, queryMax)) { return null }\n    visitor.visitItem(this._item);\n  };\n  IntervalRTreeLeafNode.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  IntervalRTreeLeafNode.prototype.getClass = function getClass () {\n    return IntervalRTreeLeafNode\n  };\n\n  return IntervalRTreeLeafNode;\n}(IntervalRTreeNode));\n\nvar IntervalRTreeBranchNode = (function (IntervalRTreeNode$$1) {\n  function IntervalRTreeBranchNode () {\n    IntervalRTreeNode$$1.call(this);\n    this._node1 = null;\n    this._node2 = null;\n    var n1 = arguments[0];\n    var n2 = arguments[1];\n    this._node1 = n1;\n    this._node2 = n2;\n    this.buildExtent(this._node1, this._node2);\n  }\n\n  if ( IntervalRTreeNode$$1 ) IntervalRTreeBranchNode.__proto__ = IntervalRTreeNode$$1;\n  IntervalRTreeBranchNode.prototype = Object.create( IntervalRTreeNode$$1 && IntervalRTreeNode$$1.prototype );\n  IntervalRTreeBranchNode.prototype.constructor = IntervalRTreeBranchNode;\n  IntervalRTreeBranchNode.prototype.buildExtent = function buildExtent (n1, n2) {\n    this._min = Math.min(n1._min, n2._min);\n    this._max = Math.max(n1._max, n2._max);\n  };\n  IntervalRTreeBranchNode.prototype.query = function query (queryMin, queryMax, visitor) {\n    if (!this.intersects(queryMin, queryMax)) {\n      return null\n    }\n    if (this._node1 !== null) { this._node1.query(queryMin, queryMax, visitor); }\n    if (this._node2 !== null) { this._node2.query(queryMin, queryMax, visitor); }\n  };\n  IntervalRTreeBranchNode.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  IntervalRTreeBranchNode.prototype.getClass = function getClass () {\n    return IntervalRTreeBranchNode\n  };\n\n  return IntervalRTreeBranchNode;\n}(IntervalRTreeNode));\n\nvar SortedPackedIntervalRTree = function SortedPackedIntervalRTree () {\n  this._leaves = new ArrayList();\n  this._root = null;\n  this._level = 0;\n};\nSortedPackedIntervalRTree.prototype.buildTree = function buildTree () {\n    var this$1 = this;\n\n  Collections.sort(this._leaves, new IntervalRTreeNode.NodeComparator());\n  var src = this._leaves;\n  var temp = null;\n  var dest = new ArrayList();\n  while (true) {\n    this$1.buildLevel(src, dest);\n    if (dest.size() === 1) { return dest.get(0) }\n    temp = src;\n    src = dest;\n    dest = temp;\n  }\n};\nSortedPackedIntervalRTree.prototype.insert = function insert (min, max, item) {\n  if (this._root !== null) { throw new Error('Index cannot be added to once it has been queried') }\n  this._leaves.add(new IntervalRTreeLeafNode(min, max, item));\n};\nSortedPackedIntervalRTree.prototype.query = function query (min, max, visitor) {\n  this.init();\n  this._root.query(min, max, visitor);\n};\nSortedPackedIntervalRTree.prototype.buildRoot = function buildRoot () {\n  if (this._root !== null) { return null }\n  this._root = this.buildTree();\n};\nSortedPackedIntervalRTree.prototype.printNode = function printNode (node) {\n  System.out.println(WKTWriter.toLineString(new Coordinate(node._min, this._level), new Coordinate(node._max, this._level)));\n};\nSortedPackedIntervalRTree.prototype.init = function init () {\n  if (this._root !== null) { return null }\n  this.buildRoot();\n};\nSortedPackedIntervalRTree.prototype.buildLevel = function buildLevel (src, dest) {\n  this._level++;\n  dest.clear();\n  for (var i = 0; i < src.size(); i += 2) {\n    var n1 = src.get(i);\n    var n2 = i + 1 < src.size() ? src.get(i) : null;\n    if (n2 === null) {\n      dest.add(n1);\n    } else {\n      var node = new IntervalRTreeBranchNode(src.get(i), src.get(i + 1));\n      dest.add(node);\n    }\n  }\n};\nSortedPackedIntervalRTree.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSortedPackedIntervalRTree.prototype.getClass = function getClass () {\n  return SortedPackedIntervalRTree\n};\n\nvar ArrayListVisitor = function ArrayListVisitor () {\n  this._items = new ArrayList();\n};\nArrayListVisitor.prototype.visitItem = function visitItem (item) {\n  this._items.add(item);\n};\nArrayListVisitor.prototype.getItems = function getItems () {\n  return this._items\n};\nArrayListVisitor.prototype.interfaces_ = function interfaces_ () {\n  return [ItemVisitor]\n};\nArrayListVisitor.prototype.getClass = function getClass () {\n  return ArrayListVisitor\n};\n\nvar IndexedPointInAreaLocator = function IndexedPointInAreaLocator () {\n  this._index = null;\n  var g = arguments[0];\n  if (!hasInterface(g, Polygonal)) { throw new IllegalArgumentException('Argument must be Polygonal') }\n  this._index = new IntervalIndexedGeometry(g);\n};\n\nvar staticAccessors$44 = { SegmentVisitor: { configurable: true },IntervalIndexedGeometry: { configurable: true } };\nIndexedPointInAreaLocator.prototype.locate = function locate (p) {\n  var rcc = new RayCrossingCounter(p);\n  var visitor = new SegmentVisitor(rcc);\n  this._index.query(p.y, p.y, visitor);\n  return rcc.getLocation()\n};\nIndexedPointInAreaLocator.prototype.interfaces_ = function interfaces_ () {\n  return [PointOnGeometryLocator]\n};\nIndexedPointInAreaLocator.prototype.getClass = function getClass () {\n  return IndexedPointInAreaLocator\n};\nstaticAccessors$44.SegmentVisitor.get = function () { return SegmentVisitor };\nstaticAccessors$44.IntervalIndexedGeometry.get = function () { return IntervalIndexedGeometry };\n\nObject.defineProperties( IndexedPointInAreaLocator, staticAccessors$44 );\n\nvar SegmentVisitor = function SegmentVisitor () {\n  this._counter = null;\n  var counter = arguments[0];\n  this._counter = counter;\n};\nSegmentVisitor.prototype.visitItem = function visitItem (item) {\n  var seg = item;\n  this._counter.countSegment(seg.getCoordinate(0), seg.getCoordinate(1));\n};\nSegmentVisitor.prototype.interfaces_ = function interfaces_ () {\n  return [ItemVisitor]\n};\nSegmentVisitor.prototype.getClass = function getClass () {\n  return SegmentVisitor\n};\n\nvar IntervalIndexedGeometry = function IntervalIndexedGeometry () {\n  this._index = new SortedPackedIntervalRTree();\n  var geom = arguments[0];\n  this.init(geom);\n};\nIntervalIndexedGeometry.prototype.init = function init (geom) {\n    var this$1 = this;\n\n  var lines = LinearComponentExtracter.getLines(geom);\n  for (var i = lines.iterator(); i.hasNext();) {\n    var line = i.next();\n    var pts = line.getCoordinates();\n    this$1.addLine(pts);\n  }\n};\nIntervalIndexedGeometry.prototype.addLine = function addLine (pts) {\n    var this$1 = this;\n\n  for (var i = 1; i < pts.length; i++) {\n    var seg = new LineSegment(pts[i - 1], pts[i]);\n    var min = Math.min(seg.p0.y, seg.p1.y);\n    var max = Math.max(seg.p0.y, seg.p1.y);\n    this$1._index.insert(min, max, seg);\n  }\n};\nIntervalIndexedGeometry.prototype.query = function query () {\n  if (arguments.length === 2) {\n    var min = arguments[0];\n    var max = arguments[1];\n    var visitor = new ArrayListVisitor();\n    this._index.query(min, max, visitor);\n    return visitor.getItems()\n  } else if (arguments.length === 3) {\n    var min$1 = arguments[0];\n    var max$1 = arguments[1];\n    var visitor$1 = arguments[2];\n    this._index.query(min$1, max$1, visitor$1);\n  }\n};\nIntervalIndexedGeometry.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nIntervalIndexedGeometry.prototype.getClass = function getClass () {\n  return IntervalIndexedGeometry\n};\n\nvar GeometryGraph = (function (PlanarGraph$$1) {\n  function GeometryGraph () {\n    PlanarGraph$$1.call(this);\n    this._parentGeom = null;\n    this._lineEdgeMap = new HashMap();\n    this._boundaryNodeRule = null;\n    this._useBoundaryDeterminationRule = true;\n    this._argIndex = null;\n    this._boundaryNodes = null;\n    this._hasTooFewPoints = false;\n    this._invalidPoint = null;\n    this._areaPtLocator = null;\n    this._ptLocator = new PointLocator();\n    if (arguments.length === 2) {\n      var argIndex = arguments[0];\n      var parentGeom = arguments[1];\n      var boundaryNodeRule = BoundaryNodeRule.OGC_SFS_BOUNDARY_RULE;\n      this._argIndex = argIndex;\n      this._parentGeom = parentGeom;\n      this._boundaryNodeRule = boundaryNodeRule;\n      if (parentGeom !== null) {\n        this.add(parentGeom);\n      }\n    } else if (arguments.length === 3) {\n      var argIndex$1 = arguments[0];\n      var parentGeom$1 = arguments[1];\n      var boundaryNodeRule$1 = arguments[2];\n      this._argIndex = argIndex$1;\n      this._parentGeom = parentGeom$1;\n      this._boundaryNodeRule = boundaryNodeRule$1;\n      if (parentGeom$1 !== null) {\n        this.add(parentGeom$1);\n      }\n    }\n  }\n\n  if ( PlanarGraph$$1 ) GeometryGraph.__proto__ = PlanarGraph$$1;\n  GeometryGraph.prototype = Object.create( PlanarGraph$$1 && PlanarGraph$$1.prototype );\n  GeometryGraph.prototype.constructor = GeometryGraph;\n  GeometryGraph.prototype.insertBoundaryPoint = function insertBoundaryPoint (argIndex, coord) {\n    var n = this._nodes.addNode(coord);\n    var lbl = n.getLabel();\n    var boundaryCount = 1;\n    var loc = Location.NONE;\n    loc = lbl.getLocation(argIndex, Position.ON);\n    if (loc === Location.BOUNDARY) { boundaryCount++; }\n    var newLoc = GeometryGraph.determineBoundary(this._boundaryNodeRule, boundaryCount);\n    lbl.setLocation(argIndex, newLoc);\n  };\n  GeometryGraph.prototype.computeSelfNodes = function computeSelfNodes () {\n    if (arguments.length === 2) {\n      var li = arguments[0];\n      var computeRingSelfNodes = arguments[1];\n      return this.computeSelfNodes(li, computeRingSelfNodes, false)\n    } else if (arguments.length === 3) {\n      var li$1 = arguments[0];\n      var computeRingSelfNodes$1 = arguments[1];\n      var isDoneIfProperInt = arguments[2];\n      var si = new SegmentIntersector$2(li$1, true, false);\n      si.setIsDoneIfProperInt(isDoneIfProperInt);\n      var esi = this.createEdgeSetIntersector();\n      var isRings = this._parentGeom instanceof LinearRing || this._parentGeom instanceof Polygon || this._parentGeom instanceof MultiPolygon;\n      var computeAllSegments = computeRingSelfNodes$1 || !isRings;\n      esi.computeIntersections(this._edges, si, computeAllSegments);\n      this.addSelfIntersectionNodes(this._argIndex);\n      return si\n    }\n  };\n  GeometryGraph.prototype.computeSplitEdges = function computeSplitEdges (edgelist) {\n    for (var i = this._edges.iterator(); i.hasNext();) {\n      var e = i.next();\n      e.eiList.addSplitEdges(edgelist);\n    }\n  };\n  GeometryGraph.prototype.computeEdgeIntersections = function computeEdgeIntersections (g, li, includeProper) {\n    var si = new SegmentIntersector$2(li, includeProper, true);\n    si.setBoundaryNodes(this.getBoundaryNodes(), g.getBoundaryNodes());\n    var esi = this.createEdgeSetIntersector();\n    esi.computeIntersections(this._edges, g._edges, si);\n    return si\n  };\n  GeometryGraph.prototype.getGeometry = function getGeometry () {\n    return this._parentGeom\n  };\n  GeometryGraph.prototype.getBoundaryNodeRule = function getBoundaryNodeRule () {\n    return this._boundaryNodeRule\n  };\n  GeometryGraph.prototype.hasTooFewPoints = function hasTooFewPoints () {\n    return this._hasTooFewPoints\n  };\n  GeometryGraph.prototype.addPoint = function addPoint () {\n    if (arguments[0] instanceof Point) {\n      var p = arguments[0];\n      var coord = p.getCoordinate();\n      this.insertPoint(this._argIndex, coord, Location.INTERIOR);\n    } else if (arguments[0] instanceof Coordinate) {\n      var pt = arguments[0];\n      this.insertPoint(this._argIndex, pt, Location.INTERIOR);\n    }\n  };\n  GeometryGraph.prototype.addPolygon = function addPolygon (p) {\n    var this$1 = this;\n\n    this.addPolygonRing(p.getExteriorRing(), Location.EXTERIOR, Location.INTERIOR);\n    for (var i = 0; i < p.getNumInteriorRing(); i++) {\n      var hole = p.getInteriorRingN(i);\n      this$1.addPolygonRing(hole, Location.INTERIOR, Location.EXTERIOR);\n    }\n  };\n  GeometryGraph.prototype.addEdge = function addEdge (e) {\n    this.insertEdge(e);\n    var coord = e.getCoordinates();\n    this.insertPoint(this._argIndex, coord[0], Location.BOUNDARY);\n    this.insertPoint(this._argIndex, coord[coord.length - 1], Location.BOUNDARY);\n  };\n  GeometryGraph.prototype.addLineString = function addLineString (line) {\n    var coord = CoordinateArrays.removeRepeatedPoints(line.getCoordinates());\n    if (coord.length < 2) {\n      this._hasTooFewPoints = true;\n      this._invalidPoint = coord[0];\n      return null\n    }\n    var e = new Edge(coord, new Label(this._argIndex, Location.INTERIOR));\n    this._lineEdgeMap.put(line, e);\n    this.insertEdge(e);\n    Assert.isTrue(coord.length >= 2, 'found LineString with single point');\n    this.insertBoundaryPoint(this._argIndex, coord[0]);\n    this.insertBoundaryPoint(this._argIndex, coord[coord.length - 1]);\n  };\n  GeometryGraph.prototype.getInvalidPoint = function getInvalidPoint () {\n    return this._invalidPoint\n  };\n  GeometryGraph.prototype.getBoundaryPoints = function getBoundaryPoints () {\n    var coll = this.getBoundaryNodes();\n    var pts = new Array(coll.size()).fill(null);\n    var i = 0;\n    for (var it = coll.iterator(); it.hasNext();) {\n      var node = it.next();\n      pts[i++] = node.getCoordinate().copy();\n    }\n    return pts\n  };\n  GeometryGraph.prototype.getBoundaryNodes = function getBoundaryNodes () {\n    if (this._boundaryNodes === null) { this._boundaryNodes = this._nodes.getBoundaryNodes(this._argIndex); }\n    return this._boundaryNodes\n  };\n  GeometryGraph.prototype.addSelfIntersectionNode = function addSelfIntersectionNode (argIndex, coord, loc) {\n    if (this.isBoundaryNode(argIndex, coord)) { return null }\n    if (loc === Location.BOUNDARY && this._useBoundaryDeterminationRule) { this.insertBoundaryPoint(argIndex, coord); } else { this.insertPoint(argIndex, coord, loc); }\n  };\n  GeometryGraph.prototype.addPolygonRing = function addPolygonRing (lr, cwLeft, cwRight) {\n    if (lr.isEmpty()) { return null }\n    var coord = CoordinateArrays.removeRepeatedPoints(lr.getCoordinates());\n    if (coord.length < 4) {\n      this._hasTooFewPoints = true;\n      this._invalidPoint = coord[0];\n      return null\n    }\n    var left = cwLeft;\n    var right = cwRight;\n    if (CGAlgorithms.isCCW(coord)) {\n      left = cwRight;\n      right = cwLeft;\n    }\n    var e = new Edge(coord, new Label(this._argIndex, Location.BOUNDARY, left, right));\n    this._lineEdgeMap.put(lr, e);\n    this.insertEdge(e);\n    this.insertPoint(this._argIndex, coord[0], Location.BOUNDARY);\n  };\n  GeometryGraph.prototype.insertPoint = function insertPoint (argIndex, coord, onLocation) {\n    var n = this._nodes.addNode(coord);\n    var lbl = n.getLabel();\n    if (lbl === null) {\n      n._label = new Label(argIndex, onLocation);\n    } else { lbl.setLocation(argIndex, onLocation); }\n  };\n  GeometryGraph.prototype.createEdgeSetIntersector = function createEdgeSetIntersector () {\n    return new SimpleMCSweepLineIntersector()\n  };\n  GeometryGraph.prototype.addSelfIntersectionNodes = function addSelfIntersectionNodes (argIndex) {\n    var this$1 = this;\n\n    for (var i = this._edges.iterator(); i.hasNext();) {\n      var e = i.next();\n      var eLoc = e.getLabel().getLocation(argIndex);\n      for (var eiIt = e.eiList.iterator(); eiIt.hasNext();) {\n        var ei = eiIt.next();\n        this$1.addSelfIntersectionNode(argIndex, ei.coord, eLoc);\n      }\n    }\n  };\n  GeometryGraph.prototype.add = function add () {\n    if (arguments.length === 1) {\n      var g = arguments[0];\n      if (g.isEmpty()) { return null }\n      if (g instanceof MultiPolygon) { this._useBoundaryDeterminationRule = false; }\n      if (g instanceof Polygon) { this.addPolygon(g); }\n      else if (g instanceof LineString) { this.addLineString(g); }\n      else if (g instanceof Point) { this.addPoint(g); }\n      else if (g instanceof MultiPoint) { this.addCollection(g); }\n      else if (g instanceof MultiLineString) { this.addCollection(g); }\n      else if (g instanceof MultiPolygon) { this.addCollection(g); }\n      else if (g instanceof GeometryCollection) { this.addCollection(g); }\n      else { throw new Error(g.getClass().getName()) }\n    } else { return PlanarGraph$$1.prototype.add.apply(this, arguments) }\n  };\n  GeometryGraph.prototype.addCollection = function addCollection (gc) {\n    var this$1 = this;\n\n    for (var i = 0; i < gc.getNumGeometries(); i++) {\n      var g = gc.getGeometryN(i);\n      this$1.add(g);\n    }\n  };\n  GeometryGraph.prototype.locate = function locate (pt) {\n    if (hasInterface(this._parentGeom, Polygonal) && this._parentGeom.getNumGeometries() > 50) {\n      if (this._areaPtLocator === null) {\n        this._areaPtLocator = new IndexedPointInAreaLocator(this._parentGeom);\n      }\n      return this._areaPtLocator.locate(pt)\n    }\n    return this._ptLocator.locate(pt, this._parentGeom)\n  };\n  GeometryGraph.prototype.findEdge = function findEdge () {\n    if (arguments.length === 1) {\n      var line = arguments[0];\n      return this._lineEdgeMap.get(line)\n    } else { return PlanarGraph$$1.prototype.findEdge.apply(this, arguments) }\n  };\n  GeometryGraph.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  GeometryGraph.prototype.getClass = function getClass () {\n    return GeometryGraph\n  };\n  GeometryGraph.determineBoundary = function determineBoundary (boundaryNodeRule, boundaryCount) {\n    return boundaryNodeRule.isInBoundary(boundaryCount) ? Location.BOUNDARY : Location.INTERIOR\n  };\n\n  return GeometryGraph;\n}(PlanarGraph));\n\nvar GeometryGraphOp = function GeometryGraphOp () {\n  this._li = new RobustLineIntersector();\n  this._resultPrecisionModel = null;\n  this._arg = null;\n  if (arguments.length === 1) {\n    var g0 = arguments[0];\n    this.setComputationPrecision(g0.getPrecisionModel());\n    this._arg = new Array(1).fill(null);\n    this._arg[0] = new GeometryGraph(0, g0);\n  } else if (arguments.length === 2) {\n    var g0$1 = arguments[0];\n    var g1 = arguments[1];\n    var boundaryNodeRule = BoundaryNodeRule.OGC_SFS_BOUNDARY_RULE;\n    if (g0$1.getPrecisionModel().compareTo(g1.getPrecisionModel()) >= 0) { this.setComputationPrecision(g0$1.getPrecisionModel()); } else { this.setComputationPrecision(g1.getPrecisionModel()); }\n    this._arg = new Array(2).fill(null);\n    this._arg[0] = new GeometryGraph(0, g0$1, boundaryNodeRule);\n    this._arg[1] = new GeometryGraph(1, g1, boundaryNodeRule);\n  } else if (arguments.length === 3) {\n    var g0$2 = arguments[0];\n    var g1$1 = arguments[1];\n    var boundaryNodeRule$1 = arguments[2];\n    if (g0$2.getPrecisionModel().compareTo(g1$1.getPrecisionModel()) >= 0) { this.setComputationPrecision(g0$2.getPrecisionModel()); } else { this.setComputationPrecision(g1$1.getPrecisionModel()); }\n    this._arg = new Array(2).fill(null);\n    this._arg[0] = new GeometryGraph(0, g0$2, boundaryNodeRule$1);\n    this._arg[1] = new GeometryGraph(1, g1$1, boundaryNodeRule$1);\n  }\n};\nGeometryGraphOp.prototype.getArgGeometry = function getArgGeometry (i) {\n  return this._arg[i].getGeometry()\n};\nGeometryGraphOp.prototype.setComputationPrecision = function setComputationPrecision (pm) {\n  this._resultPrecisionModel = pm;\n  this._li.setPrecisionModel(this._resultPrecisionModel);\n};\nGeometryGraphOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryGraphOp.prototype.getClass = function getClass () {\n  return GeometryGraphOp\n};\n\n// operation.geometrygraph\n\nvar GeometryMapper = function GeometryMapper () {};\n\nGeometryMapper.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryMapper.prototype.getClass = function getClass () {\n  return GeometryMapper\n};\nGeometryMapper.map = function map () {\n  if (arguments[0] instanceof Geometry && hasInterface(arguments[1], GeometryMapper.MapOp)) {\n    var geom = arguments[0];\n    var op = arguments[1];\n    var mapped = new ArrayList();\n    for (var i = 0; i < geom.getNumGeometries(); i++) {\n      var g = op.map(geom.getGeometryN(i));\n      if (g !== null) { mapped.add(g); }\n    }\n    return geom.getFactory().buildGeometry(mapped)\n  } else if (hasInterface(arguments[0], Collection) && hasInterface(arguments[1], GeometryMapper.MapOp)) {\n    var geoms = arguments[0];\n    var op$1 = arguments[1];\n    var mapped$1 = new ArrayList();\n    for (var i$1 = geoms.iterator(); i$1.hasNext();) {\n      var g$1 = i$1.next();\n      var gr = op$1.map(g$1);\n      if (gr !== null) { mapped$1.add(gr); }\n    }\n    return mapped$1\n  }\n};\nGeometryMapper.MapOp = function MapOp () {};\n\nvar OverlayOp = (function (GeometryGraphOp) {\n  function OverlayOp () {\n    var g0 = arguments[0];\n    var g1 = arguments[1];\n    GeometryGraphOp.call(this, g0, g1);\n    this._ptLocator = new PointLocator();\n    this._geomFact = null;\n    this._resultGeom = null;\n    this._graph = null;\n    this._edgeList = new EdgeList();\n    this._resultPolyList = new ArrayList();\n    this._resultLineList = new ArrayList();\n    this._resultPointList = new ArrayList();\n    this._graph = new PlanarGraph(new OverlayNodeFactory());\n    this._geomFact = g0.getFactory();\n  }\n\n  if ( GeometryGraphOp ) OverlayOp.__proto__ = GeometryGraphOp;\n  OverlayOp.prototype = Object.create( GeometryGraphOp && GeometryGraphOp.prototype );\n  OverlayOp.prototype.constructor = OverlayOp;\n  OverlayOp.prototype.insertUniqueEdge = function insertUniqueEdge (e) {\n    var existingEdge = this._edgeList.findEqualEdge(e);\n    if (existingEdge !== null) {\n      var existingLabel = existingEdge.getLabel();\n      var labelToMerge = e.getLabel();\n      if (!existingEdge.isPointwiseEqual(e)) {\n        labelToMerge = new Label(e.getLabel());\n        labelToMerge.flip();\n      }\n      var depth = existingEdge.getDepth();\n      if (depth.isNull()) {\n        depth.add(existingLabel);\n      }\n      depth.add(labelToMerge);\n      existingLabel.merge(labelToMerge);\n    } else {\n      this._edgeList.add(e);\n    }\n  };\n  OverlayOp.prototype.getGraph = function getGraph () {\n    return this._graph\n  };\n  OverlayOp.prototype.cancelDuplicateResultEdges = function cancelDuplicateResultEdges () {\n    for (var it = this._graph.getEdgeEnds().iterator(); it.hasNext();) {\n      var de = it.next();\n      var sym = de.getSym();\n      if (de.isInResult() && sym.isInResult()) {\n        de.setInResult(false);\n        sym.setInResult(false);\n      }\n    }\n  };\n  OverlayOp.prototype.isCoveredByLA = function isCoveredByLA (coord) {\n    if (this.isCovered(coord, this._resultLineList)) { return true }\n    if (this.isCovered(coord, this._resultPolyList)) { return true }\n    return false\n  };\n  OverlayOp.prototype.computeGeometry = function computeGeometry (resultPointList, resultLineList, resultPolyList, opcode) {\n    var geomList = new ArrayList();\n    geomList.addAll(resultPointList);\n    geomList.addAll(resultLineList);\n    geomList.addAll(resultPolyList);\n    if (geomList.isEmpty()) { return OverlayOp.createEmptyResult(opcode, this._arg[0].getGeometry(), this._arg[1].getGeometry(), this._geomFact) }\n    return this._geomFact.buildGeometry(geomList)\n  };\n  OverlayOp.prototype.mergeSymLabels = function mergeSymLabels () {\n    for (var nodeit = this._graph.getNodes().iterator(); nodeit.hasNext();) {\n      var node = nodeit.next();\n      node.getEdges().mergeSymLabels();\n    }\n  };\n  OverlayOp.prototype.isCovered = function isCovered (coord, geomList) {\n    var this$1 = this;\n\n    for (var it = geomList.iterator(); it.hasNext();) {\n      var geom = it.next();\n      var loc = this$1._ptLocator.locate(coord, geom);\n      if (loc !== Location.EXTERIOR) { return true }\n    }\n    return false\n  };\n  OverlayOp.prototype.replaceCollapsedEdges = function replaceCollapsedEdges () {\n    var newEdges = new ArrayList();\n    for (var it = this._edgeList.iterator(); it.hasNext();) {\n      var e = it.next();\n      if (e.isCollapsed()) {\n        it.remove();\n        newEdges.add(e.getCollapsedEdge());\n      }\n    }\n    this._edgeList.addAll(newEdges);\n  };\n  OverlayOp.prototype.updateNodeLabelling = function updateNodeLabelling () {\n    for (var nodeit = this._graph.getNodes().iterator(); nodeit.hasNext();) {\n      var node = nodeit.next();\n      var lbl = node.getEdges().getLabel();\n      node.getLabel().merge(lbl);\n    }\n  };\n  OverlayOp.prototype.getResultGeometry = function getResultGeometry (overlayOpCode) {\n    this.computeOverlay(overlayOpCode);\n    return this._resultGeom\n  };\n  OverlayOp.prototype.insertUniqueEdges = function insertUniqueEdges (edges) {\n    var this$1 = this;\n\n    for (var i = edges.iterator(); i.hasNext();) {\n      var e = i.next();\n      this$1.insertUniqueEdge(e);\n    }\n  };\n  OverlayOp.prototype.computeOverlay = function computeOverlay (opCode) {\n    this.copyPoints(0);\n    this.copyPoints(1);\n    this._arg[0].computeSelfNodes(this._li, false);\n    this._arg[1].computeSelfNodes(this._li, false);\n    this._arg[0].computeEdgeIntersections(this._arg[1], this._li, true);\n    var baseSplitEdges = new ArrayList();\n    this._arg[0].computeSplitEdges(baseSplitEdges);\n    this._arg[1].computeSplitEdges(baseSplitEdges);\n    // const splitEdges = baseSplitEdges\n    this.insertUniqueEdges(baseSplitEdges);\n    this.computeLabelsFromDepths();\n    this.replaceCollapsedEdges();\n    EdgeNodingValidator.checkValid(this._edgeList.getEdges());\n    this._graph.addEdges(this._edgeList.getEdges());\n    this.computeLabelling();\n    this.labelIncompleteNodes();\n    this.findResultAreaEdges(opCode);\n    this.cancelDuplicateResultEdges();\n    var polyBuilder = new PolygonBuilder(this._geomFact);\n    polyBuilder.add(this._graph);\n    this._resultPolyList = polyBuilder.getPolygons();\n    var lineBuilder = new LineBuilder(this, this._geomFact, this._ptLocator);\n    this._resultLineList = lineBuilder.build(opCode);\n    var pointBuilder = new PointBuilder(this, this._geomFact, this._ptLocator);\n    this._resultPointList = pointBuilder.build(opCode);\n    this._resultGeom = this.computeGeometry(this._resultPointList, this._resultLineList, this._resultPolyList, opCode);\n  };\n  OverlayOp.prototype.labelIncompleteNode = function labelIncompleteNode (n, targetIndex) {\n    var loc = this._ptLocator.locate(n.getCoordinate(), this._arg[targetIndex].getGeometry());\n    n.getLabel().setLocation(targetIndex, loc);\n  };\n  OverlayOp.prototype.copyPoints = function copyPoints (argIndex) {\n    var this$1 = this;\n\n    for (var i = this._arg[argIndex].getNodeIterator(); i.hasNext();) {\n      var graphNode = i.next();\n      var newNode = this$1._graph.addNode(graphNode.getCoordinate());\n      newNode.setLabel(argIndex, graphNode.getLabel().getLocation(argIndex));\n    }\n  };\n  OverlayOp.prototype.findResultAreaEdges = function findResultAreaEdges (opCode) {\n    for (var it = this._graph.getEdgeEnds().iterator(); it.hasNext();) {\n      var de = it.next();\n      var label = de.getLabel();\n      if (label.isArea() && !de.isInteriorAreaEdge() && OverlayOp.isResultOfOp(label.getLocation(0, Position.RIGHT), label.getLocation(1, Position.RIGHT), opCode)) {\n        de.setInResult(true);\n      }\n    }\n  };\n  OverlayOp.prototype.computeLabelsFromDepths = function computeLabelsFromDepths () {\n    for (var it = this._edgeList.iterator(); it.hasNext();) {\n      var e = it.next();\n      var lbl = e.getLabel();\n      var depth = e.getDepth();\n      if (!depth.isNull()) {\n        depth.normalize();\n        for (var i = 0; i < 2; i++) {\n          if (!lbl.isNull(i) && lbl.isArea() && !depth.isNull(i)) {\n            if (depth.getDelta(i) === 0) {\n              lbl.toLine(i);\n            } else {\n              Assert.isTrue(!depth.isNull(i, Position.LEFT), 'depth of LEFT side has not been initialized');\n              lbl.setLocation(i, Position.LEFT, depth.getLocation(i, Position.LEFT));\n              Assert.isTrue(!depth.isNull(i, Position.RIGHT), 'depth of RIGHT side has not been initialized');\n              lbl.setLocation(i, Position.RIGHT, depth.getLocation(i, Position.RIGHT));\n            }\n          }\n        }\n      }\n    }\n  };\n  OverlayOp.prototype.computeLabelling = function computeLabelling () {\n    var this$1 = this;\n\n    for (var nodeit = this._graph.getNodes().iterator(); nodeit.hasNext();) {\n      var node = nodeit.next();\n      node.getEdges().computeLabelling(this$1._arg);\n    }\n    this.mergeSymLabels();\n    this.updateNodeLabelling();\n  };\n  OverlayOp.prototype.labelIncompleteNodes = function labelIncompleteNodes () {\n    var this$1 = this;\n\n    // let nodeCount = 0\n    for (var ni = this._graph.getNodes().iterator(); ni.hasNext();) {\n      var n = ni.next();\n      var label = n.getLabel();\n      if (n.isIsolated()) {\n        // nodeCount++\n        if (label.isNull(0)) { this$1.labelIncompleteNode(n, 0); } else { this$1.labelIncompleteNode(n, 1); }\n      }\n      n.getEdges().updateLabelling(label);\n    }\n  };\n  OverlayOp.prototype.isCoveredByA = function isCoveredByA (coord) {\n    if (this.isCovered(coord, this._resultPolyList)) { return true }\n    return false\n  };\n  OverlayOp.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  OverlayOp.prototype.getClass = function getClass () {\n    return OverlayOp\n  };\n\n  return OverlayOp;\n}(GeometryGraphOp));\n\nOverlayOp.overlayOp = function (geom0, geom1, opCode) {\n  var gov = new OverlayOp(geom0, geom1);\n  var geomOv = gov.getResultGeometry(opCode);\n  return geomOv\n};\nOverlayOp.intersection = function (g, other) {\n  if (g.isEmpty() || other.isEmpty()) { return OverlayOp.createEmptyResult(OverlayOp.INTERSECTION, g, other, g.getFactory()) }\n  if (g.isGeometryCollection()) {\n    var g2 = other;\n    return GeometryCollectionMapper.map(g, {\n      interfaces_: function () {\n        return [GeometryMapper.MapOp]\n      },\n      map: function (g) {\n        return g.intersection(g2)\n      }\n    })\n  }\n  g.checkNotGeometryCollection(g);\n  g.checkNotGeometryCollection(other);\n  return SnapIfNeededOverlayOp.overlayOp(g, other, OverlayOp.INTERSECTION)\n};\nOverlayOp.symDifference = function (g, other) {\n  if (g.isEmpty() || other.isEmpty()) {\n    if (g.isEmpty() && other.isEmpty()) { return OverlayOp.createEmptyResult(OverlayOp.SYMDIFFERENCE, g, other, g.getFactory()) }\n    if (g.isEmpty()) { return other.copy() }\n    if (other.isEmpty()) { return g.copy() }\n  }\n  g.checkNotGeometryCollection(g);\n  g.checkNotGeometryCollection(other);\n  return SnapIfNeededOverlayOp.overlayOp(g, other, OverlayOp.SYMDIFFERENCE)\n};\nOverlayOp.resultDimension = function (opCode, g0, g1) {\n  var dim0 = g0.getDimension();\n  var dim1 = g1.getDimension();\n  var resultDimension = -1;\n  switch (opCode) {\n    case OverlayOp.INTERSECTION:\n      resultDimension = Math.min(dim0, dim1);\n      break\n    case OverlayOp.UNION:\n      resultDimension = Math.max(dim0, dim1);\n      break\n    case OverlayOp.DIFFERENCE:\n      resultDimension = dim0;\n      break\n    case OverlayOp.SYMDIFFERENCE:\n      resultDimension = Math.max(dim0, dim1);\n      break\n    default:\n  }\n  return resultDimension\n};\nOverlayOp.createEmptyResult = function (overlayOpCode, a, b, geomFact) {\n  var result = null;\n  switch (OverlayOp.resultDimension(overlayOpCode, a, b)) {\n    case -1:\n      result = geomFact.createGeometryCollection(new Array(0).fill(null));\n      break\n    case 0:\n      result = geomFact.createPoint();\n      break\n    case 1:\n      result = geomFact.createLineString();\n      break\n    case 2:\n      result = geomFact.createPolygon();\n      break\n    default:\n  }\n  return result\n};\nOverlayOp.difference = function (g, other) {\n  if (g.isEmpty()) { return OverlayOp.createEmptyResult(OverlayOp.DIFFERENCE, g, other, g.getFactory()) }\n  if (other.isEmpty()) { return g.copy() }\n  g.checkNotGeometryCollection(g);\n  g.checkNotGeometryCollection(other);\n  return SnapIfNeededOverlayOp.overlayOp(g, other, OverlayOp.DIFFERENCE)\n};\nOverlayOp.isResultOfOp = function () {\n  if (arguments.length === 2) {\n    var label = arguments[0];\n    var opCode = arguments[1];\n    var loc0 = label.getLocation(0);\n    var loc1 = label.getLocation(1);\n    return OverlayOp.isResultOfOp(loc0, loc1, opCode)\n  } else if (arguments.length === 3) {\n    var loc0$1 = arguments[0];\n    var loc1$1 = arguments[1];\n    var overlayOpCode = arguments[2];\n    if (loc0$1 === Location.BOUNDARY) { loc0$1 = Location.INTERIOR; }\n    if (loc1$1 === Location.BOUNDARY) { loc1$1 = Location.INTERIOR; }\n    switch (overlayOpCode) {\n      case OverlayOp.INTERSECTION:\n        return loc0$1 === Location.INTERIOR && loc1$1 === Location.INTERIOR\n      case OverlayOp.UNION:\n        return loc0$1 === Location.INTERIOR || loc1$1 === Location.INTERIOR\n      case OverlayOp.DIFFERENCE:\n        return loc0$1 === Location.INTERIOR && loc1$1 !== Location.INTERIOR\n      case OverlayOp.SYMDIFFERENCE:\n        return (loc0$1 === Location.INTERIOR && loc1$1 !== Location.INTERIOR) || (loc0$1 !== Location.INTERIOR && loc1$1 === Location.INTERIOR)\n      default:\n    }\n    return false\n  }\n};\nOverlayOp.INTERSECTION = 1;\nOverlayOp.UNION = 2;\nOverlayOp.DIFFERENCE = 3;\nOverlayOp.SYMDIFFERENCE = 4;\n\nvar FuzzyPointLocator = function FuzzyPointLocator () {\n  this._g = null;\n  this._boundaryDistanceTolerance = null;\n  this._linework = null;\n  this._ptLocator = new PointLocator();\n  this._seg = new LineSegment();\n  var g = arguments[0];\n  var boundaryDistanceTolerance = arguments[1];\n  this._g = g;\n  this._boundaryDistanceTolerance = boundaryDistanceTolerance;\n  this._linework = this.extractLinework(g);\n};\nFuzzyPointLocator.prototype.isWithinToleranceOfBoundary = function isWithinToleranceOfBoundary (pt) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._linework.getNumGeometries(); i++) {\n    var line = this$1._linework.getGeometryN(i);\n    var seq = line.getCoordinateSequence();\n    for (var j = 0; j < seq.size() - 1; j++) {\n      seq.getCoordinate(j, this$1._seg.p0);\n      seq.getCoordinate(j + 1, this$1._seg.p1);\n      var dist = this$1._seg.distance(pt);\n      if (dist <= this$1._boundaryDistanceTolerance) { return true }\n    }\n  }\n  return false\n};\nFuzzyPointLocator.prototype.getLocation = function getLocation (pt) {\n  if (this.isWithinToleranceOfBoundary(pt)) { return Location.BOUNDARY }\n  return this._ptLocator.locate(pt, this._g)\n};\nFuzzyPointLocator.prototype.extractLinework = function extractLinework (g) {\n  var extracter = new PolygonalLineworkExtracter();\n  g.apply(extracter);\n  var linework = extracter.getLinework();\n  var lines = GeometryFactory.toLineStringArray(linework);\n  return g.getFactory().createMultiLineString(lines)\n};\nFuzzyPointLocator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nFuzzyPointLocator.prototype.getClass = function getClass () {\n  return FuzzyPointLocator\n};\n\nvar PolygonalLineworkExtracter = function PolygonalLineworkExtracter () {\n  this._linework = null;\n  this._linework = new ArrayList();\n};\nPolygonalLineworkExtracter.prototype.getLinework = function getLinework () {\n  return this._linework\n};\nPolygonalLineworkExtracter.prototype.filter = function filter (g) {\n    var this$1 = this;\n\n  if (g instanceof Polygon) {\n    var poly = g;\n    this._linework.add(poly.getExteriorRing());\n    for (var i = 0; i < poly.getNumInteriorRing(); i++) {\n      this$1._linework.add(poly.getInteriorRingN(i));\n    }\n  }\n};\nPolygonalLineworkExtracter.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryFilter]\n};\nPolygonalLineworkExtracter.prototype.getClass = function getClass () {\n  return PolygonalLineworkExtracter\n};\n\nvar OffsetPointGenerator = function OffsetPointGenerator () {\n  this._g = null;\n  this._doLeft = true;\n  this._doRight = true;\n  var g = arguments[0];\n  this._g = g;\n};\nOffsetPointGenerator.prototype.extractPoints = function extractPoints (line, offsetDistance, offsetPts) {\n    var this$1 = this;\n\n  var pts = line.getCoordinates();\n  for (var i = 0; i < pts.length - 1; i++) {\n    this$1.computeOffsetPoints(pts[i], pts[i + 1], offsetDistance, offsetPts);\n  }\n};\nOffsetPointGenerator.prototype.setSidesToGenerate = function setSidesToGenerate (doLeft, doRight) {\n  this._doLeft = doLeft;\n  this._doRight = doRight;\n};\nOffsetPointGenerator.prototype.getPoints = function getPoints (offsetDistance) {\n    var this$1 = this;\n\n  var offsetPts = new ArrayList();\n  var lines = LinearComponentExtracter.getLines(this._g);\n  for (var i = lines.iterator(); i.hasNext();) {\n    var line = i.next();\n    this$1.extractPoints(line, offsetDistance, offsetPts);\n  }\n  return offsetPts\n};\nOffsetPointGenerator.prototype.computeOffsetPoints = function computeOffsetPoints (p0, p1, offsetDistance, offsetPts) {\n  var dx = p1.x - p0.x;\n  var dy = p1.y - p0.y;\n  var len = Math.sqrt(dx * dx + dy * dy);\n  var ux = offsetDistance * dx / len;\n  var uy = offsetDistance * dy / len;\n  var midX = (p1.x + p0.x) / 2;\n  var midY = (p1.y + p0.y) / 2;\n  if (this._doLeft) {\n    var offsetLeft = new Coordinate(midX - uy, midY + ux);\n    offsetPts.add(offsetLeft);\n  }\n  if (this._doRight) {\n    var offsetRight = new Coordinate(midX + uy, midY - ux);\n    offsetPts.add(offsetRight);\n  }\n};\nOffsetPointGenerator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOffsetPointGenerator.prototype.getClass = function getClass () {\n  return OffsetPointGenerator\n};\n\nvar OverlayResultValidator = function OverlayResultValidator () {\n  this._geom = null;\n  this._locFinder = null;\n  this._location = new Array(3).fill(null);\n  this._invalidLocation = null;\n  this._boundaryDistanceTolerance = OverlayResultValidator.TOLERANCE;\n  this._testCoords = new ArrayList();\n  var a = arguments[0];\n  var b = arguments[1];\n  var result = arguments[2];\n  this._boundaryDistanceTolerance = OverlayResultValidator.computeBoundaryDistanceTolerance(a, b);\n  this._geom = [a, b, result];\n  this._locFinder = [new FuzzyPointLocator(this._geom[0], this._boundaryDistanceTolerance), new FuzzyPointLocator(this._geom[1], this._boundaryDistanceTolerance), new FuzzyPointLocator(this._geom[2], this._boundaryDistanceTolerance)];\n};\n\nvar staticAccessors$46 = { TOLERANCE: { configurable: true } };\nOverlayResultValidator.prototype.reportResult = function reportResult (overlayOp, location, expectedInterior) {\n  System.out.println('Overlay result invalid - A:' + Location.toLocationSymbol(location[0]) + ' B:' + Location.toLocationSymbol(location[1]) + ' expected:' + (expectedInterior ? 'i' : 'e') + ' actual:' + Location.toLocationSymbol(location[2]));\n};\nOverlayResultValidator.prototype.isValid = function isValid (overlayOp) {\n  this.addTestPts(this._geom[0]);\n  this.addTestPts(this._geom[1]);\n  var isValid = this.checkValid(overlayOp);\n  return isValid\n};\nOverlayResultValidator.prototype.checkValid = function checkValid () {\n    var this$1 = this;\n\n  if (arguments.length === 1) {\n    var overlayOp = arguments[0];\n    for (var i = 0; i < this._testCoords.size(); i++) {\n      var pt = this$1._testCoords.get(i);\n      if (!this$1.checkValid(overlayOp, pt)) {\n        this$1._invalidLocation = pt;\n        return false\n      }\n    }\n    return true\n  } else if (arguments.length === 2) {\n    var overlayOp$1 = arguments[0];\n    var pt$1 = arguments[1];\n    this._location[0] = this._locFinder[0].getLocation(pt$1);\n    this._location[1] = this._locFinder[1].getLocation(pt$1);\n    this._location[2] = this._locFinder[2].getLocation(pt$1);\n    if (OverlayResultValidator.hasLocation(this._location, Location.BOUNDARY)) { return true }\n    return this.isValidResult(overlayOp$1, this._location)\n  }\n};\nOverlayResultValidator.prototype.addTestPts = function addTestPts (g) {\n  var ptGen = new OffsetPointGenerator(g);\n  this._testCoords.addAll(ptGen.getPoints(5 * this._boundaryDistanceTolerance));\n};\nOverlayResultValidator.prototype.isValidResult = function isValidResult (overlayOp, location) {\n  var expectedInterior = OverlayOp.isResultOfOp(location[0], location[1], overlayOp);\n  var resultInInterior = location[2] === Location.INTERIOR;\n  var isValid = !(expectedInterior ^ resultInInterior);\n  if (!isValid) { this.reportResult(overlayOp, location, expectedInterior); }\n  return isValid\n};\nOverlayResultValidator.prototype.getInvalidLocation = function getInvalidLocation () {\n  return this._invalidLocation\n};\nOverlayResultValidator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOverlayResultValidator.prototype.getClass = function getClass () {\n  return OverlayResultValidator\n};\nOverlayResultValidator.hasLocation = function hasLocation (location, loc) {\n  for (var i = 0; i < 3; i++) {\n    if (location[i] === loc) { return true }\n  }\n  return false\n};\nOverlayResultValidator.computeBoundaryDistanceTolerance = function computeBoundaryDistanceTolerance (g0, g1) {\n  return Math.min(GeometrySnapper.computeSizeBasedSnapTolerance(g0), GeometrySnapper.computeSizeBasedSnapTolerance(g1))\n};\nOverlayResultValidator.isValid = function isValid (a, b, overlayOp, result) {\n  var validator = new OverlayResultValidator(a, b, result);\n  return validator.isValid(overlayOp)\n};\nstaticAccessors$46.TOLERANCE.get = function () { return 0.000001 };\n\nObject.defineProperties( OverlayResultValidator, staticAccessors$46 );\n\n// operation.overlay\n\nvar GeometryCombiner = function GeometryCombiner (geoms) {\n  this._geomFactory = null;\n  this._skipEmpty = false;\n  this._inputGeoms = null;\n  this._geomFactory = GeometryCombiner.extractFactory(geoms);\n  this._inputGeoms = geoms;\n};\nGeometryCombiner.prototype.extractElements = function extractElements (geom, elems) {\n    var this$1 = this;\n\n  if (geom === null) { return null }\n  for (var i = 0; i < geom.getNumGeometries(); i++) {\n    var elemGeom = geom.getGeometryN(i);\n    if (this$1._skipEmpty && elemGeom.isEmpty()) { continue }\n    elems.add(elemGeom);\n  }\n};\nGeometryCombiner.prototype.combine = function combine () {\n    var this$1 = this;\n\n  var elems = new ArrayList();\n  for (var i = this._inputGeoms.iterator(); i.hasNext();) {\n    var g = i.next();\n    this$1.extractElements(g, elems);\n  }\n  if (elems.size() === 0) {\n    if (this._geomFactory !== null) {\n      return this._geomFactory.createGeometryCollection(null)\n    }\n    return null\n  }\n  return this._geomFactory.buildGeometry(elems)\n};\nGeometryCombiner.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryCombiner.prototype.getClass = function getClass () {\n  return GeometryCombiner\n};\nGeometryCombiner.combine = function combine () {\n  if (arguments.length === 1) {\n    var geoms = arguments[0];\n    var combiner = new GeometryCombiner(geoms);\n    return combiner.combine()\n  } else if (arguments.length === 2) {\n    var g0 = arguments[0];\n    var g1 = arguments[1];\n    var combiner$1 = new GeometryCombiner(GeometryCombiner.createList(g0, g1));\n    return combiner$1.combine()\n  } else if (arguments.length === 3) {\n    var g0$1 = arguments[0];\n    var g1$1 = arguments[1];\n    var g2 = arguments[2];\n    var combiner$2 = new GeometryCombiner(GeometryCombiner.createList(g0$1, g1$1, g2));\n    return combiner$2.combine()\n  }\n};\nGeometryCombiner.extractFactory = function extractFactory (geoms) {\n  if (geoms.isEmpty()) { return null }\n  return geoms.iterator().next().getFactory()\n};\nGeometryCombiner.createList = function createList () {\n  if (arguments.length === 2) {\n    var obj0 = arguments[0];\n    var obj1 = arguments[1];\n    var list = new ArrayList();\n    list.add(obj0);\n    list.add(obj1);\n    return list\n  } else if (arguments.length === 3) {\n    var obj0$1 = arguments[0];\n    var obj1$1 = arguments[1];\n    var obj2 = arguments[2];\n    var list$1 = new ArrayList();\n    list$1.add(obj0$1);\n    list$1.add(obj1$1);\n    list$1.add(obj2);\n    return list$1\n  }\n};\n\nvar CascadedPolygonUnion = function CascadedPolygonUnion () {\n  this._inputPolys = null;\n  this._geomFactory = null;\n  var polys = arguments[0];\n  this._inputPolys = polys;\n  if (this._inputPolys === null) { this._inputPolys = new ArrayList(); }\n};\n\nvar staticAccessors$47 = { STRTREE_NODE_CAPACITY: { configurable: true } };\nCascadedPolygonUnion.prototype.reduceToGeometries = function reduceToGeometries (geomTree) {\n    var this$1 = this;\n\n  var geoms = new ArrayList();\n  for (var i = geomTree.iterator(); i.hasNext();) {\n    var o = i.next();\n    var geom = null;\n    if (hasInterface(o, List)) {\n      geom = this$1.unionTree(o);\n    } else if (o instanceof Geometry) {\n      geom = o;\n    }\n    geoms.add(geom);\n  }\n  return geoms\n};\nCascadedPolygonUnion.prototype.extractByEnvelope = function extractByEnvelope (env, geom, disjointGeoms) {\n  var intersectingGeoms = new ArrayList();\n  for (var i = 0; i < geom.getNumGeometries(); i++) {\n    var elem = geom.getGeometryN(i);\n    if (elem.getEnvelopeInternal().intersects(env)) { intersectingGeoms.add(elem); } else { disjointGeoms.add(elem); }\n  }\n  return this._geomFactory.buildGeometry(intersectingGeoms)\n};\nCascadedPolygonUnion.prototype.unionOptimized = function unionOptimized (g0, g1) {\n  var g0Env = g0.getEnvelopeInternal();\n  var g1Env = g1.getEnvelopeInternal();\n  if (!g0Env.intersects(g1Env)) {\n    var combo = GeometryCombiner.combine(g0, g1);\n    return combo\n  }\n  if (g0.getNumGeometries() <= 1 && g1.getNumGeometries() <= 1) { return this.unionActual(g0, g1) }\n  var commonEnv = g0Env.intersection(g1Env);\n  return this.unionUsingEnvelopeIntersection(g0, g1, commonEnv)\n};\nCascadedPolygonUnion.prototype.union = function union () {\n  if (this._inputPolys === null) { throw new Error('union() method cannot be called twice') }\n  if (this._inputPolys.isEmpty()) { return null }\n  this._geomFactory = this._inputPolys.iterator().next().getFactory();\n  var index = new STRtree(CascadedPolygonUnion.STRTREE_NODE_CAPACITY);\n  for (var i = this._inputPolys.iterator(); i.hasNext();) {\n    var item = i.next();\n    index.insert(item.getEnvelopeInternal(), item);\n  }\n  this._inputPolys = null;\n  var itemTree = index.itemsTree();\n  var unionAll = this.unionTree(itemTree);\n  return unionAll\n};\nCascadedPolygonUnion.prototype.binaryUnion = function binaryUnion () {\n  if (arguments.length === 1) {\n    var geoms = arguments[0];\n    return this.binaryUnion(geoms, 0, geoms.size())\n  } else if (arguments.length === 3) {\n    var geoms$1 = arguments[0];\n    var start = arguments[1];\n    var end = arguments[2];\n    if (end - start <= 1) {\n      var g0 = CascadedPolygonUnion.getGeometry(geoms$1, start);\n      return this.unionSafe(g0, null)\n    } else if (end - start === 2) {\n      return this.unionSafe(CascadedPolygonUnion.getGeometry(geoms$1, start), CascadedPolygonUnion.getGeometry(geoms$1, start + 1))\n    } else {\n      var mid = Math.trunc((end + start) / 2);\n      var g0$1 = this.binaryUnion(geoms$1, start, mid);\n      var g1 = this.binaryUnion(geoms$1, mid, end);\n      return this.unionSafe(g0$1, g1)\n    }\n  }\n};\nCascadedPolygonUnion.prototype.repeatedUnion = function repeatedUnion (geoms) {\n  var union = null;\n  for (var i = geoms.iterator(); i.hasNext();) {\n    var g = i.next();\n    if (union === null) { union = g.copy(); } else { union = union.union(g); }\n  }\n  return union\n};\nCascadedPolygonUnion.prototype.unionSafe = function unionSafe (g0, g1) {\n  if (g0 === null && g1 === null) { return null }\n  if (g0 === null) { return g1.copy() }\n  if (g1 === null) { return g0.copy() }\n  return this.unionOptimized(g0, g1)\n};\nCascadedPolygonUnion.prototype.unionActual = function unionActual (g0, g1) {\n  return CascadedPolygonUnion.restrictToPolygons(g0.union(g1))\n};\nCascadedPolygonUnion.prototype.unionTree = function unionTree (geomTree) {\n  var geoms = this.reduceToGeometries(geomTree);\n  var union = this.binaryUnion(geoms);\n  return union\n};\nCascadedPolygonUnion.prototype.unionUsingEnvelopeIntersection = function unionUsingEnvelopeIntersection (g0, g1, common) {\n  var disjointPolys = new ArrayList();\n  var g0Int = this.extractByEnvelope(common, g0, disjointPolys);\n  var g1Int = this.extractByEnvelope(common, g1, disjointPolys);\n  var union = this.unionActual(g0Int, g1Int);\n  disjointPolys.add(union);\n  var overallUnion = GeometryCombiner.combine(disjointPolys);\n  return overallUnion\n};\nCascadedPolygonUnion.prototype.bufferUnion = function bufferUnion () {\n  if (arguments.length === 1) {\n    var geoms = arguments[0];\n    var factory = geoms.get(0).getFactory();\n    var gColl = factory.buildGeometry(geoms);\n    var unionAll = gColl.buffer(0.0);\n    return unionAll\n  } else if (arguments.length === 2) {\n    var g0 = arguments[0];\n    var g1 = arguments[1];\n    var factory$1 = g0.getFactory();\n    var gColl$1 = factory$1.createGeometryCollection([g0, g1]);\n    var unionAll$1 = gColl$1.buffer(0.0);\n    return unionAll$1\n  }\n};\nCascadedPolygonUnion.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCascadedPolygonUnion.prototype.getClass = function getClass () {\n  return CascadedPolygonUnion\n};\nCascadedPolygonUnion.restrictToPolygons = function restrictToPolygons (g) {\n  if (hasInterface(g, Polygonal)) {\n    return g\n  }\n  var polygons = PolygonExtracter.getPolygons(g);\n  if (polygons.size() === 1) { return polygons.get(0) }\n  return g.getFactory().createMultiPolygon(GeometryFactory.toPolygonArray(polygons))\n};\nCascadedPolygonUnion.getGeometry = function getGeometry (list, index) {\n  if (index >= list.size()) { return null }\n  return list.get(index)\n};\nCascadedPolygonUnion.union = function union (polys) {\n  var op = new CascadedPolygonUnion(polys);\n  return op.union()\n};\nstaticAccessors$47.STRTREE_NODE_CAPACITY.get = function () { return 4 };\n\nObject.defineProperties( CascadedPolygonUnion, staticAccessors$47 );\n\nvar UnionOp = function UnionOp () {};\n\nUnionOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nUnionOp.prototype.getClass = function getClass () {\n  return UnionOp\n};\nUnionOp.union = function union (g, other) {\n  if (g.isEmpty() || other.isEmpty()) {\n    if (g.isEmpty() && other.isEmpty()) { return OverlayOp.createEmptyResult(OverlayOp.UNION, g, other, g.getFactory()) }\n    if (g.isEmpty()) { return other.copy() }\n    if (other.isEmpty()) { return g.copy() }\n  }\n  g.checkNotGeometryCollection(g);\n  g.checkNotGeometryCollection(other);\n  return SnapIfNeededOverlayOp.overlayOp(g, other, OverlayOp.UNION)\n};\n\n// operation.union\n\n// operation\n\n/**\n * Polyfill for IE support\n */\n\nexport { GeoJSONReader, GeoJSONWriter, OverlayOp, UnionOp, BufferOp };\n","import { coordEach } from '@turf/meta';\nimport { isObject } from '@turf/helpers';\n\n/**\n * Takes a GeoJSON Feature or FeatureCollection and truncates the precision of the geometry.\n *\n * @name truncate\n * @param {GeoJSON} geojson any GeoJSON Feature, FeatureCollection, Geometry or GeometryCollection.\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.precision=6] coordinate decimal precision\n * @param {number} [options.coordinates=3] maximum number of coordinates (primarly used to remove z coordinates)\n * @param {boolean} [options.mutate=false] allows GeoJSON input to be mutated (significant performance increase if true)\n * @returns {GeoJSON} layer with truncated geometry\n * @example\n * var point = turf.point([\n *     70.46923055566859,\n *     58.11088890802906,\n *     1508\n * ]);\n * var options = {precision: 3, coordinates: 2};\n * var truncated = turf.truncate(point, options);\n * //=truncated.geometry.coordinates => [70.469, 58.111]\n *\n * //addToMap\n * var addToMap = [truncated];\n */\nfunction truncate(geojson, options) {\n    // Optional parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var precision = options.precision;\n    var coordinates = options.coordinates;\n    var mutate = options.mutate;\n\n    // default params\n    precision = (precision === undefined || precision === null || isNaN(precision)) ? 6 : precision;\n    coordinates = (coordinates === undefined || coordinates === null || isNaN(coordinates)) ? 3 : coordinates;\n\n    // validation\n    if (!geojson) throw new Error('<geojson> is required');\n    if (typeof precision !== 'number') throw new Error('<precision> must be a number');\n    if (typeof coordinates !== 'number') throw new Error('<coordinates> must be a number');\n\n    // prevent input mutation\n    if (mutate === false || mutate === undefined) geojson = JSON.parse(JSON.stringify(geojson));\n\n    var factor = Math.pow(10, precision);\n\n    // Truncate Coordinates\n    coordEach(geojson, function (coords) {\n        truncateCoords(coords, factor, coordinates);\n    });\n    return geojson;\n}\n\n/**\n * Truncate Coordinates - Mutates coordinates in place\n *\n * @private\n * @param {Array<any>} coords Geometry Coordinates\n * @param {number} factor rounding factor for coordinate decimal precision\n * @param {number} coordinates maximum number of coordinates (primarly used to remove z coordinates)\n * @returns {Array<any>} mutated coordinates\n */\nfunction truncateCoords(coords, factor, coordinates) {\n    // Remove extra coordinates (usually elevation coordinates and more)\n    if (coords.length > coordinates) coords.splice(coordinates, coords.length);\n\n    // Truncate coordinate decimals\n    for (var i = 0; i < coords.length; i++) {\n        coords[i] = Math.round(coords[i] * factor) / factor;\n    }\n    return coords;\n}\n\nexport default truncate;\n","import { feature } from '@turf/helpers';\nimport { getCoords, getType } from '@turf/invariant';\n\n/**\n * Removes redundant coordinates from any GeoJSON Geometry.\n *\n * @name cleanCoords\n * @param {Geometry|Feature} geojson Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {boolean} [options.mutate=false] allows GeoJSON input to be mutated\n * @returns {Geometry|Feature} the cleaned input Feature/Geometry\n * @example\n * var line = turf.lineString([[0, 0], [0, 2], [0, 5], [0, 8], [0, 8], [0, 10]]);\n * var multiPoint = turf.multiPoint([[0, 0], [0, 0], [2, 2]]);\n *\n * turf.cleanCoords(line).geometry.coordinates;\n * //= [[0, 0], [0, 10]]\n *\n * turf.cleanCoords(multiPoint).geometry.coordinates;\n * //= [[0, 0], [2, 2]]\n */\nfunction cleanCoords(geojson, options) {\n    // Backwards compatible with v4.0\n    var mutate = (typeof options === 'object') ? options.mutate : options;\n    if (!geojson) throw new Error('geojson is required');\n    var type = getType(geojson);\n\n    // Store new \"clean\" points in this Array\n    var newCoords = [];\n\n    switch (type) {\n    case 'LineString':\n        newCoords = cleanLine(geojson);\n        break;\n    case 'MultiLineString':\n    case 'Polygon':\n        getCoords(geojson).forEach(function (line) {\n            newCoords.push(cleanLine(line));\n        });\n        break;\n    case 'MultiPolygon':\n        getCoords(geojson).forEach(function (polygons) {\n            var polyPoints = [];\n            polygons.forEach(function (ring) {\n                polyPoints.push(cleanLine(ring));\n            });\n            newCoords.push(polyPoints);\n        });\n        break;\n    case 'Point':\n        return geojson;\n    case 'MultiPoint':\n        var existing = {};\n        getCoords(geojson).forEach(function (coord) {\n            var key = coord.join('-');\n            if (!existing.hasOwnProperty(key)) {\n                newCoords.push(coord);\n                existing[key] = true;\n            }\n        });\n        break;\n    default:\n        throw new Error(type + ' geometry not supported');\n    }\n\n    // Support input mutation\n    if (geojson.coordinates) {\n        if (mutate === true) {\n            geojson.coordinates = newCoords;\n            return geojson;\n        }\n        return {type: type, coordinates: newCoords};\n    } else {\n        if (mutate === true) {\n            geojson.geometry.coordinates = newCoords;\n            return geojson;\n        }\n        return feature({type: type, coordinates: newCoords}, geojson.properties, geojson.bbox, geojson.id);\n    }\n}\n\n/**\n * Clean Coords\n *\n * @private\n * @param {Array<number>|LineString} line Line\n * @returns {Array<number>} Cleaned coordinates\n */\nfunction cleanLine(line) {\n    var points = getCoords(line);\n    // handle \"clean\" segment\n    if (points.length === 2 && !equals(points[0], points[1])) return points;\n\n    var prevPoint, point, nextPoint;\n    var newPoints = [];\n    var secondToLast = points.length - 1;\n\n    newPoints.push(points[0]);\n    for (var i = 1; i < secondToLast; i++) {\n        prevPoint = points[i - 1];\n        point = points[i];\n        nextPoint = points[i + 1];\n\n        if (!isPointOnLineSegment(prevPoint, nextPoint, point)) {\n            newPoints.push(point);\n        }\n    }\n    newPoints.push(nextPoint);\n    return newPoints;\n}\n\n/**\n * Compares two points and returns if they are equals\n *\n * @private\n * @param {Position} pt1 point\n * @param {Position} pt2 point\n * @returns {boolean} true if they are equals\n */\nfunction equals(pt1, pt2) {\n    return pt1[0] === pt2[0] && pt1[1] === pt2[1];\n}\n\n/**\n * Returns if `point` is on the segment between `start` and `end`.\n * Borrowed from `@turf/boolean-point-on-line` to speed up the evaluation (instead of using the module as dependency)\n *\n * @private\n * @param {Position} start coord pair of start of line\n * @param {Position} end coord pair of end of line\n * @param {Position} point coord pair of point to check\n * @returns {boolean} true/false\n */\nfunction isPointOnLineSegment(start, end, point) {\n    var x = point[0], y = point[1];\n    var startX = start[0], startY = start[1];\n    var endX = end[0], endY = end[1];\n\n    var dxc = x - startX;\n    var dyc = y - startY;\n    var dxl = endX - startX;\n    var dyl = endY - startY;\n    var cross = dxc * dyl - dyc * dxl;\n\n    if (cross !== 0) return false;\n    else if (Math.abs(dxl) >= Math.abs(dyl)) return dxl > 0 ? startX <= x && x <= endX : endX <= x && x <= startX;\n    else return dyl > 0 ? startY <= y && y <= endY : endY <= y && y <= startY;\n}\n\nexport default cleanCoords;\n","import { GeoJSONReader, GeoJSONWriter, OverlayOp } from 'turf-jsts';\nimport truncate from '@turf/truncate';\nimport { getGeom } from '@turf/invariant';\nimport { feature } from '@turf/helpers';\nimport cleanCoords from '@turf/clean-coords';\n\n// depend on jsts for now http://bjornharrtell.github.io/jsts/\n/**\n * Takes two {@link Polygon|polygons} and finds their intersection. If they share a border, returns the border; if they don't intersect, returns undefined.\n *\n * @name intersect\n * @param {Feature<Polygon>} poly1 the first polygon\n * @param {Feature<Polygon>} poly2 the second polygon\n * @returns {Feature|null} returns a feature representing the point(s) they share (in case of a {@link Point}  or {@link MultiPoint}), the borders they share (in case of a {@link LineString} or a {@link MultiLineString}), the area they share (in case of {@link Polygon} or {@link MultiPolygon}). If they do not share any point, returns `null`.\n * @example\n * var poly1 = turf.polygon([[\n *   [-122.801742, 45.48565],\n *   [-122.801742, 45.60491],\n *   [-122.584762, 45.60491],\n *   [-122.584762, 45.48565],\n *   [-122.801742, 45.48565]\n * ]]);\n *\n * var poly2 = turf.polygon([[\n *   [-122.520217, 45.535693],\n *   [-122.64038, 45.553967],\n *   [-122.720031, 45.526554],\n *   [-122.669906, 45.507309],\n *   [-122.723464, 45.446643],\n *   [-122.532577, 45.408574],\n *   [-122.487258, 45.477466],\n *   [-122.520217, 45.535693]\n * ]]);\n *\n * var intersection = turf.intersect(poly1, poly2);\n *\n * //addToMap\n * var addToMap = [poly1, poly2, intersection];\n */\nfunction intersect(poly1, poly2) {\n    var geom1 = getGeom(poly1);\n    var geom2 = getGeom(poly2);\n\n    // Return null if geometry is too narrow in coordinate precision\n    // fixes topology errors with JSTS\n    // https://github.com/Turfjs/turf/issues/463\n    // https://github.com/Turfjs/turf/pull/1004\n    if (cleanCoords(truncate(geom2, {precision: 4})).coordinates[0].length < 4) return null;\n    if (cleanCoords(truncate(geom1, {precision: 4})).coordinates[0].length < 4) return null;\n\n    var reader = new GeoJSONReader();\n    var a = reader.read(truncate(geom1));\n    var b = reader.read(truncate(geom2));\n    var intersection = OverlayOp.intersection(a, b);\n\n    // https://github.com/Turfjs/turf/issues/951\n    if (intersection.isEmpty()) return null;\n\n    var writer = new GeoJSONWriter();\n    var geom = writer.write(intersection);\n    return feature(geom);\n}\n\nexport default intersect;\n","import distance from '@turf/distance';\nimport intersect from '@turf/intersect';\nimport { getType } from '@turf/invariant';\nimport { featureCollection, isNumber, isObject, polygon } from '@turf/helpers';\n\n/**\n * Takes a bounding box and the diameter of the cell and returns a {@link FeatureCollection} of flat-topped\n * hexagons or triangles ({@link Polygon} features) aligned in an \"odd-q\" vertical grid as\n * described in [Hexagonal Grids](http://www.redblobgames.com/grids/hexagons/).\n *\n * @name hexGrid\n * @param {BBox} bbox extent in [minX, minY, maxX, maxY] order\n * @param {number} cellSide length of the side of the the hexagons or triangles, in units. It will also coincide with the\n * radius of the circumcircle of the hexagons.\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.units='kilometers'] used in calculating cell size, can be degrees, radians, miles, or kilometers\n * @param {Object} [options.properties={}] passed to each hexagon or triangle of the grid\n * @param {Feature<Polygon|MultiPolygon>} [options.mask] if passed a Polygon or MultiPolygon, the grid Points will be created only inside it\n * @param {boolean} [options.triangles=false] whether to return as triangles instead of hexagons\n * @returns {FeatureCollection<Polygon>} a hexagonal grid\n * @example\n * var bbox = [-96,31,-84,40];\n * var cellSide = 50;\n * var options = {units: 'miles'};\n *\n * var hexgrid = turf.hexGrid(bbox, cellSide, options);\n *\n * //addToMap\n * var addToMap = [hexgrid];\n */\nfunction hexGrid(bbox, cellSide, options) {\n    // Optional parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    // var units = options.units;\n    var properties = options.properties || {};\n    var triangles = options.triangles;\n    var mask = options.mask;\n\n    // validation\n    if (cellSide === null || cellSide === undefined) throw new Error('cellSide is required');\n    if (!isNumber(cellSide)) throw new Error('cellSide is invalid');\n    if (!bbox) throw new Error('bbox is required');\n    if (!Array.isArray(bbox)) throw new Error('bbox must be array');\n    if (bbox.length !== 4) throw new Error('bbox must contain 4 numbers');\n    if (mask && ['Polygon', 'MultiPolygon'].indexOf(getType(mask)) === -1) throw new Error('options.mask must be a (Multi)Polygon');\n\n    var west = bbox[0];\n    var south = bbox[1];\n    var east = bbox[2];\n    var north = bbox[3];\n    var centerY = (south + north) / 2;\n    var centerX = (west + east) / 2;\n\n    // https://github.com/Turfjs/turf/issues/758\n    var xFraction = cellSide * 2 / (distance([west, centerY], [east, centerY], options));\n    var cellWidth = xFraction * (east - west);\n    var yFraction = cellSide * 2 / (distance([centerX, south], [centerX, north], options));\n    var cellHeight = yFraction * (north - south);\n    var radius = cellWidth / 2;\n\n    var hex_width = radius * 2;\n    var hex_height = Math.sqrt(3) / 2 * cellHeight;\n\n    var box_width = east - west;\n    var box_height = north - south;\n\n    var x_interval = 3 / 4 * hex_width;\n    var y_interval = hex_height;\n\n    // adjust box_width so all hexagons will be inside the bbox\n    var x_span = (box_width - hex_width) / (hex_width - radius / 2);\n    var x_count = Math.floor(x_span);\n\n    var x_adjust = ((x_count * x_interval - radius / 2) - box_width) / 2 - radius / 2 + x_interval / 2;\n\n    // adjust box_height so all hexagons will be inside the bbox\n    var y_count = Math.floor((box_height - hex_height) / hex_height);\n\n    var y_adjust = (box_height - y_count * hex_height) / 2;\n\n    var hasOffsetY = y_count * hex_height - box_height > hex_height / 2;\n    if (hasOffsetY) {\n        y_adjust -= hex_height / 4;\n    }\n\n    // Precompute cosines and sines of angles used in hexagon creation for performance gain\n    var cosines = [];\n    var sines = [];\n    for (var i = 0; i < 6; i++) {\n        var angle = 2 * Math.PI / 6 * i;\n        cosines.push(Math.cos(angle));\n        sines.push(Math.sin(angle));\n    }\n\n    var results = [];\n    for (var x = 0; x <= x_count; x++) {\n        for (var y = 0; y <= y_count; y++) {\n\n            var isOdd = x % 2 === 1;\n            if (y === 0 && isOdd) continue;\n            if (y === 0 && hasOffsetY) continue;\n\n            var center_x = x * x_interval + west - x_adjust;\n            var center_y = y * y_interval + south + y_adjust;\n\n            if (isOdd) {\n                center_y -= hex_height / 2;\n            }\n\n            if (triangles === true) {\n                hexTriangles(\n                    [center_x, center_y],\n                    cellWidth / 2,\n                    cellHeight / 2,\n                    properties,\n                    cosines,\n                    sines).forEach(function (triangle) {\n                    if (mask) {\n                        if (intersect(mask, triangle)) results.push(triangle);\n                    } else {\n                        results.push(triangle);\n                    }\n                });\n            } else {\n                var hex = hexagon(\n                    [center_x, center_y],\n                    cellWidth / 2,\n                    cellHeight / 2,\n                    properties,\n                    cosines,\n                    sines\n                );\n                if (mask) {\n                    if (intersect(mask, hex)) results.push(hex);\n                } else {\n                    results.push(hex);\n                }\n            }\n        }\n    }\n\n    return featureCollection(results);\n}\n\n/**\n * Creates hexagon\n *\n * @private\n * @param {Array<number>} center of the hexagon\n * @param {number} rx half hexagon width\n * @param {number} ry half hexagon height\n * @param {Object} properties passed to each hexagon\n * @param {Array<number>} cosines precomputed\n * @param {Array<number>} sines precomputed\n * @returns {Feature<Polygon>} hexagon\n */\nfunction hexagon(center, rx, ry, properties, cosines, sines) {\n    var vertices = [];\n    for (var i = 0; i < 6; i++) {\n        var x = center[0] + rx * cosines[i];\n        var y = center[1] + ry * sines[i];\n        vertices.push([x, y]);\n    }\n    //first and last vertex must be the same\n    vertices.push(vertices[0].slice());\n    return polygon([vertices], properties);\n}\n\n/**\n * Creates triangles composing an hexagon\n *\n * @private\n * @param {Array<number>} center of the hexagon\n * @param {number} rx half triangle width\n * @param {number} ry half triangle height\n * @param {Object} properties passed to each triangle\n * @param {Array<number>} cosines precomputed\n * @param {Array<number>} sines precomputed\n * @returns {Array<Feature<Polygon>>} triangles\n */\nfunction hexTriangles(center, rx, ry, properties, cosines, sines) {\n    var triangles = [];\n    for (var i = 0; i < 6; i++) {\n        var vertices = [];\n        vertices.push(center);\n        vertices.push([\n            center[0] + rx * cosines[i],\n            center[1] + ry * sines[i]\n        ]);\n        vertices.push([\n            center[0] + rx * cosines[(i + 1) % 6],\n            center[1] + ry * sines[(i + 1) % 6]\n        ]);\n        vertices.push(center);\n        triangles.push(polygon([vertices], properties));\n    }\n    return triangles;\n}\n\nexport default hexGrid;\n","import { getCoord, getCoords } from '@turf/invariant';\nimport { isObject } from '@turf/helpers';\n\n/**\n * Returns true if a point is on a line. Accepts a optional parameter to ignore the start and end vertices of the linestring.\n *\n * @name booleanPointOnLine\n * @param {Coord} pt GeoJSON Point\n * @param {Feature<LineString>} line GeoJSON LineString\n * @param {Object} [options={}] Optional parameters\n * @param {boolean} [options.ignoreEndVertices=false] whether to ignore the start and end vertices.\n * @returns {boolean} true/false\n * @example\n * var pt = turf.point([0, 0]);\n * var line = turf.lineString([[-1, -1],[1, 1],[1.5, 2.2]]);\n * var isPointOnLine = turf.booleanPointOnLine(pt, line);\n * //=true\n */\nfunction booleanPointOnLine(pt, line, options) {\n    // Optional parameters\n    options = options || {};\n    var ignoreEndVertices = options.ignoreEndVertices;\n    if (!isObject(options)) throw new Error('invalid options');\n\n    // Validate input\n    if (!pt) throw new Error('pt is required');\n    if (!line) throw new Error('line is required');\n\n    // Normalize inputs\n    var ptCoords = getCoord(pt);\n    var lineCoords = getCoords(line);\n\n    // Main\n    for (var i = 0; i < lineCoords.length - 1; i++) {\n        var ignoreBoundary = false;\n        if (ignoreEndVertices) {\n            if (i === 0) ignoreBoundary = 'start';\n            if (i === lineCoords.length - 2) ignoreBoundary = 'end';\n            if (i === 0 && i + 1 === lineCoords.length - 1) ignoreBoundary = 'both';\n        }\n        if (isPointOnLineSegment(lineCoords[i], lineCoords[i + 1], ptCoords, ignoreBoundary)) return true;\n    }\n    return false;\n}\n\n// See http://stackoverflow.com/a/4833823/1979085\n/**\n * @private\n * @param {Position} lineSegmentStart coord pair of start of line\n * @param {Position} lineSegmentEnd coord pair of end of line\n * @param {Position} pt coord pair of point to check\n * @param {boolean|string} excludeBoundary whether the point is allowed to fall on the line ends. If true which end to ignore.\n * @returns {boolean} true/false\n */\nfunction isPointOnLineSegment(lineSegmentStart, lineSegmentEnd, pt, excludeBoundary) {\n    var x = pt[0];\n    var y = pt[1];\n    var x1 = lineSegmentStart[0];\n    var y1 = lineSegmentStart[1];\n    var x2 = lineSegmentEnd[0];\n    var y2 = lineSegmentEnd[1];\n    var dxc = pt[0] - x1;\n    var dyc = pt[1] - y1;\n    var dxl = x2 - x1;\n    var dyl = y2 - y1;\n    var cross = dxc * dyl - dyc * dxl;\n    if (cross !== 0) {\n        return false;\n    }\n    if (!excludeBoundary) {\n        if (Math.abs(dxl) >= Math.abs(dyl)) {\n            return dxl > 0 ? x1 <= x && x <= x2 : x2 <= x && x <= x1;\n        }\n        return dyl > 0 ? y1 <= y && y <= y2 : y2 <= y && y <= y1;\n    } else if (excludeBoundary === 'start') {\n        if (Math.abs(dxl) >= Math.abs(dyl)) {\n            return dxl > 0 ? x1 < x && x <= x2 : x2 <= x && x < x1;\n        }\n        return dyl > 0 ? y1 < y && y <= y2 : y2 <= y && y < y1;\n    } else if (excludeBoundary === 'end') {\n        if (Math.abs(dxl) >= Math.abs(dyl)) {\n            return dxl > 0 ? x1 <= x && x < x2 : x2 < x && x <= x1;\n        }\n        return dyl > 0 ? y1 <= y && y < y2 : y2 < y && y <= y1;\n    } else if (excludeBoundary === 'both') {\n        if (Math.abs(dxl) >= Math.abs(dyl)) {\n            return dxl > 0 ? x1 < x && x < x2 : x2 < x && x < x1;\n        }\n        return dyl > 0 ? y1 < y && y < y2 : y2 < y && y < y1;\n    }\n}\n\nexport default booleanPointOnLine;\n","import { getCoord, getCoords } from '@turf/invariant';\n\n// http://en.wikipedia.org/wiki/Even%E2%80%93odd_rule\n// modified from: https://github.com/substack/point-in-polygon/blob/master/index.js\n// which was modified from http://www.ecse.rpi.edu/Homepages/wrf/Research/Short_Notes/pnpoly.html\n\n/**\n * Takes a {@link Point} and a {@link Polygon} or {@link MultiPolygon} and determines if the point resides inside the polygon. The polygon can\n * be convex or concave. The function accounts for holes.\n *\n * @name booleanPointInPolygon\n * @param {Coord} point input point\n * @param {Feature<Polygon|MultiPolygon>} polygon input polygon or multipolygon\n * @param {Object} [options={}] Optional parameters\n * @param {boolean} [options.ignoreBoundary=false] True if polygon boundary should be ignored when determining if the point is inside the polygon otherwise false.\n * @returns {boolean} `true` if the Point is inside the Polygon; `false` if the Point is not inside the Polygon\n * @example\n * var pt = turf.point([-77, 44]);\n * var poly = turf.polygon([[\n *   [-81, 41],\n *   [-81, 47],\n *   [-72, 47],\n *   [-72, 41],\n *   [-81, 41]\n * ]]);\n *\n * turf.booleanPointInPolygon(pt, poly);\n * //= true\n */\nfunction booleanPointInPolygon(point, polygon, options) {\n    // Optional parameters\n    options = options || {};\n    if (typeof options !== 'object') throw new Error('options is invalid');\n    var ignoreBoundary = options.ignoreBoundary;\n\n    // validation\n    if (!point) throw new Error('point is required');\n    if (!polygon) throw new Error('polygon is required');\n\n    var pt = getCoord(point);\n    var polys = getCoords(polygon);\n    var type = (polygon.geometry) ? polygon.geometry.type : polygon.type;\n    var bbox = polygon.bbox;\n\n    // Quick elimination if point is not inside bbox\n    if (bbox && inBBox(pt, bbox) === false) return false;\n\n    // normalize to multipolygon\n    if (type === 'Polygon') polys = [polys];\n\n    for (var i = 0, insidePoly = false; i < polys.length && !insidePoly; i++) {\n        // check if it is in the outer ring first\n        if (inRing(pt, polys[i][0], ignoreBoundary)) {\n            var inHole = false;\n            var k = 1;\n            // check for the point in any of the holes\n            while (k < polys[i].length && !inHole) {\n                if (inRing(pt, polys[i][k], !ignoreBoundary)) {\n                    inHole = true;\n                }\n                k++;\n            }\n            if (!inHole) insidePoly = true;\n        }\n    }\n    return insidePoly;\n}\n\n/**\n * inRing\n *\n * @private\n * @param {Array<number>} pt [x,y]\n * @param {Array<Array<number>>} ring [[x,y], [x,y],..]\n * @param {boolean} ignoreBoundary ignoreBoundary\n * @returns {boolean} inRing\n */\nfunction inRing(pt, ring, ignoreBoundary) {\n    var isInside = false;\n    if (ring[0][0] === ring[ring.length - 1][0] && ring[0][1] === ring[ring.length - 1][1]) ring = ring.slice(0, ring.length - 1);\n\n    for (var i = 0, j = ring.length - 1; i < ring.length; j = i++) {\n        var xi = ring[i][0], yi = ring[i][1];\n        var xj = ring[j][0], yj = ring[j][1];\n        var onBoundary = (pt[1] * (xi - xj) + yi * (xj - pt[0]) + yj * (pt[0] - xi) === 0) &&\n            ((xi - pt[0]) * (xj - pt[0]) <= 0) && ((yi - pt[1]) * (yj - pt[1]) <= 0);\n        if (onBoundary) return !ignoreBoundary;\n        var intersect = ((yi > pt[1]) !== (yj > pt[1])) &&\n        (pt[0] < (xj - xi) * (pt[1] - yi) / (yj - yi) + xi);\n        if (intersect) isInside = !isInside;\n    }\n    return isInside;\n}\n\n/**\n * inBBox\n *\n * @private\n * @param {Position} pt point [x,y]\n * @param {BBox} bbox BBox [west, south, east, north]\n * @returns {boolean} true/false if point is inside BBox\n */\nfunction inBBox(pt, bbox) {\n    return bbox[0] <= pt[0] &&\n           bbox[1] <= pt[1] &&\n           bbox[2] >= pt[0] &&\n           bbox[3] >= pt[1];\n}\n\nexport default booleanPointInPolygon;\n","import calcBbox from '@turf/bbox';\nimport booleanPointOnLine from '@turf/boolean-point-on-line';\nimport booleanPointInPolygon from '@turf/boolean-point-in-polygon';\nimport { getGeom, getType } from '@turf/invariant';\n\n/**\n * Boolean-within returns true if the first geometry is completely within the second geometry.\n * The interiors of both geometries must intersect and, the interior and boundary of the primary (geometry a)\n * must not intersect the exterior of the secondary (geometry b).\n * Boolean-within returns the exact opposite result of the `@turf/boolean-contains`.\n *\n * @name booleanWithin\n * @param {Geometry|Feature<any>} feature1 GeoJSON Feature or Geometry\n * @param {Geometry|Feature<any>} feature2 GeoJSON Feature or Geometry\n * @returns {boolean} true/false\n * @example\n * var line = turf.lineString([[1, 1], [1, 2], [1, 3], [1, 4]]);\n * var point = turf.point([1, 2]);\n *\n * turf.booleanWithin(point, line);\n * //=true\n */\nfunction booleanWithin(feature1, feature2) {\n    var type1 = getType(feature1);\n    var type2 = getType(feature2);\n    var geom1 = getGeom(feature1);\n    var geom2 = getGeom(feature2);\n\n    switch (type1) {\n    case 'Point':\n        switch (type2) {\n        case 'MultiPoint':\n            return isPointInMultiPoint(geom1, geom2);\n        case 'LineString':\n            return booleanPointOnLine(geom1, geom2, {ignoreEndVertices: true});\n        case 'Polygon':\n            return booleanPointInPolygon(geom1, geom2, {ignoreBoundary: true});\n        default:\n            throw new Error('feature2 ' + type2 + ' geometry not supported');\n        }\n    case 'MultiPoint':\n        switch (type2) {\n        case 'MultiPoint':\n            return isMultiPointInMultiPoint(geom1, geom2);\n        case 'LineString':\n            return isMultiPointOnLine(geom1, geom2);\n        case 'Polygon':\n            return isMultiPointInPoly(geom1, geom2);\n        default:\n            throw new Error('feature2 ' + type2 + ' geometry not supported');\n        }\n    case 'LineString':\n        switch (type2) {\n        case 'LineString':\n            return isLineOnLine(geom1, geom2);\n        case 'Polygon':\n            return isLineInPoly(geom1, geom2);\n        default:\n            throw new Error('feature2 ' + type2 + ' geometry not supported');\n        }\n    case 'Polygon':\n        switch (type2) {\n        case 'Polygon':\n            return isPolyInPoly(geom1, geom2);\n        default:\n            throw new Error('feature2 ' + type2 + ' geometry not supported');\n        }\n    default:\n        throw new Error('feature1 ' + type1 + ' geometry not supported');\n    }\n}\n\nfunction isPointInMultiPoint(point, multiPoint) {\n    var i;\n    var output = false;\n    for (i = 0; i < multiPoint.coordinates.length; i++) {\n        if (compareCoords(multiPoint.coordinates[i], point.coordinates)) {\n            output = true;\n            break;\n        }\n    }\n    return output;\n}\n\nfunction isMultiPointInMultiPoint(multiPoint1, multiPoint2) {\n    for (var i = 0; i < multiPoint1.coordinates.length; i++) {\n        var anyMatch = false;\n        for (var i2 = 0; i2 < multiPoint2.coordinates.length; i2++) {\n            if (compareCoords(multiPoint1.coordinates[i], multiPoint2.coordinates[i2])) {\n                anyMatch = true;\n            }\n        }\n        if (!anyMatch) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction isMultiPointOnLine(multiPoint, lineString) {\n    var foundInsidePoint = false;\n\n    for (var i = 0; i < multiPoint.coordinates.length; i++) {\n        if (!booleanPointOnLine(multiPoint.coordinates[i], lineString)) {\n            return false;\n        }\n        if (!foundInsidePoint) {\n            foundInsidePoint = booleanPointOnLine(multiPoint.coordinates[i], lineString, {ignoreEndVertices: true});\n        }\n    }\n    return foundInsidePoint;\n}\n\nfunction isMultiPointInPoly(multiPoint, polygon) {\n    var output = true;\n    var oneInside = false;\n    for (var i = 0; i < multiPoint.coordinates.length; i++) {\n        var isInside = booleanPointInPolygon(multiPoint.coordinates[1], polygon);\n        if (!isInside) {\n            output = false;\n            break;\n        }\n        if (!oneInside) {\n            isInside = booleanPointInPolygon(multiPoint.coordinates[1], polygon, {ignoreBoundary: true});\n        }\n    }\n    return output && isInside;\n}\n\nfunction isLineOnLine(lineString1, lineString2) {\n    for (var i = 0; i < lineString1.coordinates.length; i++) {\n        if (!booleanPointOnLine(lineString1.coordinates[i], lineString2)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction isLineInPoly(linestring, polygon) {\n    var polyBbox = calcBbox(polygon);\n    var lineBbox = calcBbox(linestring);\n    if (!doBBoxOverlap(polyBbox, lineBbox)) {\n        return false;\n    }\n    var foundInsidePoint = false;\n\n    for (var i = 0; i < linestring.coordinates.length - 1; i++) {\n        if (!booleanPointInPolygon(linestring.coordinates[i], polygon)) {\n            return false;\n        }\n        if (!foundInsidePoint) {\n            foundInsidePoint = booleanPointInPolygon(linestring.coordinates[i], polygon, {ignoreBoundary: true});\n        }\n        if (!foundInsidePoint) {\n            var midpoint = getMidpoint(linestring.coordinates[i], linestring.coordinates[i + 1]);\n            foundInsidePoint = booleanPointInPolygon(midpoint, polygon, {ignoreBoundary: true});\n\n        }\n    }\n    return foundInsidePoint;\n}\n\n/**\n * Is Polygon2 in Polygon1\n * Only takes into account outer rings\n *\n * @private\n * @param {Geometry|Feature<Polygon>} feature1 Polygon1\n * @param {Geometry|Feature<Polygon>} feature2 Polygon2\n * @returns {boolean} true/false\n */\nfunction isPolyInPoly(feature1, feature2) {\n    var poly1Bbox = calcBbox(feature1);\n    var poly2Bbox = calcBbox(feature2);\n    if (!doBBoxOverlap(poly2Bbox, poly1Bbox)) {\n        return false;\n    }\n    for (var i = 0; i < feature1.coordinates[0].length; i++) {\n        if (!booleanPointInPolygon(feature1.coordinates[0][i], feature2)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction doBBoxOverlap(bbox1, bbox2) {\n    if (bbox1[0] > bbox2[0]) return false;\n    if (bbox1[2] < bbox2[2]) return false;\n    if (bbox1[1] > bbox2[1]) return false;\n    if (bbox1[3] < bbox2[3]) return false;\n    return true;\n}\n\n/**\n * compareCoords\n *\n * @private\n * @param {Position} pair1 point [x,y]\n * @param {Position} pair2 point [x,y]\n * @returns {boolean} true/false if coord pairs match\n */\nfunction compareCoords(pair1, pair2) {\n    return pair1[0] === pair2[0] && pair1[1] === pair2[1];\n}\n\n/**\n * getMidpoint\n *\n * @private\n * @param {Position} pair1 point [x,y]\n * @param {Position} pair2 point [x,y]\n * @returns {Position} midpoint of pair1 and pair2\n */\nfunction getMidpoint(pair1, pair2) {\n    return [(pair1[0] + pair2[0]) / 2, (pair1[1] + pair2[1]) / 2];\n}\n\nexport default booleanWithin;\n","import within from '@turf/boolean-within';\nimport distance from '@turf/distance';\nimport { getType } from '@turf/invariant';\nimport { featureCollection, isNumber, isObject, point } from '@turf/helpers';\n\n/**\n * Creates a {@link Point} grid from a bounding box, {@link FeatureCollection} or {@link Feature}.\n *\n * @name pointGrid\n * @param {Array<number>} bbox extent in [minX, minY, maxX, maxY] order\n * @param {number} cellSide the distance between points, in units\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.units='kilometers'] used in calculating cellSide, can be degrees, radians, miles, or kilometers\n * @param {Feature<Polygon|MultiPolygon>} [options.mask] if passed a Polygon or MultiPolygon, the grid Points will be created only inside it\n * @param {Object} [options.properties={}] passed to each point of the grid\n * @returns {FeatureCollection<Point>} grid of points\n * @example\n * var extent = [-70.823364, -33.553984, -70.473175, -33.302986];\n * var cellSide = 3;\n * var options = {units: 'miles'};\n *\n * var grid = turf.pointGrid(extent, cellSide, options);\n *\n * //addToMap\n * var addToMap = [grid];\n */\nfunction pointGrid(bbox, cellSide, options) {\n    // Optional parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    // var units = options.units;\n    var mask = options.mask;\n    var properties = options.properties;\n\n    // Containers\n    var results = [];\n\n    // Input Validation\n    if (cellSide === null || cellSide === undefined) throw new Error('cellSide is required');\n    if (!isNumber(cellSide)) throw new Error('cellSide is invalid');\n    if (!bbox) throw new Error('bbox is required');\n    if (!Array.isArray(bbox)) throw new Error('bbox must be array');\n    if (bbox.length !== 4) throw new Error('bbox must contain 4 numbers');\n    if (mask && ['Polygon', 'MultiPolygon'].indexOf(getType(mask)) === -1) throw new Error('options.mask must be a (Multi)Polygon');\n\n    var west = bbox[0];\n    var south = bbox[1];\n    var east = bbox[2];\n    var north = bbox[3];\n\n    var xFraction = cellSide / (distance([west, south], [east, south], options));\n    var cellWidth = xFraction * (east - west);\n    var yFraction = cellSide / (distance([west, south], [west, north], options));\n    var cellHeight = yFraction * (north - south);\n\n    var bboxWidth = (east - west);\n    var bboxHeight = (north - south);\n    var columns = Math.floor(bboxWidth / cellWidth);\n    var rows = Math.floor(bboxHeight / cellHeight);\n    // adjust origin of the grid\n    var deltaX = (bboxWidth - columns * cellWidth) / 2;\n    var deltaY = (bboxHeight - rows * cellHeight) / 2;\n\n    var currentX = west + deltaX;\n    while (currentX <= east) {\n        var currentY = south + deltaY;\n        while (currentY <= north) {\n            var cellPt = point([currentX, currentY], properties);\n            if (mask) {\n                if (within(cellPt, mask)) results.push(cellPt);\n            } else {\n                results.push(cellPt);\n            }\n            currentY += cellHeight;\n        }\n        currentX += cellWidth;\n    }\n\n    return featureCollection(results);\n}\n\nexport default pointGrid;\n","import { coordEach } from '@turf/meta';\nimport { point } from '@turf/helpers';\n\n/**\n * Takes one or more features and calculates the centroid using the mean of all vertices.\n * This lessens the effect of small islands and artifacts when calculating the centroid of a set of polygons.\n *\n * @name centroid\n * @param {GeoJSON} geojson GeoJSON to be centered\n * @param {Object} [properties={}] an Object that is used as the {@link Feature}'s properties\n * @returns {Feature<Point>} the centroid of the input features\n * @example\n * var polygon = turf.polygon([[[-81, 41], [-88, 36], [-84, 31], [-80, 33], [-77, 39], [-81, 41]]]);\n *\n * var centroid = turf.centroid(polygon);\n *\n * //addToMap\n * var addToMap = [polygon, centroid]\n */\nfunction centroid(geojson, properties) {\n    var xSum = 0;\n    var ySum = 0;\n    var len = 0;\n    coordEach(geojson, function (coord) {\n        xSum += coord[0];\n        ySum += coord[1];\n        len++;\n    }, true);\n    return point([xSum / len, ySum / len], properties);\n}\n\nexport default centroid;\n","import distance from '@turf/distance';\nimport intersect from '@turf/intersect';\nimport { getType } from '@turf/invariant';\nimport { featureCollection, isNumber, isObject, polygon } from '@turf/helpers';\n\n/**\n * Creates a square grid from a bounding box, {@link Feature} or {@link FeatureCollection}.\n *\n * @name squareGrid\n * @param {Array<number>} bbox extent in [minX, minY, maxX, maxY] order\n * @param {number} cellSide of each cell, in units\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.units='kilometers'] used in calculating cellSide, can be degrees, radians, miles, or kilometers\n * @param {Feature<Polygon|MultiPolygon>} [options.mask] if passed a Polygon or MultiPolygon, the grid Points will be created only inside it\n * @param {Object} [options.properties={}] passed to each point of the grid\n * @returns {FeatureCollection<Polygon>} grid a grid of polygons\n * @example\n * var bbox = [-95, 30 ,-85, 40];\n * var cellSide = 50;\n * var options = {units: 'miles'};\n *\n * var squareGrid = turf.squareGrid(bbox, cellSide, options);\n *\n * //addToMap\n * var addToMap = [squareGrid]\n */\nfunction squareGrid(bbox, cellSide, options) {\n    // Optional parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    // var units = options.units;\n    var properties = options.properties;\n    var mask = options.mask;\n\n    // Containers\n    var results = [];\n\n    // Input Validation\n    if (cellSide === null || cellSide === undefined) throw new Error('cellSide is required');\n    if (!isNumber(cellSide)) throw new Error('cellSide is invalid');\n    if (!bbox) throw new Error('bbox is required');\n    if (!Array.isArray(bbox)) throw new Error('bbox must be array');\n    if (bbox.length !== 4) throw new Error('bbox must contain 4 numbers');\n    if (mask && ['Polygon', 'MultiPolygon'].indexOf(getType(mask)) === -1) throw new Error('options.mask must be a (Multi)Polygon');\n\n    var west = bbox[0];\n    var south = bbox[1];\n    var east = bbox[2];\n    var north = bbox[3];\n\n    var xFraction = cellSide / (distance([west, south], [east, south], options));\n    var cellWidth = xFraction * (east - west);\n    var yFraction = cellSide / (distance([west, south], [west, north], options));\n    var cellHeight = yFraction * (north - south);\n\n    // rows & columns\n    var bboxWidth = (east - west);\n    var bboxHeight = (north - south);\n    var columns = Math.floor(bboxWidth / cellWidth);\n    var rows = Math.floor(bboxHeight / cellHeight);\n\n    // adjust origin of the grid\n    var deltaX = (bboxWidth - columns * cellWidth) / 2;\n    var deltaY = (bboxHeight - rows * cellHeight) / 2;\n\n    // iterate over columns & rows\n    var currentX = west + deltaX;\n    for (var column = 0; column < columns; column++) {\n        var currentY = south + deltaY;\n        for (var row = 0; row < rows; row++) {\n            var cellPoly = polygon([[\n                [currentX, currentY],\n                [currentX, currentY + cellHeight],\n                [currentX + cellWidth, currentY + cellHeight],\n                [currentX + cellWidth, currentY],\n                [currentX, currentY]\n            ]], properties);\n            if (mask) {\n                if (intersect(mask, cellPoly)) results.push(cellPoly);\n            } else {\n                results.push(cellPoly);\n            }\n\n            currentY += cellHeight;\n        }\n        currentX += cellWidth;\n    }\n    return featureCollection(results);\n}\n\nexport default squareGrid;\n","import distance from '@turf/distance';\nimport intersect from '@turf/intersect';\nimport { getType } from '@turf/invariant';\nimport { featureCollection, isNumber, isObject, polygon } from '@turf/helpers';\n\n/**\n * Takes a bounding box and a cell depth and returns a set of triangular {@link Polygon|polygons} in a grid.\n *\n * @name triangleGrid\n * @param {Array<number>} bbox extent in [minX, minY, maxX, maxY] order\n * @param {number} cellSide dimension of each cell\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.units='kilometers'] used in calculating cellSide, can be degrees, radians, miles, or kilometers\n * @param {Feature<Polygon|MultiPolygon>} [options.mask] if passed a Polygon or MultiPolygon, the grid Points will be created only inside it\n * @param {Object} [options.properties={}] passed to each point of the grid\n * @returns {FeatureCollection<Polygon>} grid of polygons\n * @example\n * var bbox = [-95, 30 ,-85, 40];\n * var cellSide = 50;\n * var options = {units: 'miles'};\n *\n * var triangleGrid = turf.triangleGrid(bbox, cellSide, options);\n *\n * //addToMap\n * var addToMap = [triangleGrid];\n */\nfunction triangleGrid(bbox, cellSide, options) {\n    // Optional parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    // var units = options.units;\n    var properties = options.properties;\n    var mask = options.mask;\n\n    // Containers\n    var results = [];\n\n    // Input Validation\n    if (cellSide === null || cellSide === undefined) throw new Error('cellSide is required');\n    if (!isNumber(cellSide)) throw new Error('cellSide is invalid');\n    if (!bbox) throw new Error('bbox is required');\n    if (!Array.isArray(bbox)) throw new Error('bbox must be array');\n    if (bbox.length !== 4) throw new Error('bbox must contain 4 numbers');\n    if (mask && ['Polygon', 'MultiPolygon'].indexOf(getType(mask)) === -1) throw new Error('options.mask must be a (Multi)Polygon');\n\n    // Main\n    var xFraction = cellSide / (distance([bbox[0], bbox[1]], [bbox[2], bbox[1]], options));\n    var cellWidth = xFraction * (bbox[2] - bbox[0]);\n    var yFraction = cellSide / (distance([bbox[0], bbox[1]], [bbox[0], bbox[3]], options));\n    var cellHeight = yFraction * (bbox[3] - bbox[1]);\n\n    var xi = 0;\n    var currentX = bbox[0];\n    while (currentX <= bbox[2]) {\n        var yi = 0;\n        var currentY = bbox[1];\n        while (currentY <= bbox[3]) {\n            var cellTriangle1 = null;\n            var cellTriangle2 = null;\n\n            if (xi % 2 === 0 && yi % 2 === 0) {\n                cellTriangle1 = polygon([[\n                    [currentX, currentY],\n                    [currentX, currentY + cellHeight],\n                    [currentX + cellWidth, currentY],\n                    [currentX, currentY]\n                ]], properties);\n                cellTriangle2 = polygon([[\n                    [currentX, currentY + cellHeight],\n                    [currentX + cellWidth, currentY + cellHeight],\n                    [currentX + cellWidth, currentY],\n                    [currentX, currentY + cellHeight]\n                ]], properties);\n            } else if (xi % 2 === 0 && yi % 2 === 1) {\n                cellTriangle1 = polygon([[\n                    [currentX, currentY],\n                    [currentX + cellWidth, currentY + cellHeight],\n                    [currentX + cellWidth, currentY],\n                    [currentX, currentY]\n                ]], properties);\n                cellTriangle2 = polygon([[\n                    [currentX, currentY],\n                    [currentX, currentY + cellHeight],\n                    [currentX + cellWidth, currentY + cellHeight],\n                    [currentX, currentY]\n                ]], properties);\n            } else if (yi % 2 === 0 && xi % 2 === 1) {\n                cellTriangle1 = polygon([[\n                    [currentX, currentY],\n                    [currentX, currentY + cellHeight],\n                    [currentX + cellWidth, currentY + cellHeight],\n                    [currentX, currentY]\n                ]], properties);\n                cellTriangle2 = polygon([[\n                    [currentX, currentY],\n                    [currentX + cellWidth, currentY + cellHeight],\n                    [currentX + cellWidth, currentY],\n                    [currentX, currentY]\n                ]], properties);\n            } else if (yi % 2 === 1 && xi % 2 === 1) {\n                cellTriangle1 = polygon([[\n                    [currentX, currentY],\n                    [currentX, currentY + cellHeight],\n                    [currentX + cellWidth, currentY],\n                    [currentX, currentY]\n                ]], properties);\n                cellTriangle2 = polygon([[\n                    [currentX, currentY + cellHeight],\n                    [currentX + cellWidth, currentY + cellHeight],\n                    [currentX + cellWidth, currentY],\n                    [currentX, currentY + cellHeight]\n                ]], properties);\n            }\n            if (mask) {\n                if (intersect(mask, cellTriangle1)) results.push(cellTriangle1);\n                if (intersect(mask, cellTriangle2)) results.push(cellTriangle2);\n            } else {\n                results.push(cellTriangle1);\n                results.push(cellTriangle2);\n            }\n\n            currentY += cellHeight;\n            yi++;\n        }\n        xi++;\n        currentX += cellWidth;\n    }\n    return featureCollection(results);\n}\n\nexport default triangleGrid;\n","/**\n * Returns a cloned copy of the passed GeoJSON Object, including possible 'Foreign Members'.\n * ~3-5x faster than the common JSON.parse + JSON.stringify combo method.\n *\n * @name clone\n * @param {GeoJSON} geojson GeoJSON Object\n * @returns {GeoJSON} cloned GeoJSON Object\n * @example\n * var line = turf.lineString([[-74, 40], [-78, 42], [-82, 35]], {color: 'red'});\n *\n * var lineCloned = turf.clone(line);\n */\nfunction clone(geojson) {\n    if (!geojson) throw new Error('geojson is required');\n\n    switch (geojson.type) {\n    case 'Feature':\n        return cloneFeature(geojson);\n    case 'FeatureCollection':\n        return cloneFeatureCollection(geojson);\n    case 'Point':\n    case 'LineString':\n    case 'Polygon':\n    case 'MultiPoint':\n    case 'MultiLineString':\n    case 'MultiPolygon':\n    case 'GeometryCollection':\n        return cloneGeometry(geojson);\n    default:\n        throw new Error('unknown GeoJSON type');\n    }\n}\n\n/**\n * Clone Feature\n *\n * @private\n * @param {Feature<any>} geojson GeoJSON Feature\n * @returns {Feature<any>} cloned Feature\n */\nfunction cloneFeature(geojson) {\n    var cloned = {type: 'Feature'};\n    // Preserve Foreign Members\n    Object.keys(geojson).forEach(function (key) {\n        switch (key) {\n        case 'type':\n        case 'properties':\n        case 'geometry':\n            return;\n        default:\n            cloned[key] = geojson[key];\n        }\n    });\n    // Add properties & geometry last\n    cloned.properties = cloneProperties(geojson.properties);\n    cloned.geometry = cloneGeometry(geojson.geometry);\n    return cloned;\n}\n\n/**\n * Clone Properties\n *\n * @private\n * @param {Object} properties GeoJSON Properties\n * @returns {Object} cloned Properties\n */\nfunction cloneProperties(properties) {\n    var cloned = {};\n    if (!properties) return cloned;\n    Object.keys(properties).forEach(function (key) {\n        var value = properties[key];\n        if (typeof value === 'object') {\n            if (value === null) {\n                // handle null\n                cloned[key] = null;\n            } else if (value.length) {\n                // handle Array\n                cloned[key] = value.map(function (item) {\n                    return item;\n                });\n            } else {\n                // handle generic Object\n                cloned[key] = cloneProperties(value);\n            }\n        } else cloned[key] = value;\n    });\n    return cloned;\n}\n\n/**\n * Clone Feature Collection\n *\n * @private\n * @param {FeatureCollection<any>} geojson GeoJSON Feature Collection\n * @returns {FeatureCollection<any>} cloned Feature Collection\n */\nfunction cloneFeatureCollection(geojson) {\n    var cloned = {type: 'FeatureCollection'};\n\n    // Preserve Foreign Members\n    Object.keys(geojson).forEach(function (key) {\n        switch (key) {\n        case 'type':\n        case 'features':\n            return;\n        default:\n            cloned[key] = geojson[key];\n        }\n    });\n    // Add features\n    cloned.features = geojson.features.map(function (feature) {\n        return cloneFeature(feature);\n    });\n    return cloned;\n}\n\n/**\n * Clone Geometry\n *\n * @private\n * @param {Geometry<any>} geometry GeoJSON Geometry\n * @returns {Geometry<any>} cloned Geometry\n */\nfunction cloneGeometry(geometry) {\n    var geom = {type: geometry.type};\n    if (geometry.bbox) geom.bbox = geometry.bbox;\n\n    if (geometry.type === 'GeometryCollection') {\n        geom.geometries = geometry.geometries.map(function (geom) {\n            return cloneGeometry(geom);\n        });\n        return geom;\n    }\n    geom.coordinates = deepSlice(geometry.coordinates);\n    return geom;\n}\n\n/**\n * Deep Slice coordinates\n *\n * @private\n * @param {Coordinates} coords Coordinates\n * @returns {Coordinates} all coordinates sliced\n */\nfunction deepSlice(coords) {\n    if (typeof coords[0] !== 'object') { return coords.slice(); }\n    return coords.map(function (coord) {\n        return deepSlice(coord);\n    });\n}\n\nexport default clone;\n","import bbox from '@turf/bbox';\nimport hexGrid from '@turf/hex-grid';\nimport pointGrid from '@turf/point-grid';\nimport distance from '@turf/distance';\nimport centroid from '@turf/centroid';\nimport squareGrid from '@turf/square-grid';\nimport triangleGrid from '@turf/triangle-grid';\nimport clone from '@turf/clone';\nimport { featureCollection } from '@turf/helpers';\nimport { featureEach } from '@turf/meta';\nimport { collectionOf } from '@turf/invariant';\n\n/**\n * Takes a set of points and estimates their 'property' values on a grid using the [Inverse Distance Weighting (IDW) method](https://en.wikipedia.org/wiki/Inverse_distance_weighting).\n *\n * @name interpolate\n * @param {FeatureCollection<Point>} points with known value\n * @param {number} cellSize the distance across each grid point\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.gridType='square'] defines the output format based on a Grid Type (options: 'square' | 'point' | 'hex' | 'triangle')\n * @param {string} [options.property='elevation'] the property name in `points` from which z-values will be pulled, zValue fallbacks to 3rd coordinate if no property exists.\n * @param {string} [options.units='kilometers'] used in calculating cellSize, can be degrees, radians, miles, or kilometers\n * @param {number} [options.weight=1] exponent regulating the distance-decay weighting\n * @returns {FeatureCollection<Point|Polygon>} grid of points or polygons with interpolated 'property'\n * @example\n * var points = turf.randomPoint(30, {bbox: [50, 30, 70, 50]});\n *\n * // add a random property to each point\n * turf.featureEach(points, function(point) {\n *     point.properties.solRad = Math.random() * 50;\n * });\n * var options = {gridType: 'points', property: 'solRad', units: 'miles'};\n * var grid = turf.interpolate(points, 100, options);\n *\n * //addToMap\n * var addToMap = [grid];\n */\nfunction interpolate(points, cellSize, options) {\n    // Optional parameters\n    options = options || {};\n    if (typeof options !== 'object') throw new Error('options is invalid');\n    var gridType = options.gridType;\n    var property = options.property;\n    var weight = options.weight;\n\n    // validation\n    if (!points) throw new Error('points is required');\n    collectionOf(points, 'Point', 'input must contain Points');\n    if (!cellSize) throw new Error('cellSize is required');\n    if (weight !== undefined && typeof weight !== 'number') throw new Error('weight must be a number');\n\n    // default values\n    property = property || 'elevation';\n    gridType = gridType || 'square';\n    weight = weight || 1;\n\n    var box = bbox(points);\n    var grid;\n    switch (gridType) {\n    case 'point':\n    case 'points':\n        grid = pointGrid(box, cellSize, options);\n        break;\n    case 'square':\n    case 'squares':\n        grid = squareGrid(box, cellSize, options);\n        break;\n    case 'hex':\n    case 'hexes':\n        grid = hexGrid(box, cellSize, options);\n        break;\n    case 'triangle':\n    case 'triangles':\n        grid = triangleGrid(box, cellSize, options);\n        break;\n    default:\n        throw new Error('invalid gridType');\n    }\n    var results = [];\n    featureEach(grid, function (gridFeature) {\n        var zw = 0;\n        var sw = 0;\n        // calculate the distance from each input point to the grid points\n        featureEach(points, function (point) {\n            var gridPoint = (gridType === 'point') ? gridFeature : centroid(gridFeature);\n            var d = distance(gridPoint, point, options);\n            var zValue;\n            // property has priority for zValue, fallbacks to 3rd coordinate from geometry\n            if (property !== undefined) zValue = point.properties[property];\n            if (zValue === undefined) zValue = point.geometry.coordinates[2];\n            if (zValue === undefined) throw new Error('zValue is missing');\n            if (d === 0) zw = zValue;\n            var w = 1.0 / Math.pow(d, weight);\n            sw += w;\n            zw += w * zValue;\n        });\n        // write interpolated value for each grid point\n        var newFeature = clone(gridFeature);\n        newFeature.properties[property] = zw / sw;\n        results.push(newFeature);\n    });\n    return featureCollection(results);\n}\n\nexport default interpolate;\n","import { geomReduce } from '@turf/meta';\n\n/**\n * Takes one or more features and returns their area in square meters.\n *\n * @name area\n * @param {GeoJSON} geojson input GeoJSON feature(s)\n * @returns {number} area in square meters\n * @example\n * var polygon = turf.polygon([[[125, -15], [113, -22], [154, -27], [144, -15], [125, -15]]]);\n *\n * var area = turf.area(polygon);\n *\n * //addToMap\n * var addToMap = [polygon]\n * polygon.properties.area = area\n */\nfunction area(geojson) {\n    return geomReduce(geojson, function (value, geom) {\n        return value + calculateArea(geom);\n    }, 0);\n}\n\nvar RADIUS = 6378137;\n// var FLATTENING_DENOM = 298.257223563;\n// var FLATTENING = 1 / FLATTENING_DENOM;\n// var POLAR_RADIUS = RADIUS * (1 - FLATTENING);\n\n/**\n * Calculate Area\n *\n * @private\n * @param {GeoJSON} geojson GeoJSON\n * @returns {number} area\n */\nfunction calculateArea(geojson) {\n    var area = 0, i;\n    switch (geojson.type) {\n    case 'Polygon':\n        return polygonArea(geojson.coordinates);\n    case 'MultiPolygon':\n        for (i = 0; i < geojson.coordinates.length; i++) {\n            area += polygonArea(geojson.coordinates[i]);\n        }\n        return area;\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n        return 0;\n    case 'GeometryCollection':\n        for (i = 0; i < geojson.geometries.length; i++) {\n            area += calculateArea(geojson.geometries[i]);\n        }\n        return area;\n    }\n}\n\nfunction polygonArea(coords) {\n    var area = 0;\n    if (coords && coords.length > 0) {\n        area += Math.abs(ringArea(coords[0]));\n        for (var i = 1; i < coords.length; i++) {\n            area -= Math.abs(ringArea(coords[i]));\n        }\n    }\n    return area;\n}\n\n/**\n * @private\n * Calculate the approximate area of the polygon were it projected onto the earth.\n * Note that this area will be positive if ring is oriented clockwise, otherwise it will be negative.\n *\n * Reference:\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007 http://trs-new.jpl.nasa.gov/dspace/handle/2014/40409\n *\n * @param {Array<Array<number>>} coords Ring Coordinates\n * @returns {number} The approximate signed geodesic area of the polygon in square meters.\n */\nfunction ringArea(coords) {\n    var p1;\n    var p2;\n    var p3;\n    var lowerIndex;\n    var middleIndex;\n    var upperIndex;\n    var i;\n    var area = 0;\n    var coordsLength = coords.length;\n\n    if (coordsLength > 2) {\n        for (i = 0; i < coordsLength; i++) {\n            if (i === coordsLength - 2) { // i = N-2\n                lowerIndex = coordsLength - 2;\n                middleIndex = coordsLength - 1;\n                upperIndex = 0;\n            } else if (i === coordsLength - 1) { // i = N-1\n                lowerIndex = coordsLength - 1;\n                middleIndex = 0;\n                upperIndex = 1;\n            } else { // i = 0 to N-3\n                lowerIndex = i;\n                middleIndex = i + 1;\n                upperIndex = i + 2;\n            }\n            p1 = coords[lowerIndex];\n            p2 = coords[middleIndex];\n            p3 = coords[upperIndex];\n            area += (rad(p3[0]) - rad(p1[0])) * Math.sin(rad(p2[1]));\n        }\n\n        area = area * RADIUS * RADIUS / 2;\n    }\n\n    return area;\n}\n\nfunction rad(_) {\n    return _ * Math.PI / 180;\n}\n\nexport default area;\n","import { coordEach, featureEach } from '@turf/meta';\nimport { featureCollection, point } from '@turf/helpers';\n\n/**\n * Takes a feature or set of features and returns all positions as {@link Point|points}.\n *\n * @name explode\n * @param {GeoJSON} geojson input features\n * @returns {FeatureCollection<point>} points representing the exploded input features\n * @throws {Error} if it encounters an unknown geometry type\n * @example\n * var polygon = turf.polygon([[[-81, 41], [-88, 36], [-84, 31], [-80, 33], [-77, 39], [-81, 41]]]);\n *\n * var explode = turf.explode(polygon);\n *\n * //addToMap\n * var addToMap = [polygon, explode]\n */\nfunction explode(geojson) {\n    var points = [];\n    if (geojson.type === 'FeatureCollection') {\n        featureEach(geojson, function (feature) {\n            coordEach(feature, function (coord) {\n                points.push(point(coord, feature.properties));\n            });\n        });\n    } else {\n        coordEach(geojson, function (coord) {\n            points.push(point(coord, geojson.properties));\n        });\n    }\n    return featureCollection(points);\n}\n\nexport default explode;\n","import bbox from '@turf/bbox';\nimport area from '@turf/area';\nimport booleanPointInPolygon from '@turf/boolean-point-in-polygon';\nimport explode from '@turf/explode';\nimport { collectionOf, getCoords } from '@turf/invariant';\nimport { featureCollection, isObject, multiPolygon, polygon } from '@turf/helpers';\nimport { featureEach } from '@turf/meta';\n\n/**\n * Takes a {@link Point} grid and returns a correspondent matrix {Array<Array<number>>}\n * of the 'property' values\n *\n * @name gridToMatrix\n * @param {FeatureCollection<Point>} grid of points\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.zProperty='elevation'] the property name in `points` from which z-values will be pulled\n * @param {boolean} [options.flip=false] returns the matrix upside-down\n * @param {boolean} [options.flags=false] flags, adding a `matrixPosition` array field ([row, column]) to its properties,\n * the grid points with coordinates on the matrix\n * @returns {Array<Array<number>>} matrix of property values\n * @example\n *   var extent = [-70.823364, -33.553984, -70.473175, -33.302986];\n *   var cellSize = 3;\n *   var grid = turf.pointGrid(extent, cellSize);\n *   // add a random property to each point between 0 and 60\n *   for (var i = 0; i < grid.features.length; i++) {\n *     grid.features[i].properties.elevation = (Math.random() * 60);\n *   }\n *   gridToMatrix(grid);\n *   //= [\n *     [ 1, 13, 10,  9, 10, 13, 18],\n *     [34,  8,  5,  4,  5,  8, 13],\n *     [10,  5,  2,  1,  2,  5,  4],\n *     [ 0,  4, 56, 19,  1,  4,  9],\n *     [10,  5,  2,  1,  2,  5, 10],\n *     [57,  8,  5,  4,  5,  0, 57],\n *     [ 3, 13, 10,  9,  5, 13, 18],\n *     [18, 13, 10,  9, 78, 13, 18]\n *   ]\n */\nfunction gridToMatrix(grid, options) {\n    // Optional parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var zProperty = options.zProperty || 'elevation';\n    var flip = options.flip;\n    var flags = options.flags;\n\n    // validation\n    collectionOf(grid, 'Point', 'input must contain Points');\n\n    var pointsMatrix = sortPointsByLatLng(grid, flip);\n\n    var matrix = [];\n    // create property matrix from sorted points\n    // looping order matters here\n    for (var r = 0; r < pointsMatrix.length; r++) {\n        var pointRow = pointsMatrix[r];\n        var row = [];\n        for (var c = 0; c < pointRow.length; c++) {\n            var point = pointRow[c];\n            // Check if zProperty exist\n            if (point.properties[zProperty]) row.push(point.properties[zProperty]);\n            else row.push(0);\n            // add flags\n            if (flags === true) point.properties.matrixPosition = [r, c];\n        }\n        matrix.push(row);\n    }\n\n    return matrix;\n}\n\n/**\n * Sorts points by latitude and longitude, creating a 2-dimensional array of points\n *\n * @private\n * @param {FeatureCollection<Point>} points GeoJSON Point features\n * @param {boolean} [flip=false] returns the matrix upside-down\n * @returns {Array<Array<Point>>} points ordered by latitude and longitude\n */\nfunction sortPointsByLatLng(points, flip) {\n    var pointsByLatitude = {};\n\n    // divide points by rows with the same latitude\n    featureEach(points, function (point) {\n        var lat = getCoords(point)[1];\n        if (!pointsByLatitude[lat]) pointsByLatitude[lat] = [];\n        pointsByLatitude[lat].push(point);\n    });\n\n    // sort points (with the same latitude) by longitude\n    var orderedRowsByLatitude = Object.keys(pointsByLatitude).map(function (lat) {\n        var row = pointsByLatitude[lat];\n        var rowOrderedByLongitude = row.sort(function (a, b) {\n            return getCoords(a)[0] - getCoords(b)[0];\n        });\n        return rowOrderedByLongitude;\n    });\n\n    // sort rows (of points with the same latitude) by latitude\n    var pointMatrix = orderedRowsByLatitude.sort(function (a, b) {\n        if (flip) return getCoords(a[0])[1] - getCoords(b[0])[1];\n        else return getCoords(b[0])[1] - getCoords(a[0])[1];\n    });\n\n    return pointMatrix;\n}\n\n/*!\n* @license GNU Affero General Public License.\n* Copyright (c) 2015, 2015 Ronny Lorenz <ronny@tbi.univie.ac.at>\n* v. 1.2.0\n* https://github.com/RaumZeit/MarchingSquares.js\n*/\n\nvar defaultSettings = {\n    successCallback: null,\n    verbose: false,\n    polygons: false\n};\n\nvar settings = {};\n\n/*\n  Compute isobands(s) of a scalar 2D field given a certain\n  threshold and a bandwidth by applying the Marching Squares\n  Algorithm. The function returns a list of path coordinates\n  either for individual polygons within each grid cell, or the\n  outline of connected polygons.\n*/\nfunction isoBands(data, minV, bandwidth, options) {\n    /* process options */\n    options = options ? options : {};\n\n    var optionKeys = Object.keys(defaultSettings);\n\n    for (var i = 0; i < optionKeys.length; i++) {\n        var key = optionKeys[i];\n        var val = options[key];\n        val = ((typeof val !== 'undefined') && (val !== null)) ? val : defaultSettings[key];\n\n        settings[key] = val;\n    }\n\n    if (settings.verbose)\n        console.log('MarchingSquaresJS-isoBands: computing isobands for [' + minV + ':' + (minV + bandwidth) + ']');\n\n    var grid = computeBandGrid(data, minV, bandwidth);\n\n    var ret;\n    if (settings.polygons) {\n        if (settings.verbose)\n            console.log('MarchingSquaresJS-isoBands: returning single polygons for each grid cell');\n        ret = BandGrid2Areas(grid);\n    } else {\n        if (settings.verbose)\n            console.log('MarchingSquaresJS-isoBands: returning polygon paths for entire data grid');\n        ret = BandGrid2AreaPaths(grid);\n    }\n\n    if (typeof settings.successCallback === 'function')\n        settings.successCallback(ret);\n\n    return ret;\n}\n\n/*\n  Thats all for the public interface, below follows the actual\n  implementation\n*/\n\n/* Some private variables */\nvar Node0 = 64;\nvar Node1 = 16;\nvar Node2 = 4;\nvar Node3 = 1;\n\n/*\n  The look-up tables for tracing back the contour path\n  of isoBands\n*/\n\nvar isoBandNextXTL = [];\nvar isoBandNextYTL = [];\nvar isoBandNextOTL = [];\n\nvar isoBandNextXTR = [];\nvar isoBandNextYTR = [];\nvar isoBandNextOTR = [];\n\nvar isoBandNextXRT = [];\nvar isoBandNextYRT = [];\nvar isoBandNextORT = [];\n\nvar isoBandNextXRB = [];\nvar isoBandNextYRB = [];\nvar isoBandNextORB = [];\n\nvar isoBandNextXBL = [];\nvar isoBandNextYBL = [];\nvar isoBandNextOBL = [];\n\nvar isoBandNextXBR = [];\nvar isoBandNextYBR = [];\nvar isoBandNextOBR = [];\n\nvar isoBandNextXLT = [];\nvar isoBandNextYLT = [];\nvar isoBandNextOLT = [];\n\nvar isoBandNextXLB = [];\nvar isoBandNextYLB = [];\nvar isoBandNextOLB = [];\n\nisoBandNextXRT[85] = isoBandNextXRB[85] = -1;\nisoBandNextYRT[85] = isoBandNextYRB[85] = 0;\nisoBandNextORT[85] = isoBandNextORB[85] = 1;\nisoBandNextXLT[85] = isoBandNextXLB[85] = 1;\nisoBandNextYLT[85] = isoBandNextYLB[85] = 0;\nisoBandNextOLT[85] = isoBandNextOLB[85] = 1;\n\nisoBandNextXTL[85] = isoBandNextXTR[85] = 0;\nisoBandNextYTL[85] = isoBandNextYTR[85] = -1;\nisoBandNextOTL[85] = isoBandNextOBL[85] = 0;\nisoBandNextXBR[85] = isoBandNextXBL[85] = 0;\nisoBandNextYBR[85] = isoBandNextYBL[85] = 1;\nisoBandNextOTR[85] = isoBandNextOBR[85] = 1;\n\n\n/* triangle cases */\nisoBandNextXLB[1] = isoBandNextXLB[169] = 0;\nisoBandNextYLB[1] = isoBandNextYLB[169] = -1;\nisoBandNextOLB[1] = isoBandNextOLB[169] = 0;\nisoBandNextXBL[1] = isoBandNextXBL[169] = -1;\nisoBandNextYBL[1] = isoBandNextYBL[169] = 0;\nisoBandNextOBL[1] = isoBandNextOBL[169] = 0;\n\nisoBandNextXRB[4] = isoBandNextXRB[166] = 0;\nisoBandNextYRB[4] = isoBandNextYRB[166] = -1;\nisoBandNextORB[4] = isoBandNextORB[166] = 1;\nisoBandNextXBR[4] = isoBandNextXBR[166] = 1;\nisoBandNextYBR[4] = isoBandNextYBR[166] = 0;\nisoBandNextOBR[4] = isoBandNextOBR[166] = 0;\n\nisoBandNextXRT[16] = isoBandNextXRT[154] = 0;\nisoBandNextYRT[16] = isoBandNextYRT[154] = 1;\nisoBandNextORT[16] = isoBandNextORT[154] = 1;\nisoBandNextXTR[16] = isoBandNextXTR[154] = 1;\nisoBandNextYTR[16] = isoBandNextYTR[154] = 0;\nisoBandNextOTR[16] = isoBandNextOTR[154] = 1;\n\nisoBandNextXLT[64] = isoBandNextXLT[106] = 0;\nisoBandNextYLT[64] = isoBandNextYLT[106] = 1;\nisoBandNextOLT[64] = isoBandNextOLT[106] = 0;\nisoBandNextXTL[64] = isoBandNextXTL[106] = -1;\nisoBandNextYTL[64] = isoBandNextYTL[106] = 0;\nisoBandNextOTL[64] = isoBandNextOTL[106] = 1;\n\n/* single trapezoid cases */\nisoBandNextXLT[2] = isoBandNextXLT[168] = 0;\nisoBandNextYLT[2] = isoBandNextYLT[168] = -1;\nisoBandNextOLT[2] = isoBandNextOLT[168] = 1;\nisoBandNextXLB[2] = isoBandNextXLB[168] = 0;\nisoBandNextYLB[2] = isoBandNextYLB[168] = -1;\nisoBandNextOLB[2] = isoBandNextOLB[168] = 0;\nisoBandNextXBL[2] = isoBandNextXBL[168] = -1;\nisoBandNextYBL[2] = isoBandNextYBL[168] = 0;\nisoBandNextOBL[2] = isoBandNextOBL[168] = 0;\nisoBandNextXBR[2] = isoBandNextXBR[168] = -1;\nisoBandNextYBR[2] = isoBandNextYBR[168] = 0;\nisoBandNextOBR[2] = isoBandNextOBR[168] = 1;\n\nisoBandNextXRT[8] = isoBandNextXRT[162] = 0;\nisoBandNextYRT[8] = isoBandNextYRT[162] = -1;\nisoBandNextORT[8] = isoBandNextORT[162] = 0;\nisoBandNextXRB[8] = isoBandNextXRB[162] = 0;\nisoBandNextYRB[8] = isoBandNextYRB[162] = -1;\nisoBandNextORB[8] = isoBandNextORB[162] = 1;\nisoBandNextXBL[8] = isoBandNextXBL[162] = 1;\nisoBandNextYBL[8] = isoBandNextYBL[162] = 0;\nisoBandNextOBL[8] = isoBandNextOBL[162] = 1;\nisoBandNextXBR[8] = isoBandNextXBR[162] = 1;\nisoBandNextYBR[8] = isoBandNextYBR[162] = 0;\nisoBandNextOBR[8] = isoBandNextOBR[162] = 0;\n\nisoBandNextXRT[32] = isoBandNextXRT[138] = 0;\nisoBandNextYRT[32] = isoBandNextYRT[138] = 1;\nisoBandNextORT[32] = isoBandNextORT[138] = 1;\nisoBandNextXRB[32] = isoBandNextXRB[138] = 0;\nisoBandNextYRB[32] = isoBandNextYRB[138] = 1;\nisoBandNextORB[32] = isoBandNextORB[138] = 0;\nisoBandNextXTL[32] = isoBandNextXTL[138] = 1;\nisoBandNextYTL[32] = isoBandNextYTL[138] = 0;\nisoBandNextOTL[32] = isoBandNextOTL[138] = 0;\nisoBandNextXTR[32] = isoBandNextXTR[138] = 1;\nisoBandNextYTR[32] = isoBandNextYTR[138] = 0;\nisoBandNextOTR[32] = isoBandNextOTR[138] = 1;\n\nisoBandNextXLB[128] = isoBandNextXLB[42] = 0;\nisoBandNextYLB[128] = isoBandNextYLB[42] = 1;\nisoBandNextOLB[128] = isoBandNextOLB[42] = 1;\nisoBandNextXLT[128] = isoBandNextXLT[42] = 0;\nisoBandNextYLT[128] = isoBandNextYLT[42] = 1;\nisoBandNextOLT[128] = isoBandNextOLT[42] = 0;\nisoBandNextXTL[128] = isoBandNextXTL[42] = -1;\nisoBandNextYTL[128] = isoBandNextYTL[42] = 0;\nisoBandNextOTL[128] = isoBandNextOTL[42] = 1;\nisoBandNextXTR[128] = isoBandNextXTR[42] = -1;\nisoBandNextYTR[128] = isoBandNextYTR[42] = 0;\nisoBandNextOTR[128] = isoBandNextOTR[42] = 0;\n\n/* single rectangle cases */\nisoBandNextXRB[5] = isoBandNextXRB[165] = -1;\nisoBandNextYRB[5] = isoBandNextYRB[165] = 0;\nisoBandNextORB[5] = isoBandNextORB[165] = 0;\nisoBandNextXLB[5] = isoBandNextXLB[165] = 1;\nisoBandNextYLB[5] = isoBandNextYLB[165] = 0;\nisoBandNextOLB[5] = isoBandNextOLB[165] = 0;\n\nisoBandNextXBR[20] = isoBandNextXBR[150] = 0;\nisoBandNextYBR[20] = isoBandNextYBR[150] = 1;\nisoBandNextOBR[20] = isoBandNextOBR[150] = 1;\nisoBandNextXTR[20] = isoBandNextXTR[150] = 0;\nisoBandNextYTR[20] = isoBandNextYTR[150] = -1;\nisoBandNextOTR[20] = isoBandNextOTR[150] = 1;\n\nisoBandNextXRT[80] = isoBandNextXRT[90] = -1;\nisoBandNextYRT[80] = isoBandNextYRT[90] = 0;\nisoBandNextORT[80] = isoBandNextORT[90] = 1;\nisoBandNextXLT[80] = isoBandNextXLT[90] = 1;\nisoBandNextYLT[80] = isoBandNextYLT[90] = 0;\nisoBandNextOLT[80] = isoBandNextOLT[90] = 1;\n\nisoBandNextXBL[65] = isoBandNextXBL[105] = 0;\nisoBandNextYBL[65] = isoBandNextYBL[105] = 1;\nisoBandNextOBL[65] = isoBandNextOBL[105] = 0;\nisoBandNextXTL[65] = isoBandNextXTL[105] = 0;\nisoBandNextYTL[65] = isoBandNextYTL[105] = -1;\nisoBandNextOTL[65] = isoBandNextOTL[105] = 0;\n\nisoBandNextXRT[160] = isoBandNextXRT[10] = -1;\nisoBandNextYRT[160] = isoBandNextYRT[10] = 0;\nisoBandNextORT[160] = isoBandNextORT[10] = 1;\nisoBandNextXRB[160] = isoBandNextXRB[10] = -1;\nisoBandNextYRB[160] = isoBandNextYRB[10] = 0;\nisoBandNextORB[160] = isoBandNextORB[10] = 0;\nisoBandNextXLB[160] = isoBandNextXLB[10] = 1;\nisoBandNextYLB[160] = isoBandNextYLB[10] = 0;\nisoBandNextOLB[160] = isoBandNextOLB[10] = 0;\nisoBandNextXLT[160] = isoBandNextXLT[10] = 1;\nisoBandNextYLT[160] = isoBandNextYLT[10] = 0;\nisoBandNextOLT[160] = isoBandNextOLT[10] = 1;\n\nisoBandNextXBR[130] = isoBandNextXBR[40] = 0;\nisoBandNextYBR[130] = isoBandNextYBR[40] = 1;\nisoBandNextOBR[130] = isoBandNextOBR[40] = 1;\nisoBandNextXBL[130] = isoBandNextXBL[40] = 0;\nisoBandNextYBL[130] = isoBandNextYBL[40] = 1;\nisoBandNextOBL[130] = isoBandNextOBL[40] = 0;\nisoBandNextXTL[130] = isoBandNextXTL[40] = 0;\nisoBandNextYTL[130] = isoBandNextYTL[40] = -1;\nisoBandNextOTL[130] = isoBandNextOTL[40] = 0;\nisoBandNextXTR[130] = isoBandNextXTR[40] = 0;\nisoBandNextYTR[130] = isoBandNextYTR[40] = -1;\nisoBandNextOTR[130] = isoBandNextOTR[40] = 1;\n\n/* single hexagon cases */\nisoBandNextXRB[37] = isoBandNextXRB[133] = 0;\nisoBandNextYRB[37] = isoBandNextYRB[133] = 1;\nisoBandNextORB[37] = isoBandNextORB[133] = 1;\nisoBandNextXLB[37] = isoBandNextXLB[133] = 0;\nisoBandNextYLB[37] = isoBandNextYLB[133] = 1;\nisoBandNextOLB[37] = isoBandNextOLB[133] = 0;\nisoBandNextXTL[37] = isoBandNextXTL[133] = -1;\nisoBandNextYTL[37] = isoBandNextYTL[133] = 0;\nisoBandNextOTL[37] = isoBandNextOTL[133] = 0;\nisoBandNextXTR[37] = isoBandNextXTR[133] = 1;\nisoBandNextYTR[37] = isoBandNextYTR[133] = 0;\nisoBandNextOTR[37] = isoBandNextOTR[133] = 0;\n\nisoBandNextXBR[148] = isoBandNextXBR[22] = -1;\nisoBandNextYBR[148] = isoBandNextYBR[22] = 0;\nisoBandNextOBR[148] = isoBandNextOBR[22] = 0;\nisoBandNextXLB[148] = isoBandNextXLB[22] = 0;\nisoBandNextYLB[148] = isoBandNextYLB[22] = -1;\nisoBandNextOLB[148] = isoBandNextOLB[22] = 1;\nisoBandNextXLT[148] = isoBandNextXLT[22] = 0;\nisoBandNextYLT[148] = isoBandNextYLT[22] = 1;\nisoBandNextOLT[148] = isoBandNextOLT[22] = 1;\nisoBandNextXTR[148] = isoBandNextXTR[22] = -1;\nisoBandNextYTR[148] = isoBandNextYTR[22] = 0;\nisoBandNextOTR[148] = isoBandNextOTR[22] = 1;\n\nisoBandNextXRT[82] = isoBandNextXRT[88] = 0;\nisoBandNextYRT[82] = isoBandNextYRT[88] = -1;\nisoBandNextORT[82] = isoBandNextORT[88] = 1;\nisoBandNextXBR[82] = isoBandNextXBR[88] = 1;\nisoBandNextYBR[82] = isoBandNextYBR[88] = 0;\nisoBandNextOBR[82] = isoBandNextOBR[88] = 1;\nisoBandNextXBL[82] = isoBandNextXBL[88] = -1;\nisoBandNextYBL[82] = isoBandNextYBL[88] = 0;\nisoBandNextOBL[82] = isoBandNextOBL[88] = 1;\nisoBandNextXLT[82] = isoBandNextXLT[88] = 0;\nisoBandNextYLT[82] = isoBandNextYLT[88] = -1;\nisoBandNextOLT[82] = isoBandNextOLT[88] = 0;\n\nisoBandNextXRT[73] = isoBandNextXRT[97] = 0;\nisoBandNextYRT[73] = isoBandNextYRT[97] = 1;\nisoBandNextORT[73] = isoBandNextORT[97] = 0;\nisoBandNextXRB[73] = isoBandNextXRB[97] = 0;\nisoBandNextYRB[73] = isoBandNextYRB[97] = -1;\nisoBandNextORB[73] = isoBandNextORB[97] = 0;\nisoBandNextXBL[73] = isoBandNextXBL[97] = 1;\nisoBandNextYBL[73] = isoBandNextYBL[97] = 0;\nisoBandNextOBL[73] = isoBandNextOBL[97] = 0;\nisoBandNextXTL[73] = isoBandNextXTL[97] = 1;\nisoBandNextYTL[73] = isoBandNextYTL[97] = 0;\nisoBandNextOTL[73] = isoBandNextOTL[97] = 1;\n\nisoBandNextXRT[145] = isoBandNextXRT[25] = 0;\nisoBandNextYRT[145] = isoBandNextYRT[25] = -1;\nisoBandNextORT[145] = isoBandNextORT[25] = 0;\nisoBandNextXBL[145] = isoBandNextXBL[25] = 1;\nisoBandNextYBL[145] = isoBandNextYBL[25] = 0;\nisoBandNextOBL[145] = isoBandNextOBL[25] = 1;\nisoBandNextXLB[145] = isoBandNextXLB[25] = 0;\nisoBandNextYLB[145] = isoBandNextYLB[25] = 1;\nisoBandNextOLB[145] = isoBandNextOLB[25] = 1;\nisoBandNextXTR[145] = isoBandNextXTR[25] = -1;\nisoBandNextYTR[145] = isoBandNextYTR[25] = 0;\nisoBandNextOTR[145] = isoBandNextOTR[25] = 0;\n\nisoBandNextXRB[70] = isoBandNextXRB[100] = 0;\nisoBandNextYRB[70] = isoBandNextYRB[100] = 1;\nisoBandNextORB[70] = isoBandNextORB[100] = 0;\nisoBandNextXBR[70] = isoBandNextXBR[100] = -1;\nisoBandNextYBR[70] = isoBandNextYBR[100] = 0;\nisoBandNextOBR[70] = isoBandNextOBR[100] = 1;\nisoBandNextXLT[70] = isoBandNextXLT[100] = 0;\nisoBandNextYLT[70] = isoBandNextYLT[100] = -1;\nisoBandNextOLT[70] = isoBandNextOLT[100] = 1;\nisoBandNextXTL[70] = isoBandNextXTL[100] = 1;\nisoBandNextYTL[70] = isoBandNextYTL[100] = 0;\nisoBandNextOTL[70] = isoBandNextOTL[100] = 0;\n\n/* single pentagon cases */\nisoBandNextXRB[101] = isoBandNextXRB[69] = 0;\nisoBandNextYRB[101] = isoBandNextYRB[69] = 1;\nisoBandNextORB[101] = isoBandNextORB[69] = 0;\nisoBandNextXTL[101] = isoBandNextXTL[69] = 1;\nisoBandNextYTL[101] = isoBandNextYTL[69] = 0;\nisoBandNextOTL[101] = isoBandNextOTL[69] = 0;\n\nisoBandNextXLB[149] = isoBandNextXLB[21] = 0;\nisoBandNextYLB[149] = isoBandNextYLB[21] = 1;\nisoBandNextOLB[149] = isoBandNextOLB[21] = 1;\nisoBandNextXTR[149] = isoBandNextXTR[21] = -1;\nisoBandNextYTR[149] = isoBandNextYTR[21] = 0;\nisoBandNextOTR[149] = isoBandNextOTR[21] = 0;\n\nisoBandNextXBR[86] = isoBandNextXBR[84] = -1;\nisoBandNextYBR[86] = isoBandNextYBR[84] = 0;\nisoBandNextOBR[86] = isoBandNextOBR[84] = 1;\nisoBandNextXLT[86] = isoBandNextXLT[84] = 0;\nisoBandNextYLT[86] = isoBandNextYLT[84] = -1;\nisoBandNextOLT[86] = isoBandNextOLT[84] = 1;\n\nisoBandNextXRT[89] = isoBandNextXRT[81] = 0;\nisoBandNextYRT[89] = isoBandNextYRT[81] = -1;\nisoBandNextORT[89] = isoBandNextORT[81] = 0;\nisoBandNextXBL[89] = isoBandNextXBL[81] = 1;\nisoBandNextYBL[89] = isoBandNextYBL[81] = 0;\nisoBandNextOBL[89] = isoBandNextOBL[81] = 1;\n\nisoBandNextXRT[96] = isoBandNextXRT[74] = 0;\nisoBandNextYRT[96] = isoBandNextYRT[74] = 1;\nisoBandNextORT[96] = isoBandNextORT[74] = 0;\nisoBandNextXRB[96] = isoBandNextXRB[74] = -1;\nisoBandNextYRB[96] = isoBandNextYRB[74] = 0;\nisoBandNextORB[96] = isoBandNextORB[74] = 1;\nisoBandNextXLT[96] = isoBandNextXLT[74] = 1;\nisoBandNextYLT[96] = isoBandNextYLT[74] = 0;\nisoBandNextOLT[96] = isoBandNextOLT[74] = 0;\nisoBandNextXTL[96] = isoBandNextXTL[74] = 1;\nisoBandNextYTL[96] = isoBandNextYTL[74] = 0;\nisoBandNextOTL[96] = isoBandNextOTL[74] = 1;\n\nisoBandNextXRT[24] = isoBandNextXRT[146] = 0;\nisoBandNextYRT[24] = isoBandNextYRT[146] = -1;\nisoBandNextORT[24] = isoBandNextORT[146] = 1;\nisoBandNextXBR[24] = isoBandNextXBR[146] = 1;\nisoBandNextYBR[24] = isoBandNextYBR[146] = 0;\nisoBandNextOBR[24] = isoBandNextOBR[146] = 1;\nisoBandNextXBL[24] = isoBandNextXBL[146] = 0;\nisoBandNextYBL[24] = isoBandNextYBL[146] = 1;\nisoBandNextOBL[24] = isoBandNextOBL[146] = 1;\nisoBandNextXTR[24] = isoBandNextXTR[146] = 0;\nisoBandNextYTR[24] = isoBandNextYTR[146] = -1;\nisoBandNextOTR[24] = isoBandNextOTR[146] = 0;\n\nisoBandNextXRB[6] = isoBandNextXRB[164] = -1;\nisoBandNextYRB[6] = isoBandNextYRB[164] = 0;\nisoBandNextORB[6] = isoBandNextORB[164] = 1;\nisoBandNextXBR[6] = isoBandNextXBR[164] = -1;\nisoBandNextYBR[6] = isoBandNextYBR[164] = 0;\nisoBandNextOBR[6] = isoBandNextOBR[164] = 0;\nisoBandNextXLB[6] = isoBandNextXLB[164] = 0;\nisoBandNextYLB[6] = isoBandNextYLB[164] = -1;\nisoBandNextOLB[6] = isoBandNextOLB[164] = 1;\nisoBandNextXLT[6] = isoBandNextXLT[164] = 1;\nisoBandNextYLT[6] = isoBandNextYLT[164] = 0;\nisoBandNextOLT[6] = isoBandNextOLT[164] = 0;\n\nisoBandNextXBL[129] = isoBandNextXBL[41] = 0;\nisoBandNextYBL[129] = isoBandNextYBL[41] = 1;\nisoBandNextOBL[129] = isoBandNextOBL[41] = 1;\nisoBandNextXLB[129] = isoBandNextXLB[41] = 0;\nisoBandNextYLB[129] = isoBandNextYLB[41] = 1;\nisoBandNextOLB[129] = isoBandNextOLB[41] = 0;\nisoBandNextXTL[129] = isoBandNextXTL[41] = -1;\nisoBandNextYTL[129] = isoBandNextYTL[41] = 0;\nisoBandNextOTL[129] = isoBandNextOTL[41] = 0;\nisoBandNextXTR[129] = isoBandNextXTR[41] = 0;\nisoBandNextYTR[129] = isoBandNextYTR[41] = -1;\nisoBandNextOTR[129] = isoBandNextOTR[41] = 0;\n\nisoBandNextXBR[66] = isoBandNextXBR[104] = 0;\nisoBandNextYBR[66] = isoBandNextYBR[104] = 1;\nisoBandNextOBR[66] = isoBandNextOBR[104] = 0;\nisoBandNextXBL[66] = isoBandNextXBL[104] = -1;\nisoBandNextYBL[66] = isoBandNextYBL[104] = 0;\nisoBandNextOBL[66] = isoBandNextOBL[104] = 1;\nisoBandNextXLT[66] = isoBandNextXLT[104] = 0;\nisoBandNextYLT[66] = isoBandNextYLT[104] = -1;\nisoBandNextOLT[66] = isoBandNextOLT[104] = 0;\nisoBandNextXTL[66] = isoBandNextXTL[104] = 0;\nisoBandNextYTL[66] = isoBandNextYTL[104] = -1;\nisoBandNextOTL[66] = isoBandNextOTL[104] = 1;\n\nisoBandNextXRT[144] = isoBandNextXRT[26] = -1;\nisoBandNextYRT[144] = isoBandNextYRT[26] = 0;\nisoBandNextORT[144] = isoBandNextORT[26] = 0;\nisoBandNextXLB[144] = isoBandNextXLB[26] = 1;\nisoBandNextYLB[144] = isoBandNextYLB[26] = 0;\nisoBandNextOLB[144] = isoBandNextOLB[26] = 1;\nisoBandNextXLT[144] = isoBandNextXLT[26] = 0;\nisoBandNextYLT[144] = isoBandNextYLT[26] = 1;\nisoBandNextOLT[144] = isoBandNextOLT[26] = 1;\nisoBandNextXTR[144] = isoBandNextXTR[26] = -1;\nisoBandNextYTR[144] = isoBandNextYTR[26] = 0;\nisoBandNextOTR[144] = isoBandNextOTR[26] = 1;\n\nisoBandNextXRB[36] = isoBandNextXRB[134] = 0;\nisoBandNextYRB[36] = isoBandNextYRB[134] = 1;\nisoBandNextORB[36] = isoBandNextORB[134] = 1;\nisoBandNextXBR[36] = isoBandNextXBR[134] = 0;\nisoBandNextYBR[36] = isoBandNextYBR[134] = 1;\nisoBandNextOBR[36] = isoBandNextOBR[134] = 0;\nisoBandNextXTL[36] = isoBandNextXTL[134] = 0;\nisoBandNextYTL[36] = isoBandNextYTL[134] = -1;\nisoBandNextOTL[36] = isoBandNextOTL[134] = 1;\nisoBandNextXTR[36] = isoBandNextXTR[134] = 1;\nisoBandNextYTR[36] = isoBandNextYTR[134] = 0;\nisoBandNextOTR[36] = isoBandNextOTR[134] = 0;\n\nisoBandNextXRT[9] = isoBandNextXRT[161] = -1;\nisoBandNextYRT[9] = isoBandNextYRT[161] = 0;\nisoBandNextORT[9] = isoBandNextORT[161] = 0;\nisoBandNextXRB[9] = isoBandNextXRB[161] = 0;\nisoBandNextYRB[9] = isoBandNextYRB[161] = -1;\nisoBandNextORB[9] = isoBandNextORB[161] = 0;\nisoBandNextXBL[9] = isoBandNextXBL[161] = 1;\nisoBandNextYBL[9] = isoBandNextYBL[161] = 0;\nisoBandNextOBL[9] = isoBandNextOBL[161] = 0;\nisoBandNextXLB[9] = isoBandNextXLB[161] = 1;\nisoBandNextYLB[9] = isoBandNextYLB[161] = 0;\nisoBandNextOLB[9] = isoBandNextOLB[161] = 1;\n\n/* 8-sided cases */\nisoBandNextXRT[136] = 0;\nisoBandNextYRT[136] = 1;\nisoBandNextORT[136] = 1;\nisoBandNextXRB[136] = 0;\nisoBandNextYRB[136] = 1;\nisoBandNextORB[136] = 0;\nisoBandNextXBR[136] = -1;\nisoBandNextYBR[136] = 0;\nisoBandNextOBR[136] = 1;\nisoBandNextXBL[136] = -1;\nisoBandNextYBL[136] = 0;\nisoBandNextOBL[136] = 0;\nisoBandNextXLB[136] = 0;\nisoBandNextYLB[136] = -1;\nisoBandNextOLB[136] = 0;\nisoBandNextXLT[136] = 0;\nisoBandNextYLT[136] = -1;\nisoBandNextOLT[136] = 1;\nisoBandNextXTL[136] = 1;\nisoBandNextYTL[136] = 0;\nisoBandNextOTL[136] = 0;\nisoBandNextXTR[136] = 1;\nisoBandNextYTR[136] = 0;\nisoBandNextOTR[136] = 1;\n\nisoBandNextXRT[34] = 0;\nisoBandNextYRT[34] = -1;\nisoBandNextORT[34] = 0;\nisoBandNextXRB[34] = 0;\nisoBandNextYRB[34] = -1;\nisoBandNextORB[34] = 1;\nisoBandNextXBR[34] = 1;\nisoBandNextYBR[34] = 0;\nisoBandNextOBR[34] = 0;\nisoBandNextXBL[34] = 1;\nisoBandNextYBL[34] = 0;\nisoBandNextOBL[34] = 1;\nisoBandNextXLB[34] = 0;\nisoBandNextYLB[34] = 1;\nisoBandNextOLB[34] = 1;\nisoBandNextXLT[34] = 0;\nisoBandNextYLT[34] = 1;\nisoBandNextOLT[34] = 0;\nisoBandNextXTL[34] = -1;\nisoBandNextYTL[34] = 0;\nisoBandNextOTL[34] = 1;\nisoBandNextXTR[34] = -1;\nisoBandNextYTR[34] = 0;\nisoBandNextOTR[34] = 0;\n\nisoBandNextXRT[35] = 0;\nisoBandNextYRT[35] = 1;\nisoBandNextORT[35] = 1;\nisoBandNextXRB[35] = 0;\nisoBandNextYRB[35] = -1;\nisoBandNextORB[35] = 1;\nisoBandNextXBR[35] = 1;\nisoBandNextYBR[35] = 0;\nisoBandNextOBR[35] = 0;\nisoBandNextXBL[35] = -1;\nisoBandNextYBL[35] = 0;\nisoBandNextOBL[35] = 0;\nisoBandNextXLB[35] = 0;\nisoBandNextYLB[35] = -1;\nisoBandNextOLB[35] = 0;\nisoBandNextXLT[35] = 0;\nisoBandNextYLT[35] = 1;\nisoBandNextOLT[35] = 0;\nisoBandNextXTL[35] = -1;\nisoBandNextYTL[35] = 0;\nisoBandNextOTL[35] = 1;\nisoBandNextXTR[35] = 1;\nisoBandNextYTR[35] = 0;\nisoBandNextOTR[35] = 1;\n\n/* 6-sided cases */\nisoBandNextXRT[153] = 0;\nisoBandNextYRT[153] = 1;\nisoBandNextORT[153] = 1;\nisoBandNextXBL[153] = -1;\nisoBandNextYBL[153] = 0;\nisoBandNextOBL[153] = 0;\nisoBandNextXLB[153] = 0;\nisoBandNextYLB[153] = -1;\nisoBandNextOLB[153] = 0;\nisoBandNextXTR[153] = 1;\nisoBandNextYTR[153] = 0;\nisoBandNextOTR[153] = 1;\n\nisoBandNextXRB[102] = 0;\nisoBandNextYRB[102] = -1;\nisoBandNextORB[102] = 1;\nisoBandNextXBR[102] = 1;\nisoBandNextYBR[102] = 0;\nisoBandNextOBR[102] = 0;\nisoBandNextXLT[102] = 0;\nisoBandNextYLT[102] = 1;\nisoBandNextOLT[102] = 0;\nisoBandNextXTL[102] = -1;\nisoBandNextYTL[102] = 0;\nisoBandNextOTL[102] = 1;\n\nisoBandNextXRT[155] = 0;\nisoBandNextYRT[155] = -1;\nisoBandNextORT[155] = 0;\nisoBandNextXBL[155] = 1;\nisoBandNextYBL[155] = 0;\nisoBandNextOBL[155] = 1;\nisoBandNextXLB[155] = 0;\nisoBandNextYLB[155] = 1;\nisoBandNextOLB[155] = 1;\nisoBandNextXTR[155] = -1;\nisoBandNextYTR[155] = 0;\nisoBandNextOTR[155] = 0;\n\nisoBandNextXRB[103] = 0;\nisoBandNextYRB[103] = 1;\nisoBandNextORB[103] = 0;\nisoBandNextXBR[103] = -1;\nisoBandNextYBR[103] = 0;\nisoBandNextOBR[103] = 1;\nisoBandNextXLT[103] = 0;\nisoBandNextYLT[103] = -1;\nisoBandNextOLT[103] = 1;\nisoBandNextXTL[103] = 1;\nisoBandNextYTL[103] = 0;\nisoBandNextOTL[103] = 0;\n\n/* 7-sided cases */\nisoBandNextXRT[152] = 0;\nisoBandNextYRT[152] = 1;\nisoBandNextORT[152] = 1;\nisoBandNextXBR[152] = -1;\nisoBandNextYBR[152] = 0;\nisoBandNextOBR[152] = 1;\nisoBandNextXBL[152] = -1;\nisoBandNextYBL[152] = 0;\nisoBandNextOBL[152] = 0;\nisoBandNextXLB[152] = 0;\nisoBandNextYLB[152] = -1;\nisoBandNextOLB[152] = 0;\nisoBandNextXLT[152] = 0;\nisoBandNextYLT[152] = -1;\nisoBandNextOLT[152] = 1;\nisoBandNextXTR[152] = 1;\nisoBandNextYTR[152] = 0;\nisoBandNextOTR[152] = 1;\n\nisoBandNextXRT[156] = 0;\nisoBandNextYRT[156] = -1;\nisoBandNextORT[156] = 1;\nisoBandNextXBR[156] = 1;\nisoBandNextYBR[156] = 0;\nisoBandNextOBR[156] = 1;\nisoBandNextXBL[156] = -1;\nisoBandNextYBL[156] = 0;\nisoBandNextOBL[156] = 0;\nisoBandNextXLB[156] = 0;\nisoBandNextYLB[156] = -1;\nisoBandNextOLB[156] = 0;\nisoBandNextXLT[156] = 0;\nisoBandNextYLT[156] = 1;\nisoBandNextOLT[156] = 1;\nisoBandNextXTR[156] = -1;\nisoBandNextYTR[156] = 0;\nisoBandNextOTR[156] = 1;\n\nisoBandNextXRT[137] = 0;\nisoBandNextYRT[137] = 1;\nisoBandNextORT[137] = 1;\nisoBandNextXRB[137] = 0;\nisoBandNextYRB[137] = 1;\nisoBandNextORB[137] = 0;\nisoBandNextXBL[137] = -1;\nisoBandNextYBL[137] = 0;\nisoBandNextOBL[137] = 0;\nisoBandNextXLB[137] = 0;\nisoBandNextYLB[137] = -1;\nisoBandNextOLB[137] = 0;\nisoBandNextXTL[137] = 1;\nisoBandNextYTL[137] = 0;\nisoBandNextOTL[137] = 0;\nisoBandNextXTR[137] = 1;\nisoBandNextYTR[137] = 0;\nisoBandNextOTR[137] = 1;\n\nisoBandNextXRT[139] = 0;\nisoBandNextYRT[139] = 1;\nisoBandNextORT[139] = 1;\nisoBandNextXRB[139] = 0;\nisoBandNextYRB[139] = -1;\nisoBandNextORB[139] = 0;\nisoBandNextXBL[139] = 1;\nisoBandNextYBL[139] = 0;\nisoBandNextOBL[139] = 0;\nisoBandNextXLB[139] = 0;\nisoBandNextYLB[139] = 1;\nisoBandNextOLB[139] = 0;\nisoBandNextXTL[139] = -1;\nisoBandNextYTL[139] = 0;\nisoBandNextOTL[139] = 0;\nisoBandNextXTR[139] = 1;\nisoBandNextYTR[139] = 0;\nisoBandNextOTR[139] = 1;\n\nisoBandNextXRT[98] = 0;\nisoBandNextYRT[98] = -1;\nisoBandNextORT[98] = 0;\nisoBandNextXRB[98] = 0;\nisoBandNextYRB[98] = -1;\nisoBandNextORB[98] = 1;\nisoBandNextXBR[98] = 1;\nisoBandNextYBR[98] = 0;\nisoBandNextOBR[98] = 0;\nisoBandNextXBL[98] = 1;\nisoBandNextYBL[98] = 0;\nisoBandNextOBL[98] = 1;\nisoBandNextXLT[98] = 0;\nisoBandNextYLT[98] = 1;\nisoBandNextOLT[98] = 0;\nisoBandNextXTL[98] = -1;\nisoBandNextYTL[98] = 0;\nisoBandNextOTL[98] = 1;\n\nisoBandNextXRT[99] = 0;\nisoBandNextYRT[99] = 1;\nisoBandNextORT[99] = 0;\nisoBandNextXRB[99] = 0;\nisoBandNextYRB[99] = -1;\nisoBandNextORB[99] = 1;\nisoBandNextXBR[99] = 1;\nisoBandNextYBR[99] = 0;\nisoBandNextOBR[99] = 0;\nisoBandNextXBL[99] = -1;\nisoBandNextYBL[99] = 0;\nisoBandNextOBL[99] = 1;\nisoBandNextXLT[99] = 0;\nisoBandNextYLT[99] = -1;\nisoBandNextOLT[99] = 0;\nisoBandNextXTL[99] = 1;\nisoBandNextYTL[99] = 0;\nisoBandNextOTL[99] = 1;\n\nisoBandNextXRB[38] = 0;\nisoBandNextYRB[38] = -1;\nisoBandNextORB[38] = 1;\nisoBandNextXBR[38] = 1;\nisoBandNextYBR[38] = 0;\nisoBandNextOBR[38] = 0;\nisoBandNextXLB[38] = 0;\nisoBandNextYLB[38] = 1;\nisoBandNextOLB[38] = 1;\nisoBandNextXLT[38] = 0;\nisoBandNextYLT[38] = 1;\nisoBandNextOLT[38] = 0;\nisoBandNextXTL[38] = -1;\nisoBandNextYTL[38] = 0;\nisoBandNextOTL[38] = 1;\nisoBandNextXTR[38] = -1;\nisoBandNextYTR[38] = 0;\nisoBandNextOTR[38] = 0;\n\nisoBandNextXRB[39] = 0;\nisoBandNextYRB[39] = 1;\nisoBandNextORB[39] = 1;\nisoBandNextXBR[39] = -1;\nisoBandNextYBR[39] = 0;\nisoBandNextOBR[39] = 0;\nisoBandNextXLB[39] = 0;\nisoBandNextYLB[39] = -1;\nisoBandNextOLB[39] = 1;\nisoBandNextXLT[39] = 0;\nisoBandNextYLT[39] = 1;\nisoBandNextOLT[39] = 0;\nisoBandNextXTL[39] = -1;\nisoBandNextYTL[39] = 0;\nisoBandNextOTL[39] = 1;\nisoBandNextXTR[39] = 1;\nisoBandNextYTR[39] = 0;\nisoBandNextOTR[39] = 0;\n\n\n/*\n  Define helper functions for the polygon_table\n  */\n\n/* triangle cases */\nvar p00 = function (cell) {\n    return [[cell.bottomleft, 0], [0, 0], [0, cell.leftbottom]];\n};\nvar p01 = function (cell) {\n    return [[1, cell.rightbottom], [1, 0], [cell.bottomright, 0]];\n};\nvar p02 = function (cell) {\n    return [[cell.topright, 1], [1, 1], [1, cell.righttop]];\n};\nvar p03 = function (cell) {\n    return [[0, cell.lefttop], [0, 1], [cell.topleft, 1]];\n};\n/* trapezoid cases */\nvar p04 = function (cell) {\n    return [[cell.bottomright, 0], [cell.bottomleft, 0], [0, cell.leftbottom], [0, cell.lefttop]];\n};\nvar p05 = function (cell) {\n    return [[cell.bottomright, 0], [cell.bottomleft, 0], [1, cell.righttop], [1, cell.rightbottom]];\n};\nvar p06 = function (cell) {\n    return [[1, cell.righttop], [1, cell.rightbottom], [cell.topleft, 1], [cell.topright, 1]];\n};\nvar p07 = function (cell) {\n    return [[0, cell.leftbottom], [0, cell.lefttop], [cell.topleft, 1], [cell.topright, 1]];\n};\n/* rectangle cases */\nvar p08 = function (cell) {\n    return [[0, 0], [0, cell.leftbottom], [1, cell.rightbottom], [1, 0]];\n};\nvar p09 = function (cell) {\n    return [[1, 0], [cell.bottomright, 0], [cell.topright, 1], [1, 1]];\n};\nvar p10 = function (cell) {\n    return [[1, 1], [1, cell.righttop], [0, cell.lefttop], [0, 1]];\n};\nvar p11 = function (cell) {\n    return [[cell.bottomleft, 0], [0, 0], [0, 1], [cell.topleft, 1]];\n};\nvar p12 = function (cell) {\n    return [[1, cell.righttop], [1, cell.rightbottom], [0, cell.leftbottom], [0, cell.lefttop]];\n};\nvar p13 = function (cell) {\n    return [[cell.topleft, 1], [cell.topright, 1], [cell.bottomright, 0], [cell.bottomleft, 0]];\n};\n/* square case */\nvar p14 = function () {\n    return [[0, 0], [0, 1], [1, 1], [1, 0]];\n};\n/* pentagon cases */\nvar p15 = function (cell) {\n    return [[1, cell.rightbottom], [1, 0], [0, 0], [0, 1], [cell.topleft, 1]];\n};\n/* 1211 || 1011 */\nvar p16 = function (cell) {\n    return [[cell.topright, 1], [1, 1], [1, 0], [0, 0], [0, cell.leftbottom]];\n};\n/* 2111 || 0111 */\nvar p17 = function (cell) {\n    return [[1, 0], [cell.bottomright, 0], [0, cell.lefttop], [0, 1], [1, 1]];\n};\n/* 1112 || 1110 */\nvar p18 = function (cell) {\n    return [[1, 1], [1, cell.righttop], [cell.bottomleft, 0], [0, 0], [0, 1]];\n};\n/* 1121 || 1101 */\nvar p19 = function (cell) {\n    return [[1, cell.righttop], [1, cell.rightbottom], [0, cell.lefttop], [0, 1], [cell.topleft, 1]];\n};\n/* 1200 || 1022 */\nvar p20 = function (cell) {\n    return [[1, 1], [1, cell.righttop], [cell.bottomright, 0], [cell.bottomleft, 0], [cell.topright, 1]];\n};\n/* 0120 || 2102 */\nvar p21 = function (cell) {\n    return [[1, cell.rightbottom], [1, 0], [cell.bottomright, 0], [0, cell.leftbottom], [0, cell.lefttop]];\n};\n/* 0012 || 2210 */\nvar p22 = function (cell) {\n    return [[cell.topright, 1], [cell.bottomleft, 0], [0, 0], [0, cell.leftbottom], [cell.topleft, 1]];\n};\n/* 2001 || 0221 */\nvar p23 = function (cell) {\n    return [[cell.bottomright, 0], [cell.bottomleft, 0], [0, cell.lefttop], [0, 1], [cell.topleft, 1]];\n};\n/* 1002 || 1220 */\nvar p24 = function (cell) {\n    return [[1, 1], [1, cell.righttop], [0, cell.leftbottom], [0, cell.lefttop], [cell.topright, 1]];\n};\n/* 2100 || 0122 */\nvar p25 = function (cell) {\n    return [[1, cell.rightbottom], [1, 0], [cell.bottomright, 0], [cell.topleft, 1], [cell.topright, 1]];\n};\n/* 0210 || 2012 */\nvar p26 = function (cell) {\n    return [[1, cell.righttop], [1, cell.rightbottom], [cell.bottomleft, 0], [0, 0], [0, cell.leftbottom]];\n};\n/* 0021 || 2201 */\n/*hexagon cases */\nvar p27 = function (cell) {\n    return [[1, cell.rightbottom], [1, 0], [0, 0], [0, cell.leftbottom], [cell.topleft, 1], [cell.topright, 1]];\n};\n/* 0211 || 2011 */\nvar p28 = function (cell) {\n    return [[1, 1], [1, 0], [cell.bottomright, 0], [0, cell.leftbottom], [0, cell.lefttop], [cell.topright, 1]];\n};\n/* 2110 || 0112 */\nvar p29 = function (cell) {\n    return [[1, 1], [1, cell.righttop], [cell.bottomright, 0], [cell.bottomleft, 0], [0, cell.lefttop], [0, 1]];\n};\n/* 1102 || 1120 */\nvar p30 = function (cell) {\n    return [[1, cell.righttop], [1, cell.rightbottom], [cell.bottomleft, 0], [0, 0], [0, 1], [cell.topleft, 1]];\n};\n/* 1021 || 1201 */\nvar p31 = function (cell) {\n    return [[1, 1], [1, cell.righttop], [cell.bottomleft, 0], [0, 0], [0, cell.leftbottom], [cell.topright, 1]];\n};\n/* 2101 || 0121 */\nvar p32 = function (cell) {\n    return [[1, cell.rightbottom], [1, 0], [cell.bottomright, 0], [0, cell.lefttop], [0, 1], [cell.topleft, 1]];\n};\n/* 1012 || 1210 */\n/* 8-sided cases */\nvar p33 = function (cell) {\n    return [[1, cell.righttop], [1, cell.rightbottom], [cell.bottomright, 0], [cell.bottomleft, 0], [0, cell.leftbottom], [0, cell.lefttop], [cell.topleft, 1], [cell.topright, 1]];\n};\n/* flipped == 1 state for 0202 and 2020 */\n/* 6-sided cases */\nvar p34 = function (cell) {\n    return [[1, 1], [1, cell.righttop], [cell.bottomleft, 0], [0, 0], [0, cell.leftbottom], [cell.topright, 1]];\n};\n/* 0101 with flipped == 1 || 2121 with flipped == 1 */\nvar p35 = function (cell) {\n    return [[1, cell.rightbottom], [1, 0], [cell.bottomright, 0], [0, cell.lefttop], [0, 1], [cell.topleft, 1]];\n};\n/* 1010 with flipped == 1 || 1212 with flipped == 1 */\n/* 7-sided cases */\nvar p36 = function (cell) {\n    return [[1, 1], [1, cell.righttop], [cell.bottomright, 0], [cell.bottomleft, 0], [0, cell.leftbottom], [0, cell.lefttop], [cell.topright, 1]];\n};\n/* 2120 with flipped == 1 || 0102 with flipped == 1 */\nvar p37 = function (cell) {\n    return [[1, cell.righttop], [1, cell.rightbottom], [cell.bottomleft, 0], [0, 0], [0, cell.leftbottom], [cell.topleft, 1], [cell.topright, 1]];\n};\n/* 2021 with flipped == 1 || 0201 with flipped == 1 */\nvar p38 = function (cell) {\n    return [[1, cell.righttop], [1, cell.rightbottom], [cell.bottomright, 0], [cell.bottomleft, 0], [0, cell.lefttop], [0, 1], [cell.topleft, 1]];\n};\n/* 1202 with flipped == 1 || 1020 with flipped == 1 */\nvar p39 = function (cell) {\n    return [[1, cell.rightbottom], [1, 0], [cell.bottomright, 0], [0, cell.leftbottom], [0, cell.lefttop], [cell.topleft, 1], [cell.topright, 1]];\n};\n/* 0212 with flipped == 1 || 2010 with flipped == 1 */\n\n\n\n/*\n  The lookup tables for edge number given the polygon\n  is entered at a specific location\n*/\n\nvar isoBandEdgeRT = [];\nvar isoBandEdgeRB = [];\nvar isoBandEdgeBR = [];\nvar isoBandEdgeBL = [];\nvar isoBandEdgeLB = [];\nvar isoBandEdgeLT = [];\nvar isoBandEdgeTL = [];\nvar isoBandEdgeTR = [];\n\n/* triangle cases */\nisoBandEdgeBL[1]    = isoBandEdgeLB[1]    = 18;\nisoBandEdgeBL[169]  = isoBandEdgeLB[169]  = 18;\nisoBandEdgeBR[4]    = isoBandEdgeRB[4]    = 12;\nisoBandEdgeBR[166]  = isoBandEdgeRB[166]  = 12;\nisoBandEdgeRT[16]   = isoBandEdgeTR[16]   = 4;\nisoBandEdgeRT[154]  = isoBandEdgeTR[154]  = 4;\nisoBandEdgeLT[64]   = isoBandEdgeTL[64]   = 22;\nisoBandEdgeLT[106]  = isoBandEdgeTL[106]  = 22;\n\n/* trapezoid cases */\nisoBandEdgeBR[2]    = isoBandEdgeLT[2]    = 17;\nisoBandEdgeBL[2]    = isoBandEdgeLB[2]    = 18;\nisoBandEdgeBR[168]  = isoBandEdgeLT[168]  = 17;\nisoBandEdgeBL[168]  = isoBandEdgeLB[168]  = 18;\nisoBandEdgeRT[8]    = isoBandEdgeBL[8]    = 9;\nisoBandEdgeRB[8]    = isoBandEdgeBR[8]    = 12;\nisoBandEdgeRT[162]  = isoBandEdgeBL[162]  = 9;\nisoBandEdgeRB[162]  = isoBandEdgeBR[162]  = 12;\nisoBandEdgeRT[32]   = isoBandEdgeTR[32]   = 4;\nisoBandEdgeRB[32]   = isoBandEdgeTL[32]   = 1;\nisoBandEdgeRT[138]  = isoBandEdgeTR[138]  = 4;\nisoBandEdgeRB[138]  = isoBandEdgeTL[138]  = 1;\nisoBandEdgeLB[128]  = isoBandEdgeTR[128]  = 21;\nisoBandEdgeLT[128]  = isoBandEdgeTL[128]  = 22;\nisoBandEdgeLB[42]   = isoBandEdgeTR[42]   = 21;\nisoBandEdgeLT[42]   = isoBandEdgeTL[42]   = 22;\n\n/* rectangle cases */\nisoBandEdgeRB[5] = isoBandEdgeLB[5] = 14;\nisoBandEdgeRB[165] = isoBandEdgeLB[165] = 14;\nisoBandEdgeBR[20] = isoBandEdgeTR[20] = 6;\nisoBandEdgeBR[150] = isoBandEdgeTR[150] = 6;\nisoBandEdgeRT[80] = isoBandEdgeLT[80] = 11;\nisoBandEdgeRT[90] = isoBandEdgeLT[90] = 11;\nisoBandEdgeBL[65] = isoBandEdgeTL[65] = 3;\nisoBandEdgeBL[105] = isoBandEdgeTL[105] = 3;\nisoBandEdgeRT[160] = isoBandEdgeLT[160] = 11;\nisoBandEdgeRB[160] = isoBandEdgeLB[160] = 14;\nisoBandEdgeRT[10] = isoBandEdgeLT[10] = 11;\nisoBandEdgeRB[10] = isoBandEdgeLB[10] = 14;\nisoBandEdgeBR[130] = isoBandEdgeTR[130] = 6;\nisoBandEdgeBL[130] = isoBandEdgeTL[130] = 3;\nisoBandEdgeBR[40] = isoBandEdgeTR[40] = 6;\nisoBandEdgeBL[40] = isoBandEdgeTL[40] = 3;\n\n/* pentagon cases */\nisoBandEdgeRB[101] = isoBandEdgeTL[101] = 1;\nisoBandEdgeRB[69] = isoBandEdgeTL[69] = 1;\nisoBandEdgeLB[149] = isoBandEdgeTR[149] = 21;\nisoBandEdgeLB[21] = isoBandEdgeTR[21] = 21;\nisoBandEdgeBR[86] = isoBandEdgeLT[86] = 17;\nisoBandEdgeBR[84] = isoBandEdgeLT[84] = 17;\nisoBandEdgeRT[89] = isoBandEdgeBL[89] = 9;\nisoBandEdgeRT[81] = isoBandEdgeBL[81] = 9;\nisoBandEdgeRT[96] = isoBandEdgeTL[96] = 0;\nisoBandEdgeRB[96] = isoBandEdgeLT[96] = 15;\nisoBandEdgeRT[74] = isoBandEdgeTL[74] = 0;\nisoBandEdgeRB[74] = isoBandEdgeLT[74] = 15;\nisoBandEdgeRT[24] = isoBandEdgeBR[24] = 8;\nisoBandEdgeBL[24] = isoBandEdgeTR[24] = 7;\nisoBandEdgeRT[146] = isoBandEdgeBR[146] = 8;\nisoBandEdgeBL[146] = isoBandEdgeTR[146] = 7;\nisoBandEdgeRB[6] = isoBandEdgeLT[6] = 15;\nisoBandEdgeBR[6] = isoBandEdgeLB[6] = 16;\nisoBandEdgeRB[164] = isoBandEdgeLT[164] = 15;\nisoBandEdgeBR[164] = isoBandEdgeLB[164] = 16;\nisoBandEdgeBL[129] = isoBandEdgeTR[129] = 7;\nisoBandEdgeLB[129] = isoBandEdgeTL[129] = 20;\nisoBandEdgeBL[41] = isoBandEdgeTR[41] = 7;\nisoBandEdgeLB[41] = isoBandEdgeTL[41] = 20;\nisoBandEdgeBR[66] = isoBandEdgeTL[66] = 2;\nisoBandEdgeBL[66] = isoBandEdgeLT[66] = 19;\nisoBandEdgeBR[104] = isoBandEdgeTL[104] = 2;\nisoBandEdgeBL[104] = isoBandEdgeLT[104] = 19;\nisoBandEdgeRT[144] = isoBandEdgeLB[144] = 10;\nisoBandEdgeLT[144] = isoBandEdgeTR[144] = 23;\nisoBandEdgeRT[26] = isoBandEdgeLB[26] = 10;\nisoBandEdgeLT[26] = isoBandEdgeTR[26] = 23;\nisoBandEdgeRB[36] = isoBandEdgeTR[36] = 5;\nisoBandEdgeBR[36] = isoBandEdgeTL[36] = 2;\nisoBandEdgeRB[134] = isoBandEdgeTR[134] = 5;\nisoBandEdgeBR[134] = isoBandEdgeTL[134] = 2;\nisoBandEdgeRT[9] = isoBandEdgeLB[9] = 10;\nisoBandEdgeRB[9] = isoBandEdgeBL[9] = 13;\nisoBandEdgeRT[161] = isoBandEdgeLB[161] = 10;\nisoBandEdgeRB[161] = isoBandEdgeBL[161] = 13;\n\n/* hexagon cases */\nisoBandEdgeRB[37] = isoBandEdgeTR[37] = 5;\nisoBandEdgeLB[37] = isoBandEdgeTL[37] = 20;\nisoBandEdgeRB[133] = isoBandEdgeTR[133] = 5;\nisoBandEdgeLB[133] = isoBandEdgeTL[133] = 20;\nisoBandEdgeBR[148] = isoBandEdgeLB[148] = 16;\nisoBandEdgeLT[148] = isoBandEdgeTR[148] = 23;\nisoBandEdgeBR[22] = isoBandEdgeLB[22] = 16;\nisoBandEdgeLT[22] = isoBandEdgeTR[22] = 23;\nisoBandEdgeRT[82] = isoBandEdgeBR[82] = 8;\nisoBandEdgeBL[82] = isoBandEdgeLT[82] = 19;\nisoBandEdgeRT[88] = isoBandEdgeBR[88] = 8;\nisoBandEdgeBL[88] = isoBandEdgeLT[88] = 19;\nisoBandEdgeRT[73] = isoBandEdgeTL[73] = 0;\nisoBandEdgeRB[73] = isoBandEdgeBL[73] = 13;\nisoBandEdgeRT[97] = isoBandEdgeTL[97] = 0;\nisoBandEdgeRB[97] = isoBandEdgeBL[97] = 13;\nisoBandEdgeRT[145] = isoBandEdgeBL[145] = 9;\nisoBandEdgeLB[145] = isoBandEdgeTR[145] = 21;\nisoBandEdgeRT[25] = isoBandEdgeBL[25] = 9;\nisoBandEdgeLB[25] = isoBandEdgeTR[25] = 21;\nisoBandEdgeRB[70] = isoBandEdgeTL[70] = 1;\nisoBandEdgeBR[70] = isoBandEdgeLT[70] = 17;\nisoBandEdgeRB[100] = isoBandEdgeTL[100] = 1;\nisoBandEdgeBR[100] = isoBandEdgeLT[100] = 17;\n\n/* 8-sided cases */\nisoBandEdgeRT[34] = isoBandEdgeBL[34] = 9;\nisoBandEdgeRB[34] = isoBandEdgeBR[34] = 12;\nisoBandEdgeLB[34] = isoBandEdgeTR[34] = 21;\nisoBandEdgeLT[34] = isoBandEdgeTL[34] = 22;\nisoBandEdgeRT[136] = isoBandEdgeTR[136] = 4;\nisoBandEdgeRB[136] = isoBandEdgeTL[136] = 1;\nisoBandEdgeBR[136] = isoBandEdgeLT[136] = 17;\nisoBandEdgeBL[136] = isoBandEdgeLB[136] = 18;\nisoBandEdgeRT[35] = isoBandEdgeTR[35] = 4;\nisoBandEdgeRB[35] = isoBandEdgeBR[35] = 12;\nisoBandEdgeBL[35] = isoBandEdgeLB[35] = 18;\nisoBandEdgeLT[35] = isoBandEdgeTL[35] = 22;\n\n/* 6-sided cases */\nisoBandEdgeRT[153] = isoBandEdgeTR[153] = 4;\nisoBandEdgeBL[153] = isoBandEdgeLB[153] = 18;\nisoBandEdgeRB[102] = isoBandEdgeBR[102] = 12;\nisoBandEdgeLT[102] = isoBandEdgeTL[102] = 22;\nisoBandEdgeRT[155] = isoBandEdgeBL[155] = 9;\nisoBandEdgeLB[155] = isoBandEdgeTR[155] = 23;\nisoBandEdgeRB[103] = isoBandEdgeTL[103] = 1;\nisoBandEdgeBR[103] = isoBandEdgeLT[103] = 17;\n\n/* 7-sided cases */\nisoBandEdgeRT[152] = isoBandEdgeTR[152] = 4;\nisoBandEdgeBR[152] = isoBandEdgeLT[152] = 17;\nisoBandEdgeBL[152] = isoBandEdgeLB[152] = 18;\nisoBandEdgeRT[156] = isoBandEdgeBR[156] = 8;\nisoBandEdgeBL[156] = isoBandEdgeLB[156] = 18;\nisoBandEdgeLT[156] = isoBandEdgeTR[156] = 23;\nisoBandEdgeRT[137] = isoBandEdgeTR[137] = 4;\nisoBandEdgeRB[137] = isoBandEdgeTL[137] = 1;\nisoBandEdgeBL[137] = isoBandEdgeLB[137] = 18;\nisoBandEdgeRT[139] = isoBandEdgeTR[139] = 4;\nisoBandEdgeRB[139] = isoBandEdgeBL[139] = 13;\nisoBandEdgeLB[139] = isoBandEdgeTL[139] = 20;\nisoBandEdgeRT[98] = isoBandEdgeBL[98] = 9;\nisoBandEdgeRB[98] = isoBandEdgeBR[98] = 12;\nisoBandEdgeLT[98] = isoBandEdgeTL[98] = 22;\nisoBandEdgeRT[99] = isoBandEdgeTL[99] = 0;\nisoBandEdgeRB[99] = isoBandEdgeBR[99] = 12;\nisoBandEdgeBL[99] = isoBandEdgeLT[99] = 19;\nisoBandEdgeRB[38] = isoBandEdgeBR[38] = 12;\nisoBandEdgeLB[38] = isoBandEdgeTR[38] = 21;\nisoBandEdgeLT[38] = isoBandEdgeTL[38] = 22;\nisoBandEdgeRB[39] = isoBandEdgeTR[39] = 5;\nisoBandEdgeBR[39] = isoBandEdgeLB[39] = 16;\nisoBandEdgeLT[39] = isoBandEdgeTL[39] = 22;\n\n/*\n  The lookup tables for all different polygons that\n  may appear within a grid cell\n*/\n\nvar polygon_table = [];\n\n/* triangle cases */\npolygon_table[1] = polygon_table[169] = p00; /* 2221 || 0001 */\npolygon_table[4] = polygon_table[166] = p01; /* 2212 || 0010 */\npolygon_table[16] = polygon_table[154] = p02; /* 2122 || 0100 */\npolygon_table[64] = polygon_table[106] = p03; /* 1222 || 1000 */\n\n/* trapezoid cases */\npolygon_table[168] = polygon_table[2] = p04; /* 2220 || 0002 */\npolygon_table[162] = polygon_table[8] = p05; /* 2202 || 0020 */\npolygon_table[138] = polygon_table[32] = p06; /* 2022 || 0200 */\npolygon_table[42] = polygon_table[128] = p07; /* 0222 || 2000 */\n\n/* rectangle cases */\npolygon_table[5] = polygon_table[165] = p08; /* 0011 || 2211 */\npolygon_table[20] = polygon_table[150] = p09; /* 0110 || 2112 */\npolygon_table[80] = polygon_table[90] = p10; /* 1100 || 1122 */\npolygon_table[65] = polygon_table[105] = p11; /* 1001 || 1221 */\npolygon_table[160] = polygon_table[10] = p12; /* 2200 || 0022 */\npolygon_table[130] = polygon_table[40] = p13; /* 2002 || 0220 */\n\n/* square case */\npolygon_table[85] = p14; /* 1111 */\n\n/* pentagon cases */\npolygon_table[101] = polygon_table[69] = p15; /* 1211 || 1011 */\npolygon_table[149] = polygon_table[21] = p16; /* 2111 || 0111 */\npolygon_table[86] = polygon_table[84] = p17; /* 1112 || 1110 */\npolygon_table[89] = polygon_table[81] = p18; /* 1121 || 1101 */\npolygon_table[96] = polygon_table[74] = p19; /* 1200 || 1022 */\npolygon_table[24] = polygon_table[146] = p20; /* 0120 || 2102 */\npolygon_table[6] = polygon_table[164] = p21; /* 0012 || 2210 */\npolygon_table[129] = polygon_table[41] = p22; /* 2001 || 0221 */\npolygon_table[66] = polygon_table[104] = p23; /* 1002 || 1220 */\npolygon_table[144] = polygon_table[26] = p24; /* 2100 || 0122 */\npolygon_table[36] = polygon_table[134] = p25; /* 0210 || 2012 */\npolygon_table[9] = polygon_table[161] = p26; /* 0021 || 2201 */\n\n/* hexagon cases */\npolygon_table[37] = polygon_table[133] = p27; /* 0211 || 2011 */\npolygon_table[148] = polygon_table[22] = p28; /* 2110 || 0112 */\npolygon_table[82] = polygon_table[88] = p29; /* 1102 || 1120 */\npolygon_table[73] = polygon_table[97] = p30; /* 1021 || 1201 */\npolygon_table[145] = polygon_table[25] = p31; /* 2101 || 0121 */\npolygon_table[70] = polygon_table[100] = p32; /* 1012 || 1210 */\n\n/* 8-sided cases */\npolygon_table[34] = function (c) { return [p07(c), p05(c)]; }; /* 0202 || 2020 with flipped == 0 */\npolygon_table[35] = p33; /* flipped == 1 state for 0202 and 2020 */\npolygon_table[136] = function (c) { return [p06(c), p04(c)]; }; /* 2020 || 0202 with flipped == 0 */\n\n/* 6-sided cases */\npolygon_table[153] = function (c) { return [p02(c), p00(c)]; }; /* 0101 with flipped == 0 || 2121 with flipped == 2 */\npolygon_table[102] = function (c) { return [p01(c), p03(c)]; }; /* 1010 with flipped == 0 || 1212 with flipped == 2 */\npolygon_table[155] = p34; /* 0101 with flipped == 1 || 2121 with flipped == 1 */\npolygon_table[103] = p35; /* 1010 with flipped == 1 || 1212 with flipped == 1 */\n\n/* 7-sided cases */\npolygon_table[152] = function (c) { return [p02(c), p04(c)]; }; /* 2120 with flipped == 2 || 0102 with flipped == 0 */\npolygon_table[156] = p36; /* 2120 with flipped == 1 || 0102 with flipped == 1 */\npolygon_table[137] = function (c) { return [p06(c), p00(c)]; }; /* 2021 with flipped == 2 || 0201 with flipped == 0 */\npolygon_table[139] = p37; /* 2021 with flipped == 1 || 0201 with flipped == 1 */\npolygon_table[98] = function (c) { return [p05(c), p03(c)]; }; /* 1202 with flipped == 2 || 1020 with flipped == 0 */\npolygon_table[99] = p38; /* 1202 with flipped == 1 || 1020 with flipped == 1 */\npolygon_table[38] = function (c) { return [p01(c), p07(c)]; }; /* 0212 with flipped == 2 || 2010 with flipped == 0 */\npolygon_table[39] = p39; /* 0212 with flipped == 1 || 2010 with flipped == 1 */\n\n\n/*\n####################################\nSome small helper functions\n####################################\n*/\n\n/* assume that x1 == 1 &&  x0 == 0 */\nfunction interpolateX(y, y0, y1) {\n    return (y - y0) / (y1 - y0);\n}\n\nfunction isArray(myArray) {\n    return myArray.constructor.toString().indexOf('Array') > -1;\n}\n\n/*\n####################################\nBelow is the actual Marching Squares implementation\n####################################\n*/\n\nfunction computeBandGrid(data, minV, bandwidth) {\n    var rows = data.length - 1;\n    var cols = data[0].length - 1;\n    var BandGrid = { rows: rows, cols: cols, cells: [] };\n\n    var maxV = minV + Math.abs(bandwidth);\n\n    for (var j = 0; j < rows; ++j) {\n        BandGrid.cells[j] = [];\n        for (var i = 0; i < cols; ++i) {\n            /*  compose the 4-trit corner representation */\n            var cval = 0;\n\n            var tl = data[j + 1][i];\n            var tr = data[j + 1][i + 1];\n            var br = data[j][i + 1];\n            var bl = data[j][i];\n\n            if (isNaN(tl) || isNaN(tr) || isNaN(br) || isNaN(bl)) {\n                continue;\n            }\n\n            cval |= (tl < minV) ? 0 : (tl > maxV) ? 128 : 64;\n            cval |= (tr < minV) ? 0 : (tr > maxV) ? 32 : 16;\n            cval |= (br < minV) ? 0 : (br > maxV) ? 8 : 4;\n            cval |= (bl < minV) ? 0 : (bl > maxV) ? 2 : 1;\n\n            var cval_real = +cval;\n\n            /* resolve ambiguity via averaging */\n            var flipped = 0;\n            if ((cval === 17)  || /* 0101 */\n          (cval === 18)  || /* 0102 */\n          (cval === 33)  || /* 0201 */\n          (cval === 34)  || /* 0202 */\n          (cval === 38)  || /* 0212 */\n          (cval === 68)  || /* 1010 */\n          (cval === 72)  || /* 1020 */\n          (cval === 98)  || /* 1202 */\n          (cval === 102)  || /* 1212 */\n          (cval === 132)  || /* 2010 */\n          (cval === 136)  || /* 2020 */\n          (cval === 137)  || /* 2021 */\n          (cval === 152)  || /* 2120 */\n          (cval === 153) /* 2121 */\n            ) {\n                var average = (tl + tr + br + bl) / 4;\n                /* set flipped state */\n                flipped = (average > maxV) ? 2 : (average < minV) ? 0 : 1;\n\n                /* adjust cval for flipped cases */\n\n                /* 8-sided cases */\n                if (cval === 34) {\n                    if (flipped === 1) {\n                        cval = 35;\n                    } else if (flipped === 0) {\n                        cval = 136;\n                    }\n                } else if (cval === 136) {\n                    if (flipped === 1) {\n                        cval = 35;\n                        flipped = 4;\n                    } else if (flipped === 0) {\n                        cval = 34;\n                    }\n                }\n\n                /* 6-sided polygon cases */\n                else if (cval === 17) {\n                    if (flipped === 1) {\n                        cval = 155;\n                        flipped = 4;\n                    } else if (flipped === 0) {\n                        cval = 153;\n                    }\n                } else if (cval === 68) {\n                    if (flipped === 1) {\n                        cval = 103;\n                        flipped = 4;\n                    } else if (flipped === 0) {\n                        cval = 102;\n                    }\n                } else if (cval === 153) {\n                    if (flipped === 1)\n                        cval = 155;\n                } else if (cval === 102) {\n                    if (flipped === 1)\n                        cval = 103;\n                }\n\n                /* 7-sided polygon cases */\n                else if (cval === 152) {\n                    if (flipped < 2) {\n                        cval    = 156;\n                        flipped = 1;\n                    }\n                } else if (cval === 137) {\n                    if (flipped < 2) {\n                        cval = 139;\n                        flipped = 1;\n                    }\n                } else if (cval === 98) {\n                    if (flipped < 2) {\n                        cval    = 99;\n                        flipped = 1;\n                    }\n                } else if (cval === 38) {\n                    if (flipped < 2) {\n                        cval    = 39;\n                        flipped = 1;\n                    }\n                } else if (cval === 18) {\n                    if (flipped > 0) {\n                        cval = 156;\n                        flipped = 4;\n                    } else {\n                        cval = 152;\n                    }\n                } else if (cval === 33) {\n                    if (flipped > 0) {\n                        cval = 139;\n                        flipped = 4;\n                    } else {\n                        cval = 137;\n                    }\n                } else if (cval === 72) {\n                    if (flipped > 0) {\n                        cval = 99;\n                        flipped = 4;\n                    } else {\n                        cval = 98;\n                    }\n                } else if (cval === 132) {\n                    if (flipped > 0) {\n                        cval = 39;\n                        flipped = 4;\n                    } else {\n                        cval = 38;\n                    }\n                }\n            }\n\n            /* add cell to BandGrid if it contains at least one polygon-side */\n            if ((cval != 0) && (cval != 170)) {\n                var topleft, topright, bottomleft, bottomright,\n                    righttop, rightbottom, lefttop, leftbottom;\n\n                topleft = topright = bottomleft = bottomright = righttop =\n                rightbottom = lefttop = leftbottom = 0.5;\n\n                var edges = [];\n\n                /* do interpolation here */\n                /* 1st Triangles */\n                if (cval === 1) { /* 0001 */\n                    bottomleft = 1 - interpolateX(minV, br, bl);\n                    leftbottom = 1 - interpolateX(minV, tl, bl);\n                    edges.push(isoBandEdgeBL[cval]);\n                } else if (cval === 169) { /* 2221 */\n                    bottomleft = interpolateX(maxV, bl, br);\n                    leftbottom = interpolateX(maxV, bl, tl);\n                    edges.push(isoBandEdgeBL[cval]);\n                } else if (cval === 4) { /* 0010 */\n                    rightbottom = 1 - interpolateX(minV, tr, br);\n                    bottomright = interpolateX(minV, bl, br);\n                    edges.push(isoBandEdgeRB[cval]);\n                } else if (cval === 166) { /* 2212 */\n                    rightbottom = interpolateX(maxV, br, tr);\n                    bottomright = 1 - interpolateX(maxV, br, bl);\n                    edges.push(isoBandEdgeRB[cval]);\n                } else if (cval === 16) { /* 0100 */\n                    righttop = interpolateX(minV, br, tr);\n                    topright = interpolateX(minV, tl, tr);\n                    edges.push(isoBandEdgeRT[cval]);\n                } else if (cval === 154) { /* 2122 */\n                    righttop = 1 - interpolateX(maxV, tr, br);\n                    topright = 1 - interpolateX(maxV, tr, tl);\n                    edges.push(isoBandEdgeRT[cval]);\n                } else if (cval === 64) { /* 1000 */\n                    lefttop = interpolateX(minV, bl, tl);\n                    topleft = 1 - interpolateX(minV, tr, tl);\n                    edges.push(isoBandEdgeLT[cval]);\n                } else if (cval === 106) { /* 1222 */\n                    lefttop = 1 - interpolateX(maxV, tl, bl);\n                    topleft = interpolateX(maxV, tl, tr);\n                    edges.push(isoBandEdgeLT[cval]);\n                }\n                /* 2nd Trapezoids */\n                else if (cval === 168) { /* 2220 */\n                    bottomright = interpolateX(maxV, bl, br);\n                    bottomleft = interpolateX(minV, bl, br);\n                    leftbottom = interpolateX(minV, bl, tl);\n                    lefttop = interpolateX(maxV, bl, tl);\n                    edges.push(isoBandEdgeBR[cval]);\n                    edges.push(isoBandEdgeBL[cval]);\n                } else if (cval === 2) { /* 0002 */\n                    bottomright = 1 - interpolateX(minV, br, bl);\n                    bottomleft = 1 - interpolateX(maxV, br, bl);\n                    leftbottom = 1 - interpolateX(maxV, tl, bl);\n                    lefttop = 1 - interpolateX(minV, tl, bl);\n                    edges.push(isoBandEdgeBR[cval]);\n                    edges.push(isoBandEdgeBL[cval]);\n                } else if (cval === 162) { /* 2202 */\n                    righttop = interpolateX(maxV, br, tr);\n                    rightbottom = interpolateX(minV, br, tr);\n                    bottomright = 1 - interpolateX(minV, br, bl);\n                    bottomleft = 1 - interpolateX(maxV, br, bl);\n                    edges.push(isoBandEdgeBR[cval]);\n                    edges.push(isoBandEdgeBL[cval]);\n                } else if (cval === 8) { /* 0020 */\n                    righttop = 1 - interpolateX(minV, tr, br);\n                    rightbottom = 1 - interpolateX(maxV, tr, br);\n                    bottomright = interpolateX(maxV, bl, br);\n                    bottomleft = interpolateX(minV, bl, br);\n                    edges.push(isoBandEdgeRT[cval]);\n                    edges.push(isoBandEdgeRB[cval]);\n                } else if (cval === 138) { /* 2022 */\n                    righttop = 1 - interpolateX(minV, tr, br);\n                    rightbottom = 1 - interpolateX(maxV, tr, br);\n                    topleft = 1 - interpolateX(maxV, tr, tl);\n                    topright = 1 - interpolateX(minV, tr, tl);\n                    edges.push(isoBandEdgeRT[cval]);\n                    edges.push(isoBandEdgeRB[cval]);\n                } else if (cval === 32) { /* 0200 */\n                    righttop = interpolateX(maxV, br, tr);\n                    rightbottom = interpolateX(minV, br, tr);\n                    topleft = interpolateX(minV, tl, tr);\n                    topright = interpolateX(maxV, tl, tr);\n                    edges.push(isoBandEdgeRT[cval]);\n                    edges.push(isoBandEdgeRB[cval]);\n                } else if (cval === 42) { /* 0222 */\n                    leftbottom = 1 - interpolateX(maxV, tl, bl);\n                    lefttop = 1 - interpolateX(minV, tl, bl);\n                    topleft = interpolateX(minV, tl, tr);\n                    topright = interpolateX(maxV, tl, tr);\n                    edges.push(isoBandEdgeLB[cval]);\n                    edges.push(isoBandEdgeLT[cval]);\n                } else if (cval === 128) { /* 2000 */\n                    leftbottom = interpolateX(minV, bl, tl);\n                    lefttop = interpolateX(maxV, bl, tl);\n                    topleft = 1 - interpolateX(maxV, tr, tl);\n                    topright = 1 - interpolateX(minV, tr, tl);\n                    edges.push(isoBandEdgeLB[cval]);\n                    edges.push(isoBandEdgeLT[cval]);\n                }\n\n                /* 3rd rectangle cases */\n                if (cval === 5) { /* 0011 */\n                    rightbottom = 1 - interpolateX(minV, tr, br);\n                    leftbottom = 1 - interpolateX(minV, tl, bl);\n                    edges.push(isoBandEdgeRB[cval]);\n                } else if (cval === 165) { /* 2211 */\n                    rightbottom = interpolateX(maxV, br, tr);\n                    leftbottom = interpolateX(maxV, bl, tl);\n                    edges.push(isoBandEdgeRB[cval]);\n                } else if (cval === 20) { /* 0110 */\n                    bottomright = interpolateX(minV, bl, br);\n                    topright = interpolateX(minV, tl, tr);\n                    edges.push(isoBandEdgeBR[cval]);\n                } else if (cval === 150) { /* 2112 */\n                    bottomright = 1 - interpolateX(maxV, br, bl);\n                    topright = 1 - interpolateX(maxV, tr, tl);\n                    edges.push(isoBandEdgeBR[cval]);\n                } else if (cval === 80) { /* 1100 */\n                    righttop = interpolateX(minV, br, tr);\n                    lefttop = interpolateX(minV, bl, tl);\n                    edges.push(isoBandEdgeRT[cval]);\n                } else if (cval === 90) { /* 1122 */\n                    righttop = 1 - interpolateX(maxV, tr, br);\n                    lefttop = 1 - interpolateX(maxV, tl, bl);\n                    edges.push(isoBandEdgeRT[cval]);\n                } else if (cval === 65) { /* 1001 */\n                    bottomleft = 1 - interpolateX(minV, br, bl);\n                    topleft = 1 - interpolateX(minV, tr, tl);\n                    edges.push(isoBandEdgeBL[cval]);\n                } else if (cval === 105) { /* 1221 */\n                    bottomleft = interpolateX(maxV, bl, br);\n                    topleft = interpolateX(maxV, tl, tr);\n                    edges.push(isoBandEdgeBL[cval]);\n                } else if (cval === 160) { /* 2200 */\n                    righttop = interpolateX(maxV, br, tr);\n                    rightbottom = interpolateX(minV, br, tr);\n                    leftbottom = interpolateX(minV, bl, tl);\n                    lefttop = interpolateX(maxV, bl, tl);\n                    edges.push(isoBandEdgeRT[cval]);\n                    edges.push(isoBandEdgeRB[cval]);\n                } else if (cval === 10) { /* 0022 */\n                    righttop = 1 - interpolateX(minV, tr, br);\n                    rightbottom = 1 - interpolateX(maxV, tr, br);\n                    leftbottom = 1 - interpolateX(maxV, tl, bl);\n                    lefttop = 1 - interpolateX(minV, tl, bl);\n                    edges.push(isoBandEdgeRT[cval]);\n                    edges.push(isoBandEdgeRB[cval]);\n                } else if (cval === 130) { /* 2002 */\n                    bottomright = 1 - interpolateX(minV, br, bl);\n                    bottomleft = 1 - interpolateX(maxV, br, bl);\n                    topleft = 1 - interpolateX(maxV, tr, tl);\n                    topright = 1 - interpolateX(minV, tr, tl);\n                    edges.push(isoBandEdgeBR[cval]);\n                    edges.push(isoBandEdgeBL[cval]);\n                } else if (cval === 40) { /* 0220 */\n                    bottomright = interpolateX(maxV, bl, br);\n                    bottomleft = interpolateX(minV, bl, br);\n                    topleft = interpolateX(minV, tl, tr);\n                    topright = interpolateX(maxV, tl, tr);\n                    edges.push(isoBandEdgeBR[cval]);\n                    edges.push(isoBandEdgeBL[cval]);\n                }\n\n                /* 4th single pentagon cases */\n                else if (cval === 101) { /* 1211 */\n                    rightbottom = interpolateX(maxV, br, tr);\n                    topleft = interpolateX(maxV, tl, tr);\n                    edges.push(isoBandEdgeRB[cval]);\n                } else if (cval === 69) { /* 1011 */\n                    rightbottom = 1 - interpolateX(minV, tr, br);\n                    topleft = 1 - interpolateX(minV, tr, tl);\n                    edges.push(isoBandEdgeRB[cval]);\n                } else if (cval === 149) { /* 2111 */\n                    leftbottom = interpolateX(maxV, bl, tl);\n                    topright = 1 - interpolateX(maxV, tr, tl);\n                    edges.push(isoBandEdgeLB[cval]);\n                } else if (cval === 21) { /* 0111 */\n                    leftbottom = 1 - interpolateX(minV, tl, bl);\n                    topright = interpolateX(minV, tl, tr);\n                    edges.push(isoBandEdgeLB[cval]);\n                } else if (cval === 86) { /* 1112 */\n                    bottomright = 1 - interpolateX(maxV, br, bl);\n                    lefttop = 1 - interpolateX(maxV, tl, bl);\n                    edges.push(isoBandEdgeBR[cval]);\n                } else if (cval === 84) { /* 1110 */\n                    bottomright = interpolateX(minV, bl, br);\n                    lefttop = interpolateX(minV, bl, tl);\n                    edges.push(isoBandEdgeBR[cval]);\n                } else if (cval === 89) { /* 1121 */\n                    righttop = 1 - interpolateX(maxV, tr, br);\n                    bottomleft = interpolateX(maxV, bl, br);\n                    edges.push(isoBandEdgeBL[cval]);\n                } else if (cval === 81) { /* 1101 */\n                    righttop = interpolateX(minV, br, tr);\n                    bottomleft = 1 - interpolateX(minV, br, bl);\n                    edges.push(isoBandEdgeBL[cval]);\n                } else if (cval === 96) { /* 1200 */\n                    righttop = interpolateX(maxV, br, tr);\n                    rightbottom = interpolateX(minV, br, tr);\n                    lefttop = interpolateX(minV, bl, tl);\n                    topleft = interpolateX(maxV, tl, tr);\n                    edges.push(isoBandEdgeRT[cval]);\n                    edges.push(isoBandEdgeRB[cval]);\n                } else if (cval === 74) { /* 1022 */\n                    righttop = 1 - interpolateX(minV, tr, br);\n                    rightbottom = 1 - interpolateX(maxV, tr, br);\n                    lefttop = 1 - interpolateX(maxV, tl, bl);\n                    topleft = 1 - interpolateX(minV, tr, tl);\n                    edges.push(isoBandEdgeRT[cval]);\n                    edges.push(isoBandEdgeRB[cval]);\n                } else if (cval === 24) { /* 0120 */\n                    righttop = 1 - interpolateX(maxV, tr, br);\n                    bottomright = interpolateX(maxV, bl, br);\n                    bottomleft = interpolateX(minV, bl, br);\n                    topright = interpolateX(minV, tl, tr);\n                    edges.push(isoBandEdgeRT[cval]);\n                    edges.push(isoBandEdgeBL[cval]);\n                } else if (cval === 146) { /* 2102 */\n                    righttop = interpolateX(minV, br, tr);\n                    bottomright = 1 - interpolateX(minV, br, bl);\n                    bottomleft = 1 - interpolateX(maxV, br, bl);\n                    topright = 1 - interpolateX(maxV, tr, tl);\n                    edges.push(isoBandEdgeRT[cval]);\n                    edges.push(isoBandEdgeBL[cval]);\n                } else if (cval === 6) { /* 0012 */\n                    rightbottom = 1 - interpolateX(minV, tr, br);\n                    bottomright = 1 - interpolateX(maxV, br, bl);\n                    leftbottom = 1 - interpolateX(maxV, tl, bl);\n                    lefttop = 1 - interpolateX(minV, tl, bl);\n                    edges.push(isoBandEdgeRB[cval]);\n                    edges.push(isoBandEdgeBR[cval]);\n                } else if (cval === 164) { /* 2210 */\n                    rightbottom = interpolateX(maxV, br, tr);\n                    bottomright = interpolateX(minV, bl, br);\n                    leftbottom = interpolateX(minV, bl, tl);\n                    lefttop = interpolateX(maxV, bl, tl);\n                    edges.push(isoBandEdgeRB[cval]);\n                    edges.push(isoBandEdgeBR[cval]);\n                } else if (cval === 129) { /* 2001 */\n                    bottomleft = 1 - interpolateX(minV, br, bl);\n                    leftbottom = interpolateX(maxV, bl, tl);\n                    topleft = 1 - interpolateX(maxV, tr, tl);\n                    topright = 1 - interpolateX(minV, tr, tl);\n                    edges.push(isoBandEdgeBL[cval]);\n                    edges.push(isoBandEdgeLB[cval]);\n                } else if (cval === 41) { /* 0221 */\n                    bottomleft = interpolateX(maxV, bl, br);\n                    leftbottom = 1 - interpolateX(minV, tl, bl);\n                    topleft = interpolateX(minV, tl, tr);\n                    topright = interpolateX(maxV, tl, tr);\n                    edges.push(isoBandEdgeBL[cval]);\n                    edges.push(isoBandEdgeLB[cval]);\n                } else if (cval === 66) { /* 1002 */\n                    bottomright = 1 - interpolateX(minV, br, bl);\n                    bottomleft = 1 - interpolateX(maxV, br, bl);\n                    lefttop = 1 - interpolateX(maxV, tl, bl);\n                    topleft = 1 - interpolateX(minV, tr, tl);\n                    edges.push(isoBandEdgeBR[cval]);\n                    edges.push(isoBandEdgeBL[cval]);\n                } else if (cval === 104) { /* 1220 */\n                    bottomright = interpolateX(maxV, bl, br);\n                    bottomleft = interpolateX(minV, bl, br);\n                    lefttop = interpolateX(minV, bl, tl);\n                    topleft = interpolateX(maxV, tl, tr);\n                    edges.push(isoBandEdgeBL[cval]);\n                    edges.push(isoBandEdgeTL[cval]);\n                } else if (cval === 144) { /* 2100 */\n                    righttop = interpolateX(minV, br, tr);\n                    leftbottom = interpolateX(minV, bl, tl);\n                    lefttop = interpolateX(maxV, bl, tl);\n                    topright = 1 - interpolateX(maxV, tr, tl);\n                    edges.push(isoBandEdgeRT[cval]);\n                    edges.push(isoBandEdgeLT[cval]);\n                } else if (cval === 26) { /* 0122 */\n                    righttop = 1 - interpolateX(maxV, tr, br);\n                    leftbottom = 1 - interpolateX(maxV, tl, bl);\n                    lefttop = 1 - interpolateX(minV, tl, bl);\n                    topright = interpolateX(minV, tl, tr);\n                    edges.push(isoBandEdgeRT[cval]);\n                    edges.push(isoBandEdgeLT[cval]);\n                } else if (cval === 36) { /* 0210 */\n                    rightbottom = interpolateX(maxV, br, tr);\n                    bottomright = interpolateX(minV, bl, br);\n                    topleft = interpolateX(minV, tl, tr);\n                    topright = interpolateX(maxV, tl, tr);\n                    edges.push(isoBandEdgeRB[cval]);\n                    edges.push(isoBandEdgeBR[cval]);\n                } else if (cval === 134) { /* 2012 */\n                    rightbottom = 1 - interpolateX(minV, tr, br);\n                    bottomright = 1 - interpolateX(maxV, br, bl);\n                    topleft = 1 - interpolateX(maxV, tr, tl);\n                    topright = 1 - interpolateX(minV, tr, tl);\n                    edges.push(isoBandEdgeRB[cval]);\n                    edges.push(isoBandEdgeBR[cval]);\n                } else if (cval === 9) { /* 0021 */\n                    righttop = 1 - interpolateX(minV, tr, br);\n                    rightbottom = 1 - interpolateX(maxV, tr, br);\n                    bottomleft = interpolateX(maxV, bl, br);\n                    leftbottom = 1 - interpolateX(minV, tl, bl);\n                    edges.push(isoBandEdgeRT[cval]);\n                    edges.push(isoBandEdgeRB[cval]);\n                } else if (cval === 161) { /* 2201 */\n                    righttop = interpolateX(maxV, br, tr);\n                    rightbottom = interpolateX(minV, br, tr);\n                    bottomleft = 1 - interpolateX(minV, br, bl);\n                    leftbottom = interpolateX(maxV, bl, tl);\n                    edges.push(isoBandEdgeRT[cval]);\n                    edges.push(isoBandEdgeRB[cval]);\n                }\n\n                /* 5th single hexagon cases */\n                else if (cval === 37) { /* 0211 */\n                    rightbottom = interpolateX(maxV, br, tr);\n                    leftbottom = 1 - interpolateX(minV, tl, bl);\n                    topleft = interpolateX(minV, tl, tr);\n                    topright = interpolateX(maxV, tl, tr);\n                    edges.push(isoBandEdgeRB[cval]);\n                    edges.push(isoBandEdgeLB[cval]);\n                } else if (cval === 133) { /* 2011 */\n                    rightbottom = 1 - interpolateX(minV, tr, br);\n                    leftbottom = interpolateX(maxV, bl, tl);\n                    topleft = 1 - interpolateX(maxV, tr, tl);\n                    topright = 1 - interpolateX(minV, tr, tl);\n                    edges.push(isoBandEdgeRB[cval]);\n                    edges.push(isoBandEdgeLB[cval]);\n                } else if (cval === 148) { /* 2110 */\n                    bottomright = interpolateX(minV, bl, br);\n                    leftbottom = interpolateX(minV, bl, tl);\n                    lefttop = interpolateX(maxV, bl, tl);\n                    topright = 1 - interpolateX(maxV, tr, tl);\n                    edges.push(isoBandEdgeBR[cval]);\n                    edges.push(isoBandEdgeLT[cval]);\n                } else if (cval === 22) { /* 0112 */\n                    bottomright = 1 - interpolateX(maxV, br, bl);\n                    leftbottom = 1 - interpolateX(maxV, tl, bl);\n                    lefttop = 1 - interpolateX(minV, tl, bl);\n                    topright = interpolateX(minV, tl, tr);\n                    edges.push(isoBandEdgeBR[cval]);\n                    edges.push(isoBandEdgeLT[cval]);\n                } else if (cval === 82) { /* 1102 */\n                    righttop = interpolateX(minV, br, tr);\n                    bottomright = 1 - interpolateX(minV, br, bl);\n                    bottomleft = 1 - interpolateX(maxV, br, bl);\n                    lefttop = 1 - interpolateX(maxV, tl, bl);\n                    edges.push(isoBandEdgeRT[cval]);\n                    edges.push(isoBandEdgeBL[cval]);\n                } else if (cval === 88) { /* 1120 */\n                    righttop = 1 - interpolateX(maxV, tr, br);\n                    bottomright = interpolateX(maxV, bl, br);\n                    bottomleft = interpolateX(minV, bl, br);\n                    lefttop = interpolateX(minV, bl, tl);\n                    edges.push(isoBandEdgeRT[cval]);\n                    edges.push(isoBandEdgeBL[cval]);\n                } else if (cval === 73) { /* 1021 */\n                    righttop = 1 - interpolateX(minV, tr, br);\n                    rightbottom = 1 - interpolateX(maxV, tr, br);\n                    bottomleft = interpolateX(maxV, bl, br);\n                    topleft = 1 - interpolateX(minV, tr, tl);\n                    edges.push(isoBandEdgeRT[cval]);\n                    edges.push(isoBandEdgeRB[cval]);\n                } else if (cval === 97) { /* 1201 */\n                    righttop = interpolateX(maxV, br, tr);\n                    rightbottom = interpolateX(minV, br, tr);\n                    bottomleft = 1 - interpolateX(minV, br, bl);\n                    topleft = interpolateX(maxV, tl, tr);\n                    edges.push(isoBandEdgeRT[cval]);\n                    edges.push(isoBandEdgeRB[cval]);\n                } else if (cval === 145) { /* 2101 */\n                    righttop = interpolateX(minV, br, tr);\n                    bottomleft = 1 - interpolateX(minV, br, bl);\n                    leftbottom = interpolateX(maxV, bl, tl);\n                    topright = 1 - interpolateX(maxV, tr, tl);\n                    edges.push(isoBandEdgeRT[cval]);\n                    edges.push(isoBandEdgeLB[cval]);\n                } else if (cval === 25) { /* 0121 */\n                    righttop = 1 - interpolateX(maxV, tr, br);\n                    bottomleft = interpolateX(maxV, bl, br);\n                    leftbottom = 1 - interpolateX(minV, tl, bl);\n                    topright = interpolateX(minV, tl, tr);\n                    edges.push(isoBandEdgeRT[cval]);\n                    edges.push(isoBandEdgeLB[cval]);\n                } else if (cval === 70) { /* 1012 */\n                    rightbottom = 1 - interpolateX(minV, tr, br);\n                    bottomright = 1 - interpolateX(maxV, br, bl);\n                    lefttop = 1 - interpolateX(maxV, tl, bl);\n                    topleft = 1 - interpolateX(minV, tr, tl);\n                    edges.push(isoBandEdgeRB[cval]);\n                    edges.push(isoBandEdgeBR[cval]);\n                } else if (cval === 100) { /* 1210 */\n                    rightbottom = interpolateX(maxV, br, tr);\n                    bottomright = interpolateX(minV, bl, br);\n                    lefttop = interpolateX(minV, bl, tl);\n                    topleft = interpolateX(maxV, tl, tr);\n                    edges.push(isoBandEdgeRB[cval]);\n                    edges.push(isoBandEdgeBR[cval]);\n                }\n\n                /* 8-sided cases */\n                else if (cval === 34) { /* 0202 || 2020 with flipped == 0 */\n                    if (flipped === 0) {\n                        righttop = 1 - interpolateX(minV, tr, br);\n                        rightbottom = 1 - interpolateX(maxV, tr, br);\n                        bottomright = interpolateX(maxV, bl, br);\n                        bottomleft = interpolateX(minV, bl, br);\n                        leftbottom = interpolateX(minV, bl, tl);\n                        lefttop = interpolateX(maxV, bl, tl);\n                        topleft = 1 - interpolateX(maxV, tr, tl);\n                        topright = 1 - interpolateX(minV, tr, tl);\n                    } else {\n                        righttop = interpolateX(maxV, br, tr);\n                        rightbottom = interpolateX(minV, br, tr);\n                        bottomright = 1 - interpolateX(minV, br, bl);\n                        bottomleft = 1 - interpolateX(maxV, br, bl);\n                        leftbottom = 1 - interpolateX(maxV, tl, bl);\n                        lefttop = 1 - interpolateX(minV, tl, bl);\n                        topleft = interpolateX(minV, tl, tr);\n                        topright = interpolateX(maxV, tl, tr);\n                    }\n                    edges.push(isoBandEdgeRT[cval]);\n                    edges.push(isoBandEdgeRB[cval]);\n                    edges.push(isoBandEdgeLB[cval]);\n                    edges.push(isoBandEdgeLT[cval]);\n                } else if (cval === 35) { /* flipped == 1 state for 0202, and 2020 with flipped == 4*/\n                    if (flipped === 4) {\n                        righttop = 1 - interpolateX(minV, tr, br);\n                        rightbottom = 1 - interpolateX(maxV, tr, br);\n                        bottomright = interpolateX(maxV, bl, br);\n                        bottomleft = interpolateX(minV, bl, br);\n                        leftbottom = interpolateX(minV, bl, tl);\n                        lefttop = interpolateX(maxV, bl, tl);\n                        topleft = 1 - interpolateX(maxV, tr, tl);\n                        topright = 1 - interpolateX(minV, tr, tl);\n                    } else {\n                        righttop = interpolateX(maxV, br, tr);\n                        rightbottom = interpolateX(minV, br, tr);\n                        bottomright = 1 - interpolateX(minV, br, bl);\n                        bottomleft = 1 - interpolateX(maxV, br, bl);\n                        leftbottom = 1 - interpolateX(maxV, tl, bl);\n                        lefttop = 1 - interpolateX(minV, tl, bl);\n                        topleft = interpolateX(minV, tl, tr);\n                        topright = interpolateX(maxV, tl, tr);\n                    }\n                    edges.push(isoBandEdgeRT[cval]);\n                    edges.push(isoBandEdgeRB[cval]);\n                    edges.push(isoBandEdgeBL[cval]);\n                    edges.push(isoBandEdgeLT[cval]);\n                } else if (cval === 136) { /* 2020 || 0202 with flipped == 0 */\n                    if (flipped === 0) {\n                        righttop = interpolateX(maxV, br, tr);\n                        rightbottom = interpolateX(minV, br, tr);\n                        bottomright = 1 - interpolateX(minV, br, bl);\n                        bottomleft = 1 - interpolateX(maxV, br, bl);\n                        leftbottom = 1 - interpolateX(maxV, tl, bl);\n                        lefttop = 1 - interpolateX(minV, tl, bl);\n                        topleft = interpolateX(minV, tl, tr);\n                        topright = interpolateX(maxV, tl, tr);\n                    } else {\n                        righttop = 1 - interpolateX(minV, tr, br);\n                        rightbottom = 1 - interpolateX(maxV, tr, br);\n                        bottomright = interpolateX(maxV, bl, br);\n                        bottomleft = interpolateX(minV, bl, br);\n                        leftbottom = interpolateX(minV, bl, tl);\n                        lefttop = interpolateX(maxV, bl, tl);\n                        topleft = 1 - interpolateX(maxV, tr, tl);\n                        topright = 1 - interpolateX(minV, tr, tl);\n                    }\n                    edges.push(isoBandEdgeRT[cval]);\n                    edges.push(isoBandEdgeRB[cval]);\n                    edges.push(isoBandEdgeLB[cval]);\n                    edges.push(isoBandEdgeLT[cval]);\n                }\n\n                /* 6-sided polygon cases */\n                else if (cval === 153) { /* 0101 with flipped == 0 || 2121 with flipped == 2 */\n                    if (flipped === 0) {\n                        righttop = interpolateX(minV, br, tr);\n                        bottomleft = 1 - interpolateX(minV, br, bl);\n                        leftbottom = 1 - interpolateX(minV, tl, bl);\n                        topright = interpolateX(minV, tl, tr);\n                    } else {\n                        righttop = 1 - interpolateX(maxV, tr, br);\n                        bottomleft = interpolateX(maxV, bl, br);\n                        leftbottom = interpolateX(maxV, bl, tl);\n                        topright = 1 - interpolateX(maxV, tr, tl);\n                    }\n                    edges.push(isoBandEdgeRT[cval]);\n                    edges.push(isoBandEdgeBL[cval]);\n                } else if (cval === 102) { /* 1010 with flipped == 0 || 1212 with flipped == 2 */\n                    if (flipped === 0) {\n                        rightbottom = 1 - interpolateX(minV, tr, br);\n                        bottomright = interpolateX(minV, bl, br);\n                        lefttop = interpolateX(minV, bl, tl);\n                        topleft = 1 - interpolateX(minV, tr, tl);\n                    } else {\n                        rightbottom = interpolateX(maxV, br, tr);\n                        bottomright = 1 - interpolateX(maxV, br, bl);\n                        lefttop = 1 - interpolateX(maxV, tl, bl);\n                        topleft = interpolateX(maxV, tl, tr);\n                    }\n                    edges.push(isoBandEdgeRB[cval]);\n                    edges.push(isoBandEdgeLT[cval]);\n                } else if (cval === 155) { /* 0101 with flipped == 4 || 2121 with flipped == 1 */\n                    if (flipped === 4) {\n                        righttop = interpolateX(minV, br, tr);\n                        bottomleft = 1 - interpolateX(minV, br, bl);\n                        leftbottom = 1 - interpolateX(minV, tl, bl);\n                        topright = interpolateX(minV, tl, tr);\n                    } else {\n                        righttop = 1 - interpolateX(maxV, tr, br);\n                        bottomleft = interpolateX(maxV, bl, br);\n                        leftbottom = interpolateX(maxV, bl, tl);\n                        topright = 1 - interpolateX(maxV, tr, tl);\n                    }\n                    edges.push(isoBandEdgeRT[cval]);\n                    edges.push(isoBandEdgeLB[cval]);\n                } else if (cval === 103) { /* 1010 with flipped == 4 || 1212 with flipped == 1 */\n                    if (flipped === 4) {\n                        rightbottom = 1 - interpolateX(minV, tr, br);\n                        bottomright = interpolateX(minV, bl, br);\n                        lefttop = interpolateX(minV, bl, tl);\n                        topleft = 1 - interpolateX(minV, tr, tl);\n                    } else {\n                        rightbottom = interpolateX(maxV, br, tr);\n                        bottomright = 1 - interpolateX(maxV, br, bl);\n                        lefttop = 1 - interpolateX(maxV, tl, bl);\n                        topleft = interpolateX(maxV, tl, tr);\n                    }\n                    edges.push(isoBandEdgeRB[cval]);\n                    edges.push(isoBandEdgeBR[cval]);\n                }\n\n                /* 7-sided polygon cases */\n                else if (cval === 152) { /* 2120 with flipped == 2 || 0102 with flipped == 0 */\n                    if (flipped === 0) {\n                        righttop = interpolateX(minV, br, tr);\n                        bottomright = 1 - interpolateX(minV, br, bl);\n                        bottomleft = 1 - interpolateX(maxV, br, bl);\n                        leftbottom = 1 - interpolateX(maxV, tl, bl);\n                        lefttop = 1 - interpolateX(minV, tl, bl);\n                        topright = interpolateX(minV, tl, tr);\n                    } else {\n                        righttop = 1 - interpolateX(maxV, tr, br);\n                        bottomright = interpolateX(maxV, bl, br);\n                        bottomleft = interpolateX(minV, bl, br);\n                        leftbottom = interpolateX(minV, bl, tl);\n                        lefttop = interpolateX(maxV, bl, tl);\n                        topright = 1 - interpolateX(maxV, tr, tl);\n                    }\n                    edges.push(isoBandEdgeRT[cval]);\n                    edges.push(isoBandEdgeBR[cval]);\n                    edges.push(isoBandEdgeBL[cval]);\n                } else if (cval === 156) { /* 2120 with flipped == 1 || 0102 with flipped == 4 */\n                    if (flipped === 4) {\n                        righttop = interpolateX(minV, br, tr);\n                        bottomright = 1 - interpolateX(minV, br, bl);\n                        bottomleft = 1 - interpolateX(maxV, br, bl);\n                        leftbottom = 1 - interpolateX(maxV, tl, bl);\n                        lefttop = 1 - interpolateX(minV, tl, bl);\n                        topright = interpolateX(minV, tl, tr);\n                    } else {\n                        righttop = 1 - interpolateX(maxV, tr, br);\n                        bottomright = interpolateX(maxV, bl, br);\n                        bottomleft = interpolateX(minV, bl, br);\n                        leftbottom = interpolateX(minV, bl, tl);\n                        lefttop = interpolateX(maxV, bl, tl);\n                        topright = 1 - interpolateX(maxV, tr, tl);\n                    }\n                    edges.push(isoBandEdgeRT[cval]);\n                    edges.push(isoBandEdgeBL[cval]);\n                    edges.push(isoBandEdgeLT[cval]);\n                } else if (cval === 137) { /* 2021 with flipped == 2 || 0201 with flipped == 0 */\n                    if (flipped === 0) {\n                        righttop = interpolateX(maxV, br, tr);\n                        rightbottom = interpolateX(minV, br, tr);\n                        bottomleft = 1 - interpolateX(minV, br, bl);\n                        leftbottom = 1 - interpolateX(minV, tl, bl);\n                        topleft = interpolateX(minV, tl, tr);\n                        topright = interpolateX(maxV, tl, tr);\n                    } else {\n                        righttop = 1 - interpolateX(minV, tr, br);\n                        rightbottom = 1 - interpolateX(maxV, tr, br);\n                        bottomleft = interpolateX(maxV, bl, br);\n                        leftbottom = interpolateX(maxV, bl, tl);\n                        topleft = 1 - interpolateX(maxV, tr, tl);\n                        topright = 1 - interpolateX(minV, tr, tl);\n                    }\n                    edges.push(isoBandEdgeRT[cval]);\n                    edges.push(isoBandEdgeRB[cval]);\n                    edges.push(isoBandEdgeBL[cval]);\n                } else if (cval === 139) { /* 2021 with flipped == 1 || 0201 with flipped == 4 */\n                    if (flipped === 4) {\n                        righttop = interpolateX(maxV, br, tr);\n                        rightbottom = interpolateX(minV, br, tr);\n                        bottomleft = 1 - interpolateX(minV, br, bl);\n                        leftbottom = 1 - interpolateX(minV, tl, bl);\n                        topleft = interpolateX(minV, tl, tr);\n                        topright = interpolateX(maxV, tl, tr);\n                    } else {\n                        righttop = 1 - interpolateX(minV, tr, br);\n                        rightbottom = 1 - interpolateX(maxV, tr, br);\n                        bottomleft = interpolateX(maxV, bl, br);\n                        leftbottom = interpolateX(maxV, bl, tl);\n                        topleft = 1 - interpolateX(maxV, tr, tl);\n                        topright = 1 - interpolateX(minV, tr, tl);\n                    }\n                    edges.push(isoBandEdgeRT[cval]);\n                    edges.push(isoBandEdgeRB[cval]);\n                    edges.push(isoBandEdgeLB[cval]);\n                } else if (cval === 98) { /* 1202 with flipped == 2 || 1020 with flipped == 0 */\n                    if (flipped === 0) {\n                        righttop = 1 - interpolateX(minV, tr, br);\n                        rightbottom = 1 - interpolateX(maxV, tr, br);\n                        bottomright = interpolateX(maxV, bl, br);\n                        bottomleft = interpolateX(minV, bl, br);\n                        lefttop = interpolateX(minV, bl, tl);\n                        topleft = 1 - interpolateX(minV, tr, tl);\n                    } else {\n                        righttop = interpolateX(maxV, br, tr);\n                        rightbottom = interpolateX(minV, br, tr);\n                        bottomright = 1 - interpolateX(minV, br, bl);\n                        bottomleft = 1 - interpolateX(maxV, br, bl);\n                        lefttop = 1 - interpolateX(maxV, tl, bl);\n                        topleft = interpolateX(maxV, tl, tr);\n                    }\n                    edges.push(isoBandEdgeRT[cval]);\n                    edges.push(isoBandEdgeRB[cval]);\n                    edges.push(isoBandEdgeLT[cval]);\n                } else if (cval === 99) { /* 1202 with flipped == 1 || 1020 with flipped == 4 */\n                    if (flipped === 4) {\n                        righttop = 1 - interpolateX(minV, tr, br);\n                        rightbottom = 1 - interpolateX(maxV, tr, br);\n                        bottomright = interpolateX(maxV, bl, br);\n                        bottomleft = interpolateX(minV, bl, br);\n                        lefttop = interpolateX(minV, bl, tl);\n                        topleft = 1 - interpolateX(minV, tr, tl);\n                    } else {\n                        righttop = interpolateX(maxV, br, tr);\n                        rightbottom = interpolateX(minV, br, tr);\n                        bottomright = 1 - interpolateX(minV, br, bl);\n                        bottomleft = 1 - interpolateX(maxV, br, bl);\n                        lefttop = 1 - interpolateX(maxV, tl, bl);\n                        topleft = interpolateX(maxV, tl, tr);\n                    }\n                    edges.push(isoBandEdgeRT[cval]);\n                    edges.push(isoBandEdgeRB[cval]);\n                    edges.push(isoBandEdgeBL[cval]);\n                } else if (cval === 38) { /* 0212 with flipped == 2 || 2010 with flipped == 0 */\n                    if (flipped === 0) {\n                        rightbottom = 1 - interpolateX(minV, tr, br);\n                        bottomright = interpolateX(minV, bl, br);\n                        leftbottom = interpolateX(minV, bl, tl);\n                        lefttop = interpolateX(maxV, bl, tl);\n                        topleft = 1 - interpolateX(maxV, tr, tl);\n                        topright = 1 - interpolateX(minV, tr, tl);\n                    } else {\n                        rightbottom = interpolateX(maxV, br, tr);\n                        bottomright = 1 - interpolateX(maxV, br, bl);\n                        leftbottom = 1 - interpolateX(maxV, tl, bl);\n                        lefttop = 1 - interpolateX(minV, tl, bl);\n                        topleft = interpolateX(minV, tl, tr);\n                        topright = interpolateX(maxV, tl, tr);\n                    }\n                    edges.push(isoBandEdgeRB[cval]);\n                    edges.push(isoBandEdgeLB[cval]);\n                    edges.push(isoBandEdgeLT[cval]);\n                } else if (cval === 39) { /* 0212 with flipped == 1 || 2010 with flipped == 4 */\n                    if (flipped === 4) {\n                        rightbottom = 1 - interpolateX(minV, tr, br);\n                        bottomright = interpolateX(minV, bl, br);\n                        leftbottom = interpolateX(minV, bl, tl);\n                        lefttop = interpolateX(maxV, bl, tl);\n                        topleft = 1 - interpolateX(maxV, tr, tl);\n                        topright = 1 - interpolateX(minV, tr, tl);\n                    } else {\n                        rightbottom = interpolateX(maxV, br, tr);\n                        bottomright = 1 - interpolateX(maxV, br, bl);\n                        leftbottom = 1 - interpolateX(maxV, tl, bl);\n                        lefttop = 1 - interpolateX(minV, tl, bl);\n                        topleft = interpolateX(minV, tl, tr);\n                        topright = interpolateX(maxV, tl, tr);\n                    }\n                    edges.push(isoBandEdgeRB[cval]);\n                    edges.push(isoBandEdgeBR[cval]);\n                    edges.push(isoBandEdgeLT[cval]);\n                } else if (cval === 85) {\n                    righttop = 1;\n                    rightbottom = 0;\n                    bottomright = 1;\n                    bottomleft = 0;\n                    leftbottom = 0;\n                    lefttop = 1;\n                    topleft = 0;\n                    topright = 1;\n                }\n\n                if (topleft < 0 || topleft > 1 || topright < 0 || topright > 1 || righttop < 0 || righttop > 1 || bottomright < 0 || bottomright > 1 || leftbottom < 0 || leftbottom > 1 || lefttop < 0 || lefttop > 1) {\n                    console.log('MarchingSquaresJS-isoBands: ' + cval + ' ' + cval_real + ' ' + tl + ',' + tr + ',' + br + ',' + bl + ' ' + flipped + ' ' + topleft + ' ' + topright + ' ' + righttop + ' ' + rightbottom + ' ' + bottomright + ' ' + bottomleft + ' ' + leftbottom + ' ' + lefttop);\n                }\n\n                BandGrid.cells[j][i] = {\n                    cval: cval,\n                    cval_real: cval_real,\n                    flipped: flipped,\n                    topleft: topleft,\n                    topright: topright,\n                    righttop: righttop,\n                    rightbottom: rightbottom,\n                    bottomright: bottomright,\n                    bottomleft: bottomleft,\n                    leftbottom: leftbottom,\n                    lefttop: lefttop,\n                    edges: edges\n                };\n            }\n        }\n    }\n\n    return BandGrid;\n}\n\nfunction BandGrid2AreaPaths(grid) {\n    var areas = [];\n    var rows = grid.rows;\n    var cols = grid.cols;\n    var currentPolygon = [];\n\n    for (var j = 0; j < rows; j++) {\n        for (var i = 0; i < cols; i++) {\n            if ((typeof grid.cells[j][i] !== 'undefined') && (grid.cells[j][i].edges.length > 0)) {\n                /* trace back polygon path starting from this cell */\n\n                var cell = grid.cells[j][i];\n\n                /* get start coordinates */\n\n                var prev  = getStartXY(cell),\n                    next  = null,\n                    p     = i,\n                    q     = j;\n\n                if (prev !== null) {\n                    currentPolygon.push([prev.p[0] + p, prev.p[1] + q]);\n                    //console.log(cell);\n                    //console.log(\"coords: \" + (prev.p[0] + p) + \" \" + (prev.p[1] + q));\n                }\n\n                do {\n                    //console.log(p + \",\" + q);\n                    //console.log(grid.cells[q][p]);\n                    //console.log(grid.cells[q][p].edges);\n                    //console.log(\"from : \" + prev.x + \" \" + prev.y + \" \" + prev.o);\n\n                    next = getExitXY(grid.cells[q][p], prev.x, prev.y, prev.o);\n                    if (next !== null) {\n                        //console.log(\"coords: \" + (next.p[0] + p) + \" \" + (next.p[1] + q));\n                        currentPolygon.push([next.p[0] + p, next.p[1] + q]);\n                        p += next.x;\n                        q += next.y;\n                        prev = next;\n                    } else {\n                        //console.log(\"getExitXY() returned null!\");\n                        break;\n                    }\n                    //console.log(\"to : \" + next.x + \" \" + next.y + \" \" + next.o);\n                    /* special case, where we've reached the grid boundaries */\n                    if ((q < 0) || (q >= rows) || (p < 0) || (p >= cols) || (typeof grid.cells[q][p] === 'undefined')) {\n                        /* to create a closed path, we need to trace our way\n                arround the missing data, until we find an entry\n                point again\n            */\n\n                        /* set back coordinates of current cell */\n                        p -= next.x;\n                        q -= next.y;\n\n                        //console.log(\"reached boundary at \" + p + \" \" + q);\n\n                        var missing = traceOutOfGridPath(grid, p, q, next.x, next.y, next.o);\n                        if (missing !== null) {\n                            missing.path.forEach(function (pp) {\n                                //console.log(\"coords: \" + (pp[0]) + \" \" + (pp[1]));\n                                currentPolygon.push(pp);\n                            });\n                            p = missing.i;\n                            q = missing.j;\n                            prev = missing;\n                        } else {\n                            break;\n                        }\n                        //console.log(grid.cells[q][p]);\n                    }\n                } while ((typeof grid.cells[q][p] !== 'undefined') &&\n                  (grid.cells[q][p].edges.length > 0));\n\n                areas.push(currentPolygon);\n                //console.log(\"next polygon\");\n                //console.log(currentPolygon);\n                currentPolygon = [];\n                if (grid.cells[j][i].edges.length > 0)\n                    i--;\n            }\n        }\n    }\n    return areas;\n}\n\nfunction traceOutOfGridPath(grid, i, j, d_x, d_y, d_o) {\n    var cell = grid.cells[j][i];\n    var cval = cell.cval_real;\n    var p = i + d_x,\n        q = j + d_y;\n    var path = [];\n    var closed = false;\n\n    while (!closed) {\n    //console.log(\"processing cell \" + p + \",\" + q + \" \" + d_x + \" \" + d_y + \" \" + d_o);\n        if ((typeof grid.cells[q] === 'undefined') || (typeof grid.cells[q][p] === 'undefined')) {\n            //console.log(\"which is undefined\");\n            /* we can't move on, so we have to change direction to proceed further */\n\n            /* go back to previous cell */\n            q -= d_y;\n            p -= d_x;\n            cell = grid.cells[q][p];\n            cval = cell.cval_real;\n\n            /* check where we've left defined cells of the grid... */\n            if (d_y === -1) { /* we came from top */\n                if (d_o === 0) {  /* exit left */\n                    if (cval & Node3) { /* lower left node is within range, so we move left */\n                        path.push([p, q]);\n                        d_x = -1;\n                        d_y = 0;\n                        d_o = 0;\n                    } else if (cval & Node2) { /* lower right node is within range, so we move right */\n                        path.push([p + 1, q]);\n                        d_x = 1;\n                        d_y = 0;\n                        d_o = 0;\n                    } else { /* close the path */\n                        path.push([p + cell.bottomright, q]);\n                        d_x = 0;\n                        d_y = 1;\n                        d_o = 1;\n                        closed = true;\n                        break;\n                    }\n                } else if (cval & Node3) {\n                    path.push([p, q]);\n                    d_x = -1;\n                    d_y = 0;\n                    d_o = 0;\n                } else if (cval & Node2) {\n                    path.push([p + cell.bottomright, q]);\n                    d_x = 0;\n                    d_y = 1;\n                    d_o = 1;\n                    closed = true;\n                    break;\n                } else {\n                    path.push([p + cell.bottomleft, q]);\n                    d_x = 0;\n                    d_y = 1;\n                    d_o = 0;\n                    closed = true;\n                    break;\n                }\n            } else if (d_y === 1) { /* we came from bottom */\n                //console.log(\"we came from bottom and hit a non-existing cell \" + (p + d_x) + \",\" + (q + d_y) + \"!\");\n                if (d_o === 0) { /* exit left */\n                    if (cval & Node1) { /* top right node is within range, so we move right */\n                        path.push([p + 1, q + 1]);\n                        d_x = 1;\n                        d_y = 0;\n                        d_o = 1;\n                    } else if (!(cval & Node0)) { /* found entry within same cell */\n                        path.push([p + cell.topright, q + 1]);\n                        d_x = 0;\n                        d_y = -1;\n                        d_o = 1;\n                        closed = true;\n                        //console.log(\"found entry from bottom at \" + p + \",\" + q);\n                        break;\n                    } else {\n                        path.push([p + cell.topleft, q + 1]);\n                        d_x = 0;\n                        d_y = -1;\n                        d_o = 0;\n                        closed = true;\n                        break;\n                    }\n                } else if (cval & Node1) {\n                    path.push([p + 1, q + 1]);\n                    d_x = 1;\n                    d_y = 0;\n                    d_o = 1;\n                } else { /* move right */\n                    path.push([p + 1, q + 1]);\n                    d_x = 1;\n                    d_y = 0;\n                    d_o = 1;\n                    //console.log(\"wtf\");\n                    //break;\n                }\n            } else if (d_x === -1) { /* we came from right */\n                //console.log(\"we came from right and hit a non-existing cell at \" + (p + d_x) + \",\" + (q + d_y) + \"!\");\n                if (d_o === 0) {\n                    //console.log(\"continue at bottom\");\n                    if (cval & Node0) {\n                        path.push([p, q + 1]);\n                        d_x = 0;\n                        d_y = 1;\n                        d_o = 0;\n                        //console.log(\"moving upwards to \" + (p + d_x) + \",\" + (q + d_y) + \"!\");\n                    } else if (!(cval & Node3)) { /* there has to be an entry into the regular grid again! */\n                        //console.log(\"exiting top\");\n                        path.push([p, q + cell.lefttop]);\n                        d_x = 1;\n                        d_y = 0;\n                        d_o = 1;\n                        closed = true;\n                        break;\n                    } else {\n                        //console.log(\"exiting bottom\");\n                        path.push([p, q + cell.leftbottom]);\n                        d_x = 1;\n                        d_y = 0;\n                        d_o = 0;\n                        closed = true;\n                        break;\n                    }\n                } else {\n                    //console.log(\"continue at top\");\n                    if (cval & Node0) {\n                        path.push([p, q + 1]);\n                        d_x = 0;\n                        d_y = 1;\n                        d_o = 0;\n                        //console.log(\"moving upwards to \" + (p + d_x) + \",\" + (q + d_y) + \"!\");\n                    } else { /* */\n                        console.log('MarchingSquaresJS-isoBands: wtf');\n                        break;\n                    }\n                }\n            } else if (d_x === 1) { /* we came from left */\n                //console.log(\"we came from left and hit a non-existing cell \" + (p + d_x) + \",\" + (q + d_y) + \"!\");\n                if (d_o === 0) { /* exit bottom */\n                    if (cval & Node2) {\n                        path.push([p + 1, q]);\n                        d_x = 0;\n                        d_y = -1;\n                        d_o = 1;\n                    } else {\n                        path.push([p + 1, q + cell.rightbottom]);\n                        d_x = -1;\n                        d_y = 0;\n                        d_o = 0;\n                        closed = true;\n                        break;\n                    }\n                } else { /* exit top */\n                    if (cval & Node2) {\n                        path.push([p + 1, q]);\n                        d_x = 0;\n                        d_y = -1;\n                        d_o = 1;\n                    } else if (!(cval & Node1)) {\n                        path.push([p + 1, q + cell.rightbottom]);\n                        d_x = -1;\n                        d_y = 0;\n                        d_o = 0;\n                        closed = true;\n                        break;\n                    } else {\n                        path.push([p + 1, q + cell.righttop]);\n                        d_x = -1;\n                        d_y = 0;\n                        d_o = 1;\n                        break;\n                    }\n                }\n            } else { /* we came from the same cell */\n                console.log('MarchingSquaresJS-isoBands: we came from nowhere!');\n                break;\n            }\n\n        } else { /* try to find an entry into the regular grid again! */\n            cell = grid.cells[q][p];\n            cval = cell.cval_real;\n            //console.log(\"which is defined\");\n\n            if (d_x === -1) {\n                if (d_o === 0) {\n                    /* try to go downwards */\n                    if ((typeof grid.cells[q - 1] !== 'undefined') && (typeof grid.cells[q - 1][p] !== 'undefined')) {\n                        d_x = 0;\n                        d_y = -1;\n                        d_o = 1;\n                    } else if (cval & Node3) { /* proceed searching in x-direction */\n                        //console.log(\"proceeding in x-direction!\");\n                        path.push([p, q]);\n                    } else { /* we must have found an entry into the regular grid */\n                        path.push([p + cell.bottomright, q]);\n                        d_x = 0;\n                        d_y = 1;\n                        d_o = 1;\n                        closed = true;\n                        //console.log(\"found entry from bottom at \" + p + \",\" + q);\n                        break;\n                    }\n                } else if (cval & Node0) { /* proceed searchin in x-direction */\n                    console.log('MarchingSquaresJS-isoBands: proceeding in x-direction!');\n                } else { /* we must have found an entry into the regular grid */\n                    console.log('MarchingSquaresJS-isoBands: found entry from top at ' + p + ',' + q);\n                    break;\n                }\n            } else if (d_x === 1) {\n                if (d_o === 0) {\n                    console.log('MarchingSquaresJS-isoBands: wtf');\n                    break;\n                } else {\n                    /* try to go upwards */\n                    if ((typeof grid.cells[q + 1] !== 'undefined') && (typeof grid.cells[q + 1][p] !== 'undefined')) {\n                        d_x = 0;\n                        d_y = 1;\n                        d_o = 0;\n                    } else if (cval & Node1) {\n                        path.push([p + 1, q + 1]);\n                        d_x = 1;\n                        d_y = 0;\n                        d_o = 1;\n                    } else { /* found an entry point into regular grid! */\n                        path.push([p + cell.topleft, q + 1]);\n                        d_x = 0;\n                        d_y = -1;\n                        d_o = 0;\n                        closed = true;\n                        //console.log(\"found entry from bottom at \" + p + \",\" + q);\n                        break;\n                    }\n                }\n            } else if (d_y === -1) {\n                if (d_o === 1) {\n                    /* try to go right */\n                    if (typeof grid.cells[q][p + 1] !== 'undefined') {\n                        d_x = 1;\n                        d_y = 0;\n                        d_o = 1;\n                    } else if (cval & Node2) {\n                        path.push([p + 1, q]);\n                        d_x = 0;\n                        d_y = -1;\n                        d_o = 1;\n                    } else { /* found entry into regular grid! */\n                        path.push([p + 1, q + cell.righttop]);\n                        d_x = -1;\n                        d_y = 0;\n                        d_o = 1;\n                        closed = true;\n                        //console.log(\"found entry from top at \" + p + \",\" + q);\n                        break;\n                    }\n                } else {\n                    console.log('MarchingSquaresJS-isoBands: wtf');\n                    break;\n                }\n            } else if (d_y === 1) {\n                if (d_o === 0) {\n                    //console.log(\"we came from bottom left and proceed to the left\");\n                    /* try to go left */\n                    if (typeof grid.cells[q][p - 1] !== 'undefined') {\n                        d_x = -1;\n                        d_y = 0;\n                        d_o = 0;\n                    } else if (cval & Node0) {\n                        path.push([p, q + 1]);\n                        d_x = 0;\n                        d_y = 1;\n                        d_o = 0;\n                    } else { /* found an entry point into regular grid! */\n                        path.push([p, q + cell.leftbottom]);\n                        d_x = 1;\n                        d_y = 0;\n                        d_o = 0;\n                        closed = true;\n                        //console.log(\"found entry from bottom at \" + p + \",\" + q);\n                        break;\n                    }\n                } else {\n                    //console.log(\"we came from bottom right and proceed to the right\");\n                    console.log('MarchingSquaresJS-isoBands: wtf');\n                    break;\n                }\n            } else {\n                console.log('MarchingSquaresJS-isoBands: where did we came from???');\n                break;\n            }\n\n        }\n\n        p += d_x;\n        q += d_y;\n        //console.log(\"going on to  \" + p + \",\" + q + \" via \" + d_x + \" \" + d_y + \" \" + d_o);\n\n        if ((p === i) && (q === j)) { /* bail out, once we've closed a circle path */\n            break;\n        }\n\n    }\n\n    //console.log(\"exit with \" + p + \",\" + q + \" \" + d_x + \" \" + d_y + \" \" + d_o);\n    return { path: path, i: p, j: q, x: d_x, y: d_y, o: d_o };\n}\n\nfunction deleteEdge(cell, edgeIdx) {\n    delete cell.edges[edgeIdx];\n    for (var k = edgeIdx + 1; k < cell.edges.length; k++) {\n        cell.edges[k - 1] = cell.edges[k];\n    }\n    cell.edges.pop();\n}\n\nfunction getStartXY(cell) {\n\n    if (cell.edges.length > 0) {\n        var e = cell.edges[cell.edges.length - 1];\n        //console.log(\"starting with edge \" + e);\n        var cval = cell.cval_real;\n        switch (e) {\n        case 0:   if (cval & Node1) { /* node 1 within range */\n            return {p: [1, cell.righttop], x: -1, y: 0, o: 1};\n        } else { /* node 1 below or above threshold */\n            return {p: [cell.topleft, 1], x: 0, y: -1, o: 0};\n        }\n        case 1:   if (cval & Node2) {\n            return {p: [cell.topleft, 1], x: 0, y: -1, o: 0};\n        } else {\n            return {p: [1, cell.rightbottom], x: -1, y: 0, o: 0};\n        }\n        case 2:   if (cval & Node2) {\n            return {p: [cell.bottomright, 0], x: 0, y: 1, o: 1};\n        } else {\n            return {p: [cell.topleft, 1], x: 0, y: -1, o: 0};\n        }\n        case 3:   if (cval & Node3) {\n            return {p: [cell.topleft, 1], x: 0, y: -1, o: 0};\n        } else {\n            return {p: [cell.bottomleft, 0], x: 0, y: 1, o: 0};\n        }\n        case 4:   if (cval & Node1) {\n            return {p: [1, cell.righttop], x: -1, y: 0, o: 1};\n        } else {\n            return {p: [cell.topright, 1], x: 0, y: -1, o: 1};\n        }\n        case 5:   if (cval & Node2) {\n            return {p: [cell.topright, 1], x: 0, y: -1, o: 1};\n        } else {\n            return {p: [1, cell.rightbottom], x: -1, y: 0, o: 0};\n        }\n        case 6:   if (cval & Node2) {\n            return {p: [cell.bottomright, 0], x: 0, y: 1, o: 1};\n        } else {\n            return {p: [cell.topright, 1], x: 0, y: -1, o: 1};\n        }\n        case 7:   if (cval & Node3) {\n            return {p: [cell.topright, 1], x: 0, y: -1, o: 1};\n        } else {\n            return {p: [cell.bottomleft, 0], x: 0, y: 1, o: 0};\n        }\n        case 8:   if (cval & Node2) {\n            return {p: [cell.bottomright, 0], x: 0, y: 1, o: 1};\n        } else {\n            return {p: [1, cell.righttop], x: -1, y: 0, o: 1};\n        }\n        case 9:   if (cval & Node3) {\n            return {p: [1, cell.righttop], x: -1, y: 0, o: 1};\n        } else {\n            return {p: [cell.bottomleft, 0], x: 0, y: 1, o: 0};\n        }\n        case 10:  if (cval & Node3) {\n            return {p: [0, cell.leftbottom], x: 1, y: 0, o: 0};\n        } else {\n            return {p: [1, cell.righttop], x: -1, y: 0, o: 1};\n        }\n        case 11:  if (cval & Node0) {\n            return {p: [1, cell.righttop], x: -1, y: 0, o: 1};\n        } else {\n            return {p: [0, cell.lefttop], x: 1, y: 0, o: 1};\n        }\n        case 12:  if (cval & Node2) {\n            return {p: [cell.bottomright, 0], x: 0, y: 1, o: 1};\n        } else {\n            return {p: [1, cell.rightbottom], x: -1, y: 0, o: 0};\n        }\n        case 13:  if (cval & Node3) {\n            return {p: [1, cell.rightbottom], x: -1, y: 0, o: 0};\n        } else {\n            return {p: [cell.bottomleft, 0], x: 0, y: 1, o: 0};\n        }\n        case 14:  if (cval & Node3) {\n            return {p: [0, cell.leftbottom], x: 1, y: 0, o: 0};\n        } else {\n            return {p: [1, cell.rightbottom], x: -1, y: 0, o: 0};\n        }\n        case 15:  if (cval & Node0) {\n            return {p: [1, cell.rightbottom], x: -1, y: 0, o: 0};\n        } else {\n            return {p: [0, cell.lefttop], x: 1, y: 0, o: 1};\n        }\n        case 16:  if (cval & Node2) {\n            return {p: [cell.bottomright, 0], x: 0, y: 1, o: 1};\n        } else {\n            return {p: [0, cell.leftbottom], x: 1, y: 0, o: 0};\n        }\n        case 17:  if (cval & Node0) {\n            return {p: [cell.bottomright, 0], x: 0, y: 1, o: 1};\n        } else {\n            return {p: [0, cell.lefttop], x: 1, y: 0, o: 1};\n        }\n        case 18:  if (cval & Node3) {\n            return {p: [0, cell.leftbottom], x: 1, y: 0, o: 0};\n        } else {\n            return {p: [cell.bottomleft, 0], x: 0, y: 1, o: 0};\n        }\n        case 19:  if (cval & Node0) {\n            return {p: [cell.bottomleft, 0], x: 0, y: 1, o: 0};\n        } else {\n            return {p: [0, cell.lefttop], x: 1, y: 0, o: 1};\n        }\n        case 20:  if (cval & Node0) {\n            return {p: [cell.topleft, 1], x: 0, y: -1, o: 0};\n        } else {\n            return {p: [0, cell.leftbottom], x: 1, y: 0, o: 0};\n        }\n        case 21:  if (cval & Node1) {\n            return {p: [0, cell.leftbottom], x: 1, y: 0, o: 0};\n        } else {\n            return {p: [cell.topright, 1], x: 0, y: -1, o: 1};\n        }\n        case 22:  if (cval & Node0) {\n            return {p: [cell.topleft, 1], x: 0, y: -1, o: 0};\n        } else {\n            return {p: [0, cell.lefttop], x: 1, y: 0, o: 1};\n        }\n        case 23:  if (cval & Node1) {\n            return {p: [0, cell.lefttop], x: 1, y: 0, o: 1};\n        } else {\n            return {p: [cell.topright, 1], x: 0, y: -1, o: 1};\n        }\n        default:  console.log('MarchingSquaresJS-isoBands: edge index out of range!');\n            console.log(cell);\n            break;\n        }\n    }\n\n    return null;\n}\n\nfunction getExitXY(cell, x, y, o) {\n\n    var e, id_x, d_x, d_y, cval = cell.cval;\n    var d_o;\n\n    switch (x) {\n    case -1:  switch (o) {\n    case 0:   e = isoBandEdgeRB[cval];\n        d_x = isoBandNextXRB[cval];\n        d_y = isoBandNextYRB[cval];\n        d_o = isoBandNextORB[cval];\n        break;\n    default:  e = isoBandEdgeRT[cval];\n        d_x = isoBandNextXRT[cval];\n        d_y = isoBandNextYRT[cval];\n        d_o = isoBandNextORT[cval];\n        break;\n        }\n        break;\n    case 1:   switch (o) {\n    case 0:   e = isoBandEdgeLB[cval];\n        d_x = isoBandNextXLB[cval];\n        d_y = isoBandNextYLB[cval];\n        d_o = isoBandNextOLB[cval];\n        break;\n    default:  e = isoBandEdgeLT[cval];\n        d_x = isoBandNextXLT[cval];\n        d_y = isoBandNextYLT[cval];\n        d_o = isoBandNextOLT[cval];\n        break;\n        }\n        break;\n    default:  switch (y) {\n    case -1:  switch (o) {\n    case 0:   e = isoBandEdgeTL[cval];\n        d_x = isoBandNextXTL[cval];\n        d_y = isoBandNextYTL[cval];\n        d_o = isoBandNextOTL[cval];\n        break;\n    default:  e = isoBandEdgeTR[cval];\n        d_x = isoBandNextXTR[cval];\n        d_y = isoBandNextYTR[cval];\n        d_o = isoBandNextOTR[cval];\n        break;\n        }\n        break;\n    case 1:   switch (o) {\n    case 0:   e = isoBandEdgeBL[cval];\n        d_x = isoBandNextXBL[cval];\n        d_y = isoBandNextYBL[cval];\n        d_o = isoBandNextOBL[cval];\n        break;\n    default:  e = isoBandEdgeBR[cval];\n        d_x = isoBandNextXBR[cval];\n        d_y = isoBandNextYBR[cval];\n        d_o = isoBandNextOBR[cval];\n        break;\n        }\n        break;\n    default:  break;\n        }\n        break;\n    }\n\n    id_x = cell.edges.indexOf(e);\n    if (typeof cell.edges[id_x] !== 'undefined') {\n        deleteEdge(cell, id_x);\n    } else {\n    //console.log(\"wrong edges...\");\n    //console.log(x + \" \" + y + \" \" + o);\n    //console.log(cell);\n        return null;\n    }\n\n    cval = cell.cval_real;\n\n    switch (e) {\n    case 0:   if (cval & Node1) { /* node 1 within range */\n        x = cell.topleft;\n        y = 1;\n    } else { /* node 1 below or above threshold */\n        x = 1;\n        y = cell.righttop;\n    }\n        break;\n    case 1:   if (cval & Node2) {\n        x = 1;\n        y = cell.rightbottom;\n    } else {\n        x = cell.topleft;\n        y = 1;\n    }\n        break;\n    case 2:   if (cval & Node2) {\n        x = cell.topleft;\n        y = 1;\n    } else {\n        x = cell.bottomright;\n        y = 0;\n    }\n        break;\n    case 3:   if (cval & Node3) {\n        x = cell.bottomleft;\n        y = 0;\n    } else {\n        x = cell.topleft;\n        y = 1;\n    }\n        break;\n    case 4:   if (cval & Node1) {\n        x = cell.topright;\n        y = 1;\n    } else {\n        x = 1;\n        y = cell.righttop;\n    }\n        break;\n    case 5:   if (cval & Node2) {\n        x = 1;\n        y = cell.rightbottom;\n    } else {\n        x = cell.topright;\n        y = 1;\n    }\n        break;\n    case 6:   if (cval & Node2) {\n        x = cell.topright;\n        y = 1;\n    } else {\n        x = cell.bottomright;\n        y = 0;\n    }\n        break;\n    case 7:   if (cval & Node3) {\n        x = cell.bottomleft;\n        y = 0;\n    } else {\n        x = cell.topright;\n        y = 1;\n    }\n        break;\n    case 8:   if (cval & Node2) {\n        x = 1;\n        y = cell.righttop;\n    } else {\n        x = cell.bottomright;\n        y = 0;\n    }\n        break;\n    case 9:   if (cval & Node3) {\n        x = cell.bottomleft;\n        y = 0;\n    } else {\n        x = 1;\n        y = cell.righttop;\n    }\n        break;\n    case 10:  if (cval & Node3) {\n        x = 1;\n        y = cell.righttop;\n    } else {\n        x = 0;\n        y = cell.leftbottom;\n    }\n        break;\n    case 11:  if (cval & Node0) {\n        x = 0;\n        y = cell.lefttop;\n    } else {\n        x = 1;\n        y = cell.righttop;\n    }\n        break;\n    case 12:  if (cval & Node2) {\n        x = 1;\n        y = cell.rightbottom;\n    } else {\n        x = cell.bottomright;\n        y = 0;\n    }\n        break;\n    case 13:  if (cval & Node3) {\n        x = cell.bottomleft;\n        y = 0;\n    } else {\n        x = 1;\n        y = cell.rightbottom;\n    }\n        break;\n    case 14:  if (cval & Node3) {\n        x = 1;\n        y = cell.rightbottom;\n    } else {\n        x = 0;\n        y = cell.leftbottom;\n    }\n        break;\n    case 15:  if (cval & Node0) {\n        x = 0;\n        y = cell.lefttop;\n    } else {\n        x = 1;\n        y = cell.rightbottom;\n    }\n        break;\n    case 16:  if (cval & Node2) {\n        x = 0;\n        y = cell.leftbottom;\n    } else {\n        x = cell.bottomright;\n        y = 0;\n    }\n        break;\n    case 17:  if (cval & Node0) {\n        x = 0;\n        y = cell.lefttop;\n    } else {\n        x = cell.bottomright;\n        y = 0;\n    }\n        break;\n    case 18:  if (cval & Node3) {\n        x = cell.bottomleft;\n        y = 0;\n    } else {\n        x = 0;\n        y = cell.leftbottom;\n    }\n        break;\n    case 19:  if (cval & Node0) {\n        x = 0;\n        y = cell.lefttop;\n    } else {\n        x = cell.bottomleft;\n        y = 0;\n    }\n        break;\n    case 20:  if (cval & Node0) {\n        x = 0;\n        y = cell.leftbottom;\n    } else {\n        x = cell.topleft;\n        y = 1;\n    }\n        break;\n    case 21:  if (cval & Node1) {\n        x = cell.topright;\n        y = 1;\n    } else {\n        x = 0;\n        y = cell.leftbottom;\n    }\n        break;\n    case 22:  if (cval & Node0) {\n        x = 0;\n        y = cell.lefttop;\n    } else {\n        x = cell.topleft;\n        y = 1;\n    }\n        break;\n    case 23:  if (cval & Node1) {\n        x = cell.topright;\n        y = 1;\n    } else {\n        x = 0;\n        y = cell.lefttop;\n    }\n        break;\n    default:  console.log('MarchingSquaresJS-isoBands: edge index out of range!');\n        console.log(cell);\n        return null;\n    }\n\n    if ((typeof x === 'undefined') || (typeof y === 'undefined') ||\n      (typeof d_x === 'undefined') || (typeof d_y === 'undefined') ||\n      (typeof d_o === 'undefined')) {\n        console.log('MarchingSquaresJS-isoBands: undefined value!');\n        console.log(cell);\n        console.log(x + ' ' + y + ' ' + d_x + ' ' + d_y + ' ' + d_o);\n    }\n    return {p: [x, y], x: d_x, y: d_y, o: d_o};\n}\n\nfunction BandGrid2Areas(grid) {\n    var areas = [];\n    var area_idx = 0;\n\n    grid.cells.forEach(function (g, j) {\n        g.forEach(function (gg, i) {\n            if (typeof gg !== 'undefined') {\n                var a = polygon_table[gg.cval](gg);\n                if ((typeof a === 'object') && isArray(a)) {\n                    if ((typeof a[0] === 'object') && isArray(a[0])) {\n                        if ((typeof a[0][0] === 'object') && isArray(a[0][0])) {\n                            a.forEach(function (aa) {\n                                aa.forEach(function (aaa) {\n                                    aaa[0] += i;\n                                    aaa[1] += j;\n                                });\n                                areas[area_idx++] = aa;\n                            });\n                        } else {\n                            a.forEach(function (aa) {\n                                aa[0] += i;\n                                aa[1] += j;\n                            });\n                            areas[area_idx++] = a;\n                        }\n                    } else {\n                        console.log('MarchingSquaresJS-isoBands: bandcell polygon with malformed coordinates');\n                    }\n                } else {\n                    console.log('MarchingSquaresJS-isoBands: bandcell polygon with null coordinates');\n                }\n            }\n        });\n    });\n\n    return areas;\n}\n\n/**\n * Takes a grid {@link FeatureCollection} of {@link Point} features with z-values and an array of\n * value breaks and generates filled contour isobands.\n *\n * @name isobands\n * @param {FeatureCollection<Point>} pointGrid input points\n * @param {Array<number>} breaks where to draw contours\n * @param {Object} [options={}] options on output\n * @param {string} [options.zProperty='elevation'] the property name in `points` from which z-values will be pulled\n * @param {Object} [options.commonProperties={}] GeoJSON properties passed to ALL isobands\n * @param {Array<Object>} [options.breaksProperties=[]] GeoJSON properties passed, in order, to the correspondent isoband (order defined by breaks)\n * @returns {FeatureCollection<MultiPolygon>} a FeatureCollection of {@link MultiPolygon} features representing isobands\n */\nfunction isobands(pointGrid, breaks, options) {\n    // Optional parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var zProperty = options.zProperty || 'elevation';\n    var commonProperties = options.commonProperties || {};\n    var breaksProperties = options.breaksProperties || [];\n\n    // Validation\n    collectionOf(pointGrid, 'Point', 'Input must contain Points');\n    if (!breaks) throw new Error('breaks is required');\n    if (!Array.isArray(breaks)) throw new Error('breaks is not an Array');\n    if (!isObject(commonProperties)) throw new Error('commonProperties is not an Object');\n    if (!Array.isArray(breaksProperties)) throw new Error('breaksProperties is not an Array');\n\n    // Isoband methods\n    var matrix = gridToMatrix(pointGrid, {zProperty: zProperty, flip: true});\n    var contours = createContourLines(matrix, breaks, zProperty);\n    contours = rescaleContours(contours, matrix, pointGrid);\n\n    var multipolygons = contours.map(function (contour, index) {\n        if (breaksProperties[index] && !isObject(breaksProperties[index])) {\n            throw new Error('Each mappedProperty is required to be an Object');\n        }\n        // collect all properties\n        var contourProperties = Object.assign(\n            {},\n            commonProperties,\n            breaksProperties[index]\n        );\n        contourProperties[zProperty] = contour[zProperty];\n        var multiP = multiPolygon(contour.groupedRings, contourProperties);\n        return multiP;\n    });\n\n    return featureCollection(multipolygons);\n}\n\n/**\n * Creates the contours lines (featuresCollection of polygon features) from the 2D data grid\n *\n * Marchingsquares process the grid data as a 3D representation of a function on a 2D plane, therefore it\n * assumes the points (x-y coordinates) are one 'unit' distance. The result of the IsoBands function needs to be\n * rescaled, with turfjs, to the original area and proportions on the map\n *\n * @private\n * @param {Array<Array<number>>} matrix Grid Data\n * @param {Array<number>} breaks Breaks\n * @param {string} [property='elevation'] Property\n * @returns {Array<any>} contours\n */\nfunction createContourLines(matrix, breaks, property) {\n\n    var contours = [];\n    for (var i = 1; i < breaks.length; i++) {\n        var lowerBand = +breaks[i - 1]; // make sure the breaks value is a number\n        var upperBand = +breaks[i];\n\n        var isobandsCoords = isoBands(matrix, lowerBand, upperBand - lowerBand);\n        // as per GeoJson rules for creating a Polygon, make sure the first element\n        // in the array of LinearRings represents the exterior ring (i.e. biggest area),\n        // and any subsequent elements represent interior rings (i.e. smaller area);\n        // this avoids rendering issues of the MultiPolygons on the map\n        var nestedRings = orderByArea(isobandsCoords);\n        var groupedRings = groupNestedRings(nestedRings);\n        var obj = {};\n        obj['groupedRings'] = groupedRings;\n        obj[property] = lowerBand + '-' + upperBand;\n        contours.push(obj);\n    }\n    return contours;\n}\n\n/**\n * Transform isobands of 2D grid to polygons for the map\n *\n * @private\n * @param {Array<any>} contours Contours\n * @param {Array<Array<number>>} matrix Grid Data\n * @param {Object} points Points by Latitude\n * @returns {Array<any>} contours\n */\nfunction rescaleContours(contours, matrix, points) {\n\n    // get dimensions (on the map) of the original grid\n    var gridBbox = bbox(points); // [ minX, minY, maxX, maxY ]\n    var originalWidth = gridBbox[2] - gridBbox[0];\n    var originalHeigth = gridBbox[3] - gridBbox[1];\n\n    // get origin, which is the first point of the last row on the rectangular data on the map\n    var x0 = gridBbox[0];\n    var y0 = gridBbox[1];\n    // get number of cells per side\n    var matrixWidth = matrix[0].length - 1;\n    var matrixHeight = matrix.length - 1;\n    // calculate the scaling factor between matrix and rectangular grid on the map\n    var scaleX = originalWidth / matrixWidth;\n    var scaleY = originalHeigth / matrixHeight;\n\n    var resize = function (point) {\n        point[0] = point[0] * scaleX + x0;\n        point[1] = point[1] * scaleY + y0;\n    };\n\n    // resize and shift each point/line of the isobands\n    contours.forEach(function (contour) {\n        contour.groupedRings.forEach(function (lineRingSet) {\n            lineRingSet.forEach(function (lineRing) {\n                lineRing.forEach(resize);\n            });\n        });\n    });\n    return contours;\n}\n\n\n/*  utility functions */\n\n\n/**\n * Returns an array of coordinates (of LinearRings) in descending order by area\n *\n * @private\n * @param {Array<LineString>} ringsCoords array of closed LineString\n * @returns {Array} array of the input LineString ordered by area\n */\nfunction orderByArea(ringsCoords) {\n    var ringsWithArea = [];\n    var areas = [];\n    ringsCoords.forEach(function (coords) {\n        // var poly = polygon([points]);\n        var ringArea = area(polygon([coords]));\n        // create an array of areas value\n        areas.push(ringArea);\n        // associate each lineRing with its area\n        ringsWithArea.push({ring: coords, area: ringArea});\n    });\n    areas.sort(function (a, b) { // bigger --> smaller\n        return b - a;\n    });\n    // create a new array of linearRings coordinates ordered by their area\n    var orderedByArea = [];\n    areas.forEach(function (area$$1) {\n        for (var lr = 0; lr < ringsWithArea.length; lr++) {\n            if (ringsWithArea[lr].area === area$$1) {\n                orderedByArea.push(ringsWithArea[lr].ring);\n                ringsWithArea.splice(lr, 1);\n                break;\n            }\n        }\n    });\n    return orderedByArea;\n}\n\n/**\n * Returns an array of arrays of coordinates, each representing\n * a set of (coordinates of) nested LinearRings,\n * i.e. the first ring contains all the others\n *\n * @private\n * @param {Array} orderedLinearRings array of coordinates (of LinearRings) in descending order by area\n * @returns {Array<Array>} Array of coordinates of nested LinearRings\n */\nfunction groupNestedRings(orderedLinearRings) {\n    // create a list of the (coordinates of) LinearRings\n    var lrList = orderedLinearRings.map(function (lr) {\n        return {lrCoordinates: lr, grouped: false};\n    });\n    var groupedLinearRingsCoords = [];\n    while (!allGrouped(lrList)) {\n        for (var i = 0; i < lrList.length; i++) {\n            if (!lrList[i].grouped) {\n                // create new group starting with the larger not already grouped ring\n                var group = [];\n                group.push(lrList[i].lrCoordinates);\n                lrList[i].grouped = true;\n                var outerMostPoly = polygon([lrList[i].lrCoordinates]);\n                // group all the rings contained by the outermost ring\n                for (var j = i + 1; j < lrList.length; j++) {\n                    if (!lrList[j].grouped) {\n                        var lrPoly = polygon([lrList[j].lrCoordinates]);\n                        if (isInside(lrPoly, outerMostPoly)) {\n                            group.push(lrList[j].lrCoordinates);\n                            lrList[j].grouped = true;\n                        }\n                    }\n                }\n                // insert the new group\n                groupedLinearRingsCoords.push(group);\n            }\n        }\n    }\n    return groupedLinearRingsCoords;\n}\n\n/**\n * @private\n * @param {Polygon} testPolygon polygon of interest\n * @param {Polygon} targetPolygon polygon you want to compare with\n * @returns {boolean} true if test-Polygon is inside target-Polygon\n */\nfunction isInside(testPolygon, targetPolygon) {\n    var points = explode(testPolygon);\n    for (var i = 0; i < points.features.length; i++) {\n        if (!booleanPointInPolygon(points.features[i], targetPolygon)) {\n            return false;\n        }\n    }\n    return true;\n}\n\n/**\n * @private\n * @param {Array<Object>} list list of objects which might contain the 'group' attribute\n * @returns {boolean} true if all the objects in the list are marked as grouped\n */\nfunction allGrouped(list) {\n    for (var i = 0; i < list.length; i++) {\n        if (list[i].grouped === false) {\n            return false;\n        }\n    }\n    return true;\n}\n\nexport default isobands;\n","import bbox from '@turf/bbox';\nimport { coordEach, featureEach } from '@turf/meta';\nimport { collectionOf, getCoords } from '@turf/invariant';\nimport { featureCollection, isObject, multiLineString } from '@turf/helpers';\n\n/**\n * @license GNU Affero General Public License.\n * Copyright (c) 2015, 2015 Ronny Lorenz <ronny@tbi.univie.ac.at>\n * v. 1.2.0\n * https://github.com/RaumZeit/MarchingSquares.js\n */\n\n/**\n * Compute the isocontour(s) of a scalar 2D field given\n * a certain threshold by applying the Marching Squares\n * Algorithm. The function returns a list of path coordinates\n */\nvar defaultSettings = {\n    successCallback: null,\n    verbose: false\n};\n\nvar settings = {};\n\nfunction isoContours(data, threshold, options) {\n    /* process options */\n    options = options ? options : {};\n\n    var optionKeys = Object.keys(defaultSettings);\n\n    for (var i = 0; i < optionKeys.length; i++) {\n        var key = optionKeys[i];\n        var val = options[key];\n        val = ((typeof val !== 'undefined') && (val !== null)) ? val : defaultSettings[key];\n\n        settings[key] = val;\n    }\n\n    if (settings.verbose)\n        console.log('MarchingSquaresJS-isoContours: computing isocontour for ' + threshold);\n\n    var ret = contourGrid2Paths(computeContourGrid(data, threshold));\n\n    if (typeof settings.successCallback === 'function')\n        settings.successCallback(ret);\n\n    return ret;\n}\n\n/*\n  Thats all for the public interface, below follows the actual\n  implementation\n*/\n\n/*\n################################\nIsocontour implementation below\n################################\n*/\n\n/* assume that x1 == 1 &&  x0 == 0 */\nfunction interpolateX(y, y0, y1) {\n    return (y - y0) / (y1 - y0);\n}\n\n/* compute the isocontour 4-bit grid */\nfunction computeContourGrid(data, threshold) {\n    var rows = data.length - 1;\n    var cols = data[0].length - 1;\n    var ContourGrid = { rows: rows, cols: cols, cells: [] };\n\n    for (var j = 0; j < rows; ++j) {\n        ContourGrid.cells[j] = [];\n        for (var i = 0; i < cols; ++i) {\n            /* compose the 4-bit corner representation */\n            var cval = 0;\n\n            var tl = data[j + 1][i];\n            var tr = data[j + 1][i + 1];\n            var br = data[j][i + 1];\n            var bl = data[j][i];\n\n            if (isNaN(tl) || isNaN(tr) || isNaN(br) || isNaN(bl)) {\n                continue;\n            }\n            cval |= ((tl >= threshold) ? 8 : 0);\n            cval |= ((tr >= threshold) ? 4 : 0);\n            cval |= ((br >= threshold) ? 2 : 0);\n            cval |= ((bl >= threshold) ? 1 : 0);\n\n            /* resolve ambiguity for cval == 5 || 10 via averaging */\n            var flipped = false;\n            if (cval === 5 || cval === 10) {\n                var average = (tl + tr + br + bl) / 4;\n                if (cval === 5 && (average < threshold)) {\n                    cval = 10;\n                    flipped = true;\n                } else if (cval === 10 && (average < threshold)) {\n                    cval = 5;\n                    flipped = true;\n                }\n            }\n\n            /* add cell to ContourGrid if it contains edges */\n            if (cval !== 0 && cval !== 15) {\n                var top, bottom, left, right;\n                top = bottom = left = right = 0.5;\n                /* interpolate edges of cell */\n                if (cval === 1) {\n                    left    = 1 - interpolateX(threshold, tl, bl);\n                    bottom  = 1 - interpolateX(threshold, br, bl);\n                } else if (cval === 2) {\n                    bottom  = interpolateX(threshold, bl, br);\n                    right   = 1 - interpolateX(threshold, tr, br);\n                } else if (cval === 3) {\n                    left    = 1 - interpolateX(threshold, tl, bl);\n                    right   = 1 - interpolateX(threshold, tr, br);\n                } else if (cval === 4) {\n                    top     = interpolateX(threshold, tl, tr);\n                    right   = interpolateX(threshold, br, tr);\n                } else if (cval === 5) {\n                    top     = interpolateX(threshold, tl, tr);\n                    right   = interpolateX(threshold, br, tr);\n                    bottom  = 1 - interpolateX(threshold, br, bl);\n                    left    = 1 - interpolateX(threshold, tl, bl);\n                } else if (cval === 6) {\n                    bottom  = interpolateX(threshold, bl, br);\n                    top     = interpolateX(threshold, tl, tr);\n                } else if (cval === 7) {\n                    left    = 1 - interpolateX(threshold, tl, bl);\n                    top     = interpolateX(threshold, tl, tr);\n                } else if (cval === 8) {\n                    left    = interpolateX(threshold, bl, tl);\n                    top     = 1 - interpolateX(threshold, tr, tl);\n                } else if (cval === 9) {\n                    bottom  = 1 - interpolateX(threshold, br, bl);\n                    top     = 1 - interpolateX(threshold, tr, tl);\n                } else if (cval === 10) {\n                    top     = 1 - interpolateX(threshold, tr, tl);\n                    right   = 1 - interpolateX(threshold, tr, br);\n                    bottom  = interpolateX(threshold, bl, br);\n                    left    = interpolateX(threshold, bl, tl);\n                } else if (cval === 11) {\n                    top     = 1 - interpolateX(threshold, tr, tl);\n                    right   = 1 - interpolateX(threshold, tr, br);\n                } else if (cval === 12) {\n                    left    = interpolateX(threshold, bl, tl);\n                    right   = interpolateX(threshold, br, tr);\n                } else if (cval === 13) {\n                    bottom  = 1 - interpolateX(threshold, br, bl);\n                    right   = interpolateX(threshold, br, tr);\n                } else if (cval === 14) {\n                    left    = interpolateX(threshold, bl, tl);\n                    bottom  = interpolateX(threshold, bl, br);\n                } else {\n                    console.log('MarchingSquaresJS-isoContours: Illegal cval detected: ' + cval);\n                }\n                ContourGrid.cells[j][i] = {\n                    cval: cval,\n                    flipped: flipped,\n                    top: top,\n                    right: right,\n                    bottom: bottom,\n                    left: left\n                };\n            }\n\n        }\n    }\n\n    return ContourGrid;\n}\n\nfunction isSaddle(cell) {\n    return cell.cval === 5 || cell.cval === 10;\n}\n\nfunction isTrivial(cell) {\n    return cell.cval === 0 || cell.cval === 15;\n}\n\nfunction clearCell(cell) {\n    if ((!isTrivial(cell)) && (cell.cval !== 5) && (cell.cval !== 10)) {\n        cell.cval = 15;\n    }\n}\n\nfunction getXY(cell, edge) {\n    if (edge === 'top') {\n        return [cell.top, 1.0];\n    } else if (edge === 'bottom') {\n        return [cell.bottom, 0.0];\n    } else if (edge === 'right') {\n        return [1.0, cell.right];\n    } else if (edge === 'left') {\n        return [0.0, cell.left];\n    }\n}\n\nfunction contourGrid2Paths(grid) {\n    var paths = [];\n    var path_idx = 0;\n    var rows = grid.rows;\n    var cols = grid.cols;\n    var epsilon = 1e-7;\n\n    grid.cells.forEach(function (g, j) {\n        g.forEach(function (gg, i) {\n            if ((typeof gg !== 'undefined') && (!isSaddle(gg)) && (!isTrivial(gg))) {\n                var p = tracePath(grid.cells, j, i);\n                var merged = false;\n                /* we may try to merge paths at this point */\n                if (p.info === 'mergeable') {\n                    /*\n            search backwards through the path array to find an entry\n            that starts with where the current path ends...\n          */\n                    var x = p.path[p.path.length - 1][0],\n                        y = p.path[p.path.length - 1][1];\n\n                    for (var k = path_idx - 1; k >= 0; k--) {\n                        if ((Math.abs(paths[k][0][0] - x) <= epsilon) && (Math.abs(paths[k][0][1] - y) <= epsilon)) {\n                            for (var l = p.path.length - 2; l >= 0; --l) {\n                                paths[k].unshift(p.path[l]);\n                            }\n                            merged = true;\n                            break;\n                        }\n                    }\n                }\n                if (!merged)\n                    paths[path_idx++] = p.path;\n            }\n        });\n    });\n\n    return paths;\n}\n\n/*\n  construct consecutive line segments from starting cell by\n  walking arround the enclosed area clock-wise\n  */\nfunction tracePath(grid, j, i) {\n    var maxj = grid.length;\n    var p = [];\n    var dxContour = [0, 0, 1, 1, 0, 0, 0, 0, -1, 0, 1, 1, -1, 0, -1, 0];\n    var dyContour = [0, -1, 0, 0, 1, 1, 1, 1, 0, -1, 0, 0, 0, -1, 0, 0];\n    var dx, dy;\n    var startEdge = ['none', 'left', 'bottom', 'left', 'right', 'none', 'bottom', 'left', 'top', 'top', 'none', 'top', 'right', 'right', 'bottom', 'none'];\n    var nextEdge  = ['none', 'bottom', 'right', 'right', 'top', 'top', 'top', 'top', 'left', 'bottom', 'right', 'right', 'left', 'bottom', 'left', 'none'];\n    var edge;\n\n    var startCell   = grid[j][i];\n    var currentCell = grid[j][i];\n\n    var cval = currentCell.cval;\n    var edge = startEdge[cval];\n\n    var pt = getXY(currentCell, edge);\n\n    /* push initial segment */\n    p.push([i + pt[0], j + pt[1]]);\n    edge = nextEdge[cval];\n    pt = getXY(currentCell, edge);\n    p.push([i + pt[0], j + pt[1]]);\n    clearCell(currentCell);\n\n    /* now walk arround the enclosed area in clockwise-direction */\n    var k = i + dxContour[cval];\n    var l = j + dyContour[cval];\n    var prev_cval = cval;\n\n    while ((k >= 0) && (l >= 0) && (l < maxj) && ((k != i) || (l != j))) {\n        currentCell = grid[l][k];\n        if (typeof currentCell === 'undefined') { /* path ends here */\n            //console.log(k + \" \" + l + \" is undefined, stopping path!\");\n            break;\n        }\n        cval = currentCell.cval;\n        if ((cval === 0) || (cval === 15)) {\n            return { path: p, info: 'mergeable' };\n        }\n        edge  = nextEdge[cval];\n        dx    = dxContour[cval];\n        dy    = dyContour[cval];\n        if ((cval === 5) || (cval === 10)) {\n            /* select upper or lower band, depending on previous cells cval */\n            if (cval === 5) {\n                if (currentCell.flipped) { /* this is actually a flipped case 10 */\n                    if (dyContour[prev_cval] === -1) {\n                        edge  = 'left';\n                        dx    = -1;\n                        dy    = 0;\n                    } else {\n                        edge  = 'right';\n                        dx    = 1;\n                        dy    = 0;\n                    }\n                } else { /* real case 5 */\n                    if (dxContour[prev_cval] === -1) {\n                        edge  = 'bottom';\n                        dx    = 0;\n                        dy    = -1;\n                    }\n                }\n            } else if (cval === 10) {\n                if (currentCell.flipped) { /* this is actually a flipped case 5 */\n                    if (dxContour[prev_cval] === -1) {\n                        edge  = 'top';\n                        dx    = 0;\n                        dy    = 1;\n                    } else {\n                        edge  = 'bottom';\n                        dx    = 0;\n                        dy    = -1;\n                    }\n                } else {  /* real case 10 */\n                    if (dyContour[prev_cval] === 1) {\n                        edge  = 'left';\n                        dx    = -1;\n                        dy    = 0;\n                    }\n                }\n            }\n        }\n        pt = getXY(currentCell, edge);\n        p.push([k + pt[0], l + pt[1]]);\n        clearCell(currentCell);\n        k += dx;\n        l += dy;\n        prev_cval = cval;\n    }\n\n    return { path: p, info: 'closed' };\n}\n\n/**\n * Takes a {@link Point} grid and returns a correspondent matrix {Array<Array<number>>}\n * of the 'property' values\n *\n * @name gridToMatrix\n * @param {FeatureCollection<Point>} grid of points\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.zProperty='elevation'] the property name in `points` from which z-values will be pulled\n * @param {boolean} [options.flip=false] returns the matrix upside-down\n * @param {boolean} [options.flags=false] flags, adding a `matrixPosition` array field ([row, column]) to its properties,\n * the grid points with coordinates on the matrix\n * @returns {Array<Array<number>>} matrix of property values\n * @example\n *   var extent = [-70.823364, -33.553984, -70.473175, -33.302986];\n *   var cellSize = 3;\n *   var grid = turf.pointGrid(extent, cellSize);\n *   // add a random property to each point between 0 and 60\n *   for (var i = 0; i < grid.features.length; i++) {\n *     grid.features[i].properties.elevation = (Math.random() * 60);\n *   }\n *   gridToMatrix(grid);\n *   //= [\n *     [ 1, 13, 10,  9, 10, 13, 18],\n *     [34,  8,  5,  4,  5,  8, 13],\n *     [10,  5,  2,  1,  2,  5,  4],\n *     [ 0,  4, 56, 19,  1,  4,  9],\n *     [10,  5,  2,  1,  2,  5, 10],\n *     [57,  8,  5,  4,  5,  0, 57],\n *     [ 3, 13, 10,  9,  5, 13, 18],\n *     [18, 13, 10,  9, 78, 13, 18]\n *   ]\n */\nfunction gridToMatrix(grid, options) {\n    // Optional parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var zProperty = options.zProperty || 'elevation';\n    var flip = options.flip;\n    var flags = options.flags;\n\n    // validation\n    collectionOf(grid, 'Point', 'input must contain Points');\n\n    var pointsMatrix = sortPointsByLatLng(grid, flip);\n\n    var matrix = [];\n    // create property matrix from sorted points\n    // looping order matters here\n    for (var r = 0; r < pointsMatrix.length; r++) {\n        var pointRow = pointsMatrix[r];\n        var row = [];\n        for (var c = 0; c < pointRow.length; c++) {\n            var point = pointRow[c];\n            // Check if zProperty exist\n            if (point.properties[zProperty]) row.push(point.properties[zProperty]);\n            else row.push(0);\n            // add flags\n            if (flags === true) point.properties.matrixPosition = [r, c];\n        }\n        matrix.push(row);\n    }\n\n    return matrix;\n}\n\n/**\n * Sorts points by latitude and longitude, creating a 2-dimensional array of points\n *\n * @private\n * @param {FeatureCollection<Point>} points GeoJSON Point features\n * @param {boolean} [flip=false] returns the matrix upside-down\n * @returns {Array<Array<Point>>} points ordered by latitude and longitude\n */\nfunction sortPointsByLatLng(points, flip) {\n    var pointsByLatitude = {};\n\n    // divide points by rows with the same latitude\n    featureEach(points, function (point) {\n        var lat = getCoords(point)[1];\n        if (!pointsByLatitude[lat]) pointsByLatitude[lat] = [];\n        pointsByLatitude[lat].push(point);\n    });\n\n    // sort points (with the same latitude) by longitude\n    var orderedRowsByLatitude = Object.keys(pointsByLatitude).map(function (lat) {\n        var row = pointsByLatitude[lat];\n        var rowOrderedByLongitude = row.sort(function (a, b) {\n            return getCoords(a)[0] - getCoords(b)[0];\n        });\n        return rowOrderedByLongitude;\n    });\n\n    // sort rows (of points with the same latitude) by latitude\n    var pointMatrix = orderedRowsByLatitude.sort(function (a, b) {\n        if (flip) return getCoords(a[0])[1] - getCoords(b[0])[1];\n        else return getCoords(b[0])[1] - getCoords(a[0])[1];\n    });\n\n    return pointMatrix;\n}\n\n/**\n * Takes a grid {@link FeatureCollection} of {@link Point} features with z-values and an array of\n * value breaks and generates [isolines](http://en.wikipedia.org/wiki/Isoline).\n *\n * @name isolines\n * @param {FeatureCollection<Point>} pointGrid input points\n * @param {Array<number>} breaks values of `zProperty` where to draw isolines\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.zProperty='elevation'] the property name in `points` from which z-values will be pulled\n * @param {Object} [options.commonProperties={}] GeoJSON properties passed to ALL isolines\n * @param {Array<Object>} [options.breaksProperties=[]] GeoJSON properties passed, in order, to the correspondent isoline;\n * the breaks array will define the order in which the isolines are created\n * @returns {FeatureCollection<MultiLineString>} a FeatureCollection of {@link MultiLineString} features representing isolines\n * @example\n * // create a grid of points with random z-values in their properties\n * var extent = [0, 30, 20, 50];\n * var cellWidth = 100;\n * var pointGrid = turf.pointGrid(extent, cellWidth, {units: 'miles'});\n *\n * for (var i = 0; i < pointGrid.features.length; i++) {\n *     pointGrid.features[i].properties.temperature = Math.random() * 10;\n * }\n * var breaks = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n *\n * var lines = turf.isolines(pointGrid, breaks, {zProperty: 'temperature'});\n *\n * //addToMap\n * var addToMap = [lines];\n */\nfunction isolines(pointGrid, breaks, options) {\n    // Optional parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var zProperty = options.zProperty || 'elevation';\n    var commonProperties = options.commonProperties || {};\n    var breaksProperties = options.breaksProperties || [];\n\n    // Input validation\n    collectionOf(pointGrid, 'Point', 'Input must contain Points');\n    if (!breaks) throw new Error('breaks is required');\n    if (!Array.isArray(breaks)) throw new Error('breaks must be an Array');\n    if (!isObject(commonProperties)) throw new Error('commonProperties must be an Object');\n    if (!Array.isArray(breaksProperties)) throw new Error('breaksProperties must be an Array');\n\n    // Isoline methods\n    var matrix = gridToMatrix(pointGrid, {zProperty: zProperty, flip: true});\n    var createdIsoLines = createIsoLines(matrix, breaks, zProperty, commonProperties, breaksProperties);\n    var scaledIsolines = rescaleIsolines(createdIsoLines, matrix, pointGrid);\n\n    return featureCollection(scaledIsolines);\n}\n\n/**\n * Creates the isolines lines (featuresCollection of MultiLineString features) from the 2D data grid\n *\n * Marchingsquares process the grid data as a 3D representation of a function on a 2D plane, therefore it\n * assumes the points (x-y coordinates) are one 'unit' distance. The result of the isolines function needs to be\n * rescaled, with turfjs, to the original area and proportions on the map\n *\n * @private\n * @param {Array<Array<number>>} matrix Grid Data\n * @param {Array<number>} breaks Breaks\n * @param {string} zProperty name of the z-values property\n * @param {Object} [commonProperties={}] GeoJSON properties passed to ALL isolines\n * @param {Object} [breaksProperties=[]] GeoJSON properties passed to the correspondent isoline\n * @returns {Array<MultiLineString>} isolines\n */\nfunction createIsoLines(matrix, breaks, zProperty, commonProperties, breaksProperties) {\n    var results = [];\n    for (var i = 1; i < breaks.length; i++) {\n        var threshold = +breaks[i]; // make sure it's a number\n\n        var properties = Object.assign(\n            {},\n            commonProperties,\n            breaksProperties[i]\n        );\n        properties[zProperty] = threshold;\n        var isoline = multiLineString(isoContours(matrix, threshold), properties);\n\n        results.push(isoline);\n    }\n    return results;\n}\n\n/**\n * Translates and scales isolines\n *\n * @private\n * @param {Array<MultiLineString>} createdIsoLines to be rescaled\n * @param {Array<Array<number>>} matrix Grid Data\n * @param {Object} points Points by Latitude\n * @returns {Array<MultiLineString>} isolines\n */\nfunction rescaleIsolines(createdIsoLines, matrix, points) {\n\n    // get dimensions (on the map) of the original grid\n    var gridBbox = bbox(points); // [ minX, minY, maxX, maxY ]\n    var originalWidth = gridBbox[2] - gridBbox[0];\n    var originalHeigth = gridBbox[3] - gridBbox[1];\n\n    // get origin, which is the first point of the last row on the rectangular data on the map\n    var x0 = gridBbox[0];\n    var y0 = gridBbox[1];\n\n    // get number of cells per side\n    var matrixWidth = matrix[0].length - 1;\n    var matrixHeight = matrix.length - 1;\n\n    // calculate the scaling factor between matrix and rectangular grid on the map\n    var scaleX = originalWidth / matrixWidth;\n    var scaleY = originalHeigth / matrixHeight;\n\n    var resize = function (point) {\n        point[0] = point[0] * scaleX + x0;\n        point[1] = point[1] * scaleY + y0;\n    };\n\n    // resize and shift each point/line of the createdIsoLines\n    createdIsoLines.forEach(function (isoline) {\n        coordEach(isoline, resize);\n    });\n    return createdIsoLines;\n}\n\nexport default isolines;\n","import interpolate from \"@turf/interpolate\"\r\nimport isobands from \"@turf/isobands\"\r\nimport isolines from \"@turf/isolines\"\r\n\r\nexport default class IsolineCalc {\r\n  constructor (data) {\r\n    this.setData(data)\r\n  }\r\n\r\n  setData (data) {\r\n    this._data = data\r\n  }\r\n\r\n  calcIsolines () {\r\n    const {points, breaks, options} = this._data\r\n    const pointGrid = this._getPointGrid(\r\n      points,\r\n      options\r\n    )\r\n    // get isolines\r\n    const multiLineStringFeatures = this._getLines(\r\n      pointGrid,\r\n      breaks,\r\n      options\r\n    )\r\n    let polylines = this._transformMultiToArray(\r\n      multiLineStringFeatures\r\n    )\r\n    // get polygons\r\n    let multiPolygonFeature = this._getPolygons(\r\n      pointGrid,\r\n      breaks,\r\n      options\r\n    )\r\n    let polygons = this._transformMultiToArray(\r\n      multiPolygonFeature\r\n    )\r\n    return {\r\n      points,\r\n      pointGrid,\r\n      multiLineStringFeatures,\r\n      multiPolygonFeature,\r\n      polylines,\r\n      polygons\r\n    }\r\n  }\r\n\r\n  _transformMultiToArray (multi) {\r\n    let polylines = []\r\n    multi.features.forEach(v => {\r\n      if (v.geometry.coordinates.length > 0) {\r\n        v.geometry.coordinates.forEach(coordinates => {\r\n          polylines.push({\r\n            coordinates,\r\n            properties: v.properties\r\n          })\r\n        })\r\n      }\r\n    })\r\n    return polylines\r\n  }\r\n\r\n  _getPolygons (pointGrid, breaks, options) {\r\n    return isobands(\r\n      pointGrid,\r\n      breaks,\r\n      {\r\n        zProperty: options.propertyName\r\n      }\r\n    )\r\n  }\r\n\r\n  _getLines (pointGrid, breaks, options) {\r\n    return isolines(\r\n      pointGrid,\r\n      breaks,\r\n      {\r\n        zProperty: options.propertyName\r\n      }\r\n    )\r\n  }\r\n\r\n  _getFlatArray (input, tmp) {\r\n    if (Array.isArray(input) && Array.isArray(input[0])) {\r\n      input.forEach(v => {\r\n        this._getFlatArray(v, tmp)\r\n      })\r\n    } else {\r\n      tmp.push([input[0], input[1]])\r\n    }\r\n  }\r\n\r\n  _getMinAndMax (bounds) {\r\n    let flatBounds = []\r\n    this._getFlatArray(bounds, flatBounds)\r\n    let min = [999, 999]\r\n    let max = [-1, -1]\r\n    flatBounds.forEach(p => {\r\n      if (p[0] > max[0]) {\r\n        max[0] = p[0]\r\n      }\r\n      if (p[1] > max[1]) {\r\n        max[1] = p[1]\r\n      }\r\n      if (p[0] < min[0]) {\r\n        min[0] = p[0]\r\n      }\r\n      if (p[1] < min[1]) {\r\n        min[1] = p[1]\r\n      }\r\n    })\r\n    return {\r\n      min,\r\n      max\r\n    }\r\n  }\r\n\r\n  _getPointGrid (inputPoints, options) {\r\n    let points = inputPoints.slice()\r\n    if (options.bounds && options.bounds.length > 0) {\r\n      let {min, max} = this._getMinAndMax(options.bounds)\r\n      points.push([...min, 0])\r\n      points.push([...max, 0])\r\n    }\r\n    const feature = this._pointsToFeatureCollection(\r\n      points,\r\n      options.propertyName\r\n    )\r\n    return interpolate(\r\n      feature,\r\n      options.interpolateCellSize,\r\n      {\r\n        gridType: 'points',\r\n        property: options.propertyName\r\n      }\r\n    )\r\n  }\r\n\r\n  _pointsToFeatureCollection (points, prop) {\r\n    const features = []\r\n    points.forEach(v => {\r\n      if (v[0] && v[1]) {\r\n        features.push({\r\n          type: 'Feature',\r\n          geometry: {\r\n            type: 'Point',\r\n            coordinates: [+v[0], +v[1]]\r\n          },\r\n          properties: {\r\n            [prop]: (v[2] || 0)\r\n          }\r\n        })\r\n      }\r\n    })\r\n    return {\r\n      type: 'FeatureCollection',\r\n      features\r\n    }\r\n  }\r\n}\r\n","import IsolineCalc from './IsolineCalc'\r\n\r\nself.addEventListener('message', ({data}) => {\r\n  const startAt = +new Date()\r\n  try {\r\n    const isolineCalc = new IsolineCalc(data)\r\n    let computedData = isolineCalc.calcIsolines()\r\n    self.postMessage(\r\n      Object.assign(computedData, {startAt})\r\n    )\r\n  } catch (e) {\r\n    const error = e.toString()\r\n    self.postMessage({\r\n      error,\r\n      startAt\r\n    })\r\n  }\r\n})\r\n"],"names":["feature","geometry","properties","options","isObject","Error","bbox","id","undefined","constructor","Object","validateBBox","validateId","feat","type","point","coordinates","Array","isArray","length","isNumber","polygon","i","ring","j","featureCollection","features","fc","multiLineString","multiPolygon","radiansToLength","radians","units","factor","factors","degreesToRadians","degrees","Math","PI","num","isNaN","input","forEach","indexOf","coordEach","geojson","callback","excludeWrapCoord","k","l","stopG","coords","geometryMaybeCollection","isGeometryCollection","wrapShrink","coordIndex","isFeatureCollection","isFeature","stop","featureIndex","geometries","geomIndex","multiFeatureIndex","geometryIndex","geomType","featureEach","geomEach","g","featureProperties","featureBBox","featureId","geomReduce","initialValue","previousValue","currentGeometry","BBox","Infinity","coord","getCoord","obj","getCoords","containsNumber","collectionOf","name","getGeom","getType","distance","from","to","coordinates1","coordinates2","dLat","dLon","lat1","lat2","a","pow","sin","cos","atan2","sqrt","message","this","p","BLACK","color","parent","c","left","right","root_","size_","array_","arguments","addAll","truncate","precision","mutate","JSON","parse","stringify","truncateCoords","splice","round","cleanCoords","newCoords","cleanLine","line","push","polygons","polyPoints","existing","key","join","hasOwnProperty","points","equals","prevPoint","nextPoint","newPoints","secondToLast","isPointOnLineSegment","pt1","pt2","start","end","x","y","startX","startY","endX","endY","dxc","dyc","dxl","dyl","abs","intersect","poly1","poly2","geom1","geom2","reader","GeoJSONReader","read","b","intersection","OverlayOp","isEmpty","GeoJSONWriter","write","hexGrid","cellSide","triangles","mask","west","south","east","north","centerY","centerX","xFraction","cellWidth","yFraction","cellHeight","radius","hex_width","hex_height","box_width","box_height","x_interval","y_interval","x_span","x_count","floor","x_adjust","y_count","y_adjust","hasOffsetY","cosines","sines","angle","results","isOdd","center_x","center_y","triangle","hex","hexagon","center","rx","ry","vertices","slice","hexTriangles","booleanPointOnLine","pt","ignoreEndVertices","ptCoords","lineCoords","ignoreBoundary","lineSegmentStart","lineSegmentEnd","excludeBoundary","x1","y1","x2","y2","booleanPointInPolygon","polys","inBBox","insidePoly","inRing","inHole","isInside","xi","yi","xj","yj","booleanWithin","feature1","feature2","type1","type2","isPointInMultiPoint","isMultiPointInMultiPoint","isMultiPointOnLine","isMultiPointInPoly","isLineOnLine","isLineInPoly","isPolyInPoly","multiPoint","output","compareCoords","multiPoint1","multiPoint2","anyMatch","i2","lineString","foundInsidePoint","lineString1","lineString2","linestring","doBBoxOverlap","calcBbox","getMidpoint","poly1Bbox","bbox1","bbox2","pair1","pair2","pointGrid","bboxWidth","bboxHeight","columns","rows","deltaX","deltaY","currentX","currentY","cellPt","within","centroid","xSum","ySum","len","squareGrid","column","row","cellPoly","triangleGrid","cellTriangle1","cellTriangle2","clone","cloneFeature","cloneFeatureCollection","cloneGeometry","cloned","keys","cloneProperties","value","map","item","geom","deepSlice","babelHelpers.typeof","interpolate","cellSize","gridType","property","weight","grid","box","gridFeature","zw","sw","zValue","gridPoint","d","w","newFeature","area","calculateArea","polygonArea","ringArea","p1","p2","p3","lowerIndex","middleIndex","upperIndex","coordsLength","rad","RADIUS","_","explode","gridToMatrix","zProperty","flip","flags","pointsMatrix","sortPointsByLatLng","matrix","r","pointRow","matrixPosition","pointsByLatitude","lat","sort","isoBands","data","minV","bandwidth","optionKeys","defaultSettings","val","settings","verbose","ret","computeBandGrid","BandGrid2Areas","BandGrid2AreaPaths","successCallback","interpolateX","y0","myArray","toString","cols","BandGrid","cells","maxV","cval","tl","tr","br","bl","cval_real","flipped","average","topleft","topright","bottomleft","bottomright","righttop","rightbottom","lefttop","leftbottom","edges","isoBandEdgeBL","isoBandEdgeRB","isoBandEdgeRT","isoBandEdgeLT","isoBandEdgeBR","isoBandEdgeLB","isoBandEdgeTL","areas","currentPolygon","cell","prev","getStartXY","next","q","getExitXY","o","missing","traceOutOfGridPath","path","pp","d_x","d_y","d_o","closed","Node3","Node2","Node1","Node0","deleteEdge","edgeIdx","pop","e","id_x","isoBandNextXRB","isoBandNextYRB","isoBandNextORB","isoBandNextXRT","isoBandNextYRT","isoBandNextORT","isoBandNextXLB","isoBandNextYLB","isoBandNextOLB","isoBandNextXLT","isoBandNextYLT","isoBandNextOLT","isoBandNextXTL","isoBandNextYTL","isoBandNextOTL","isoBandEdgeTR","isoBandNextXTR","isoBandNextYTR","isoBandNextOTR","isoBandNextXBL","isoBandNextYBL","isoBandNextOBL","isoBandNextXBR","isoBandNextYBR","isoBandNextOBR","area_idx","gg","polygon_table","aa","aaa","isobands","breaks","commonProperties","breaksProperties","contours","createContourLines","rescaleContours","contour","index","contourProperties","assign","groupedRings","lowerBand","upperBand","isobandsCoords","nestedRings","orderByArea","groupNestedRings","gridBbox","originalWidth","originalHeigth","x0","matrixWidth","matrixHeight","scaleX","scaleY","resize","lineRingSet","lineRing","ringsCoords","ringsWithArea","orderedByArea","area$$1","lr","orderedLinearRings","lrList","lrCoordinates","grouped","groupedLinearRingsCoords","allGrouped","group","outerMostPoly","lrPoly","testPolygon","targetPolygon","list","isoContours","threshold","contourGrid2Paths","computeContourGrid","ContourGrid","top","bottom","isSaddle","isTrivial","clearCell","getXY","edge","paths","path_idx","epsilon","tracePath","merged","info","unshift","dx","dy","maxj","dxContour","dyContour","startEdge","nextEdge","currentCell","prev_cval","isolines","rescaleIsolines","createIsoLines","isoline","createdIsoLines","earthRadius","prototype","defineProperty","configurable","max","min","arrayLike","parseInt","Number","relativeStart","relativeEnd","writable","isFinite","isInteger","parseFloat","trunc","ceil","NumberUtil","interfaces_","getClass","equalsWithTolerance","tolerance","call","stack","IllegalArgumentException","__proto__","create","MAX_VALUE","Double","n","doubleToLongBits","longBitsToDouble","isInfinite","staticAccessors$1","get","defineProperties","z","Coordinate","NULL_ORDINATE","DimensionalComparator","serialVersionUID","X","Y","Z","setOrdinate","ordinateIndex","equals2D","other","getOrdinate","equals3D","equalInZ","compareTo","copy","distance3D","dz","hashCode","result","setCoordinate","Comparable","Clonable","Serializable","f","staticAccessors","NaN","dimensionsToTest","_dimensionsToTest","dimensionsToTest$1","compare","o1","o2","c1","c2","compX","compY","Comparator","CoordinateSequenceFactory","INTERIOR","BOUNDARY","EXTERIOR","NONE","Location","toLocationSymbol","locationValue","staticAccessors$4","LOG_10","MathUtil","log10","log","ln","v1","v2","v3","v4","clamp","x$1","min$1","max$1","wrap","v1$1","v2$1","v3$1","staticAccessors$5","str","StringBuffer","append","setCharAt","substr","Integer","intValue","Character","isWhitespace","toUpperCase","_hi","_lo","init","dd","DD","hi","lo","TWO_PI","PI_2","E","EPS","SPLIT","MAX_PRINT_DIGITS","TEN","ONE","SCI_NOT_EXPONENT_CHAR","SCI_NOT_ZERO","le","extractSignificantDigits","insertDecimalPoint","magnitude","mag","divide","scale","gt","lt","multiply","numDigits","decimalPointPos","buf","digit","rebiasBy10","digitChar","subtract","valueOf","selfAdd","remMag","continueExtractingDigits","sqr","doubleValue","add","negate","y$1","isZero","selfSubtract","getSpecialNumberString","selfDivide","C","yhi","hc","u","tc","hy","U","ty","ylo","dump","createNaN","ge","exp","s","selfMultiply","reciprocal","fhi","flo","rint","setValue","value$1","isNegative","ax","axdd","diffSq","d2","S","H","h","S$1","T","e$1","f$1","s$1","t","H$1","h$1","zhi","zlo","hx","tx","selfSqr","toStandardNotation","toSciNotation","specialStr","fill","sigDigits","charAt","stringOfChar","numZeroes","zeroes","digits","trailingDigits","substring","digitsWithDecimal","expStr","isPositive","signum","strlen","signCh","isDigit","ch","ex","numBeforeDec","numDecPlaces","val2","scale$1","xAbs","xLog10","xMag","staticAccessors$7","DP_SAFE_EPSILON","CGAlgorithmsDD","orientationIndex","orientationIndexFilter","dy2","dy1","dx2","signOfDet2x2","q1","q2","denom1","denom2","numx1","numx2","numx","denom","fracP","numy1","numy2","numy","fracQ","pa","pb","pc","detleft","detright","det","detsum","errbound","staticAccessors$6","M","staticAccessors$8","CoordinateSequence","size","getCoordinate","getCoordinateCopy","getDimension","getX","expandEnvelope","env","getY","toCoordinateArray","Exception$$1","NotRepresentableException","Exception","System","arraycopy","src","srcPos","dest","destPos","getProperty","line.separator","_x","_y","p1$1","p2$1","_x$1","_y$1","_w","p1$2","p2$2","py","qw","qy","pw","qx","px","HCoordinate","xInt","yInt","_minx","_maxx","_miny","_maxy","Envelope","getArea","getWidth","getHeight","isNull","otherEnvelope","getMaxX","getMaxY","getMinX","getMinY","intersects","intMinX","intMaxX","intMinY","intMaxY","covers","expandToInclude","minExtent","translate","transX","transY","setToNull","maxExtent","expandBy","contains","centre","minp","maxq","maxp","minq","staticAccessors$9","typeStr","emptyTypeStr","spaces","parenComma","doubleParenComma","trimParens","geometryFactory","WKTParser","wkt","replace","regExes","exec","search","matches","toLowerCase","parse$1","apply","extractGeometry","getGeometryType","extract$1","wktType","coordinate","coordinate$1","point$1","_coordinates","multipoint","multipoint$1","_geometries","array","this$1","linestring$1","_points","linearring","linearring$1","multilinestring","multilinestring$1","polygon$1","_shell","_holes","multipolygon","multipolygon$1","geometrycollection","collection","createPoint","trim","split","createMultiPoint","components","createLineString","createLinearRing","createMultiLineString","lines","createPolygon","rings","shell","holes","createMultiPolygon","createGeometryCollection","wktArray","parser","WKTWriter","toLineString","p0","RuntimeException","RuntimeException$$1","AssertionFailedException","Assert","shouldNeverReachHere","isTrue","assertion","expectedValue","actualValue","_result","_inputLines","_intPt","_intLineIndex","_isProper","_pa","_pb","_precisionModel","DONT_INTERSECT","DO_INTERSECT","COLLINEAR","NO_INTERSECTION","POINT_INTERSECTION","COLLINEAR_INTERSECTION","LineIntersector","getIndexAlongSegment","segmentIndex","intIndex","computeIntLineIndex","getTopologySummary","isEndPoint","catBuf","isCollinear","computeIntersection","p4","computeIntersect","getIntersectionNum","getEdgeDistance","dist0","dist1","isProper","hasIntersection","setPrecisionModel","precisionModel","isInteriorIntersection","inputLineIndex","getIntersection","computeEdgeDistance","getEndpoint","ptIndex","isIntersection","getIntersectionAlongSegment","dist","pdx","pdy","nonRobustComputeEdgeDistance","staticAccessors$10","LineIntersector$$1","RobustLineIntersector","isInSegmentEnvelopes","intPt","env1","CGAlgorithms","normalizeToMinimum","n1","n2","n3","n4","normPt","smallestInAbsValue","safeHCoordinateIntersection","nearestEndpoint","intersectionWithNormalization","makePrecise","x3","x4","xabs","checkDD","intPtDD","out","println","isIn","normalizeToEnvCentre","computeCollinearIntersection","p1q1p2","p1q2p2","q1p1q2","q1p2q2","n00","n01","n10","n11","minX0","minX1","maxX0","maxX1","minY0","minY1","maxY0","maxY1","intMidX","intMidY","Pq1","Pq2","Qp1","Qp2","distancePointLine","minDist","nearestPt","RobustDeterminant","dx1","sign","swap","_p","_crossingCount","_isPointOnSegment","RayCrossingCounter","countSegment","minx","maxx","xIntSign","isPointInPolygon","getLocation","isOnSegment","locatePointInRing","hasInterface","counter","p$1","i$1","ring$1","counter$1","CLOCKWISE","RIGHT","COUNTERCLOCKWISE","LEFT","STRAIGHT","signedArea","sum","x0$1","sum$1","distanceLineLine","A","B","D","noIntersection","sNum","rNumb","isPointInRing","computeLength","pts","isCCW","nPts","hiPt","hiIndex","iPrev","iNext","computeOrientation","disc","distancePointLinePerpendicular","len2","minDistance","isOnLine","lineIntersector","staticAccessors$3","GeometryComponentFilter","filter","_envelope","_factory","_SRID","_userData","factory","getSRID","SORTINDEX_POINT","SORTINDEX_MULTIPOINT","SORTINDEX_LINESTRING","SORTINDEX_LINEARRING","SORTINDEX_MULTILINESTRING","SORTINDEX_POLYGON","SORTINDEX_MULTIPOLYGON","SORTINDEX_GEOMETRYCOLLECTION","geometryChangedFilter","Geometry","getSortIndex","getFactory","getGeometryN","isRectangle","g$1","equalsTopo","equalsExact","geometryChanged","geometryChangedAction","equalsNorm","norm","getLength","getNumGeometries","compareToSameClass","other$1","comp","getUserData","getEnvelope","toGeometry","getEnvelopeInternal","checkNotGeometryCollection","equal","normalize","getPrecisionModel","computeEnvelopeInternal","setSRID","SRID","setUserData","userData","iterator","hasNext","aElement","bElement","comparison","isGeometryCollectionOrDerived","hasNonEmptyElements","hasNullElements","staticAccessors$11","CoordinateFilter","Mod2BoundaryNodeRule","EndPointBoundaryNodeRule","MultiValentEndPointBoundaryNodeRule","MonoValentEndPointBoundaryNodeRule","MOD2_BOUNDARY_RULE","ENDPOINT_BOUNDARY_RULE","MULTIVALENT_ENDPOINT_BOUNDARY_RULE","MONOVALENT_ENDPOINT_BOUNDARY_RULE","OGC_SFS_BOUNDARY_RULE","BoundaryNodeRule","isInBoundary","boundaryCount","staticAccessors$12","Collection","toArray","remove","IndexOutOfBoundsException","Iterator","Collection$$1","List","set","NoSuchElementException","List$$1","ArrayList","ensureCapacity","clear","element","found","Iterator$$1","arrayList","arrayList_","position_","Iterator_","ArrayList$$1","coord$1","allowRepeated","CoordinateList","coordArrayType","coll","isChanged","allowRepeated$1","last","coord$2","allowRepeated$2","direction","coord$3","allowRepeated$3","i$2","allowRepeated$4","i$3","coord$4","inc","coord$5","allowRepeated$5","closeRing","ForwardComparator","BidirectionalComparator","staticAccessors$13","CoordinateArrays","isRing","ptNotInList","testPts","testPt","scroll","firstCoordinate","newCoordinates","coord1","coord2","coord1$1","coord2$1","coordinateComparator","coordList","hasRepeatedPoints","removeRepeatedPoints","reverse","mid","tmp","removeNull","nonNull","newCoord","copyDeep","destStart","srcStart","isEqualReversed","pts1","pts2","envelope","atLeastNCoordinatesOrNothing","increasingDirection","minCoordinate","minCoord","extract","npts","extractPts","iPts","OLDcompare","dir1","dir2","i1","comparePt","Map$1","put","values","entrySet","Map","SortedMap","OperationNotSupported","Set","Set$$1","HashSet","hashSet","hashSet_","TreeMap","cmp","getValue","getKey","fixAfterInsertion","RED","parentOf","leftOf","rightOf","colorOf","setColor","rotateLeft","rotateRight","getFirstEntry","successor","Lineal","SortedSet","TreeSet","treeSet","treeSet_","Iterator_$2","Arrays","comparator","concat","asList","P","L","FALSE","TRUE","DONTCARE","SYM_FALSE","SYM_TRUE","SYM_DONTCARE","SYM_P","SYM_L","SYM_A","staticAccessors$14","Dimension","toDimensionSymbol","dimensionValue","toDimensionValue","dimensionSymbol","GeometryFilter","CoordinateSequenceFilter","seq","isDone","isGeometryChanged","Geometry$$1","GeometryCollection","getCoordinates","getNumPoints","childCoordinates","isEquivalentClass","otherCollection","getBoundaryDimension","dimension","numPoints","revGeoms","theseElements","otherElements","o$1","gc","thisGeom","otherGeom","holeComp","filter$1","filter$2","filter$3","getBoundary","GeometryCollection$$1","MultiLineString","isClosed","nLines","revLines","lineStrings","_geom","_geomFact","_bnRule","_endpointMap","bnRule","geom$1","bnRule$1","BoundaryOp","boundaryMultiLineString","mLine","getEmptyMultiPoint","computeBoundaryCoordinates","bdyPts","createMultiPointFromCoords","boundaryLineString","getStartPoint","getEndPoint","addEndpoint","getCoordinateN","it","entry","count","valence","Counter","NEWLINE","SIMPLE_ORDINATE_FORMAT","StringUtil","chars","getStackTrace","os","printStackTrace","ps","t$1","stringReader","depth","stackTrace","lineNumberReader","readLine","separator","tmpString","pos","tokenList","token","separatorlen","res","format","staticAccessors$15","CoordinateSequences","copyCoord","dim","minDim","isEqual","cs1","cs2","cs1Size","extend","fact","newseq","cs","ensureValidRing","createClosedRing","LineString","isSimple","otherLineString","getPointN","line$1","ls","getCoordinateSequence","getCoordinateSequenceFactory","isCoordinate","Puntal","Point","Polygonal","Polygon","shellCoordinates","getNumInteriorRing","prevX","prevY","otherPolygon","thisShell","otherPolygonShell","uniqueCoordinates","clockwise","poly","convexHull","getExteriorRing","otherShell","thisShell$1","otherShell$1","shellComp","nHole1","nHole2","getInteriorRingN","thisHole","otherHole","MultiPoint","isValid","LineString$$1","validateConstruction","LinearRing","MINIMUM_VALID_SIZE","MultiPolygon","allRings","allRingsArray","_isUserDataCopied","NoOpGeometryOperation","CoordinateOperation","CoordinateSequenceOperation","GeometryEditor","setCopyUserData","isUserDataCopied","edit","operation","editInternal","editGeometryCollection","editPolygon","getName","collectionForType","newPolygon","hole","GeometryEditorOperation","staticAccessors$16","editCoordinates","_dimension","coordSeq","size$1","dimension$1","CoordinateArraySequence","cloneCoordinates","strBuf","staticAccessors$18","instanceObject","CoordinateArraySequenceFactory","readResolve","instance","staticAccessors$17","MapInterface","map_","HashMap","done","entries","_modelType","_scale","PrecisionModel","FLOATING","modelType","FIXED","setScale","pm","maximumPreciseValue","otherPrecisionModel","getMaximumSignificantDigits","otherSigDigits","getScale","isFloating","FLOATING_SINGLE","description","maxSigDigits","mostPrecise","pm1","pm2","staticAccessors$19","_name","Type","nameToTypeMap","staticAccessors$1$1","_coordinateSequenceFactory","GeometryFactory","getDefaultCoordinateSequenceFactory","buildGeometry","geomList","geomClass","partClass","isHeterogeneous","hasGeometryCollection","toGeometryArray","geom0","toPolygonArray","toLineStringArray","toPointArray","coordinates$1","shell$1","createGeometry","ptSeq","toMultiPolygonArray","multiPolygons","multiPolygonArray","geometryArray","toMultiLineStringArray","multiLineStrings","multiLineStringArray","lineStringArray","toMultiPointArray","multiPoints","multiPointArray","toLinearRingArray","linearRings","linearRingArray","pointArray","polygonArray","createPointFromInternalCoord","exemplar","staticAccessors$2","GeoJSONParser","json","geometryTypes","Feature","FeatureCollection","sub","linearRing","geoJson","shellGeoJson","holeGeoJson","reducePrecision","ON","Position","opposite","position","staticAccessors$20","EmptyStackException","Stack","peek","empty","_minIndex","_minCoord","_minDe","_orientedDe","RightmostEdgeFinder","getRightmostSide","de","getRightmostSideOfSegment","side","checkForRightmostCoordinate","findRightmostEdgeAtVertex","getEdge","pNext","pPrev","orientation","usePrev","findRightmostEdgeAtNode","getNode","node","getEdges","star","getRightmostEdge","isForward","getSym","findEdge","dirEdgeList","msg","TopologyException","msgWithCoord","LinkedList","addLast","removeFirst","shift","_finder","_dirEdgeList","_nodes","_rightMostCoord","_env","BufferSubgraph","clearVisitedEdges","setVisited","getRightmostCoordinate","computeNodeDepth","isVisited","computeDepths","de$1","copySymDepths","computeDepth","outsideDepth","setEdgeDepths","addReachable","findResultEdges","getDepth","isInteriorAreaEdge","setInResult","nodeQueue","startNode","nodesVisited","sym","adjNode","graph","dirEdge","edgeEnv","nodeStack","setDepth","symNode","getNodes","getDirectedEdges","location","on","gl","on$1","TopologyLocation","setAllLocations","locValue","setAllLocationsIfNull","isLine","merge","newLoc","getLocations","temp","setLocations","posIndex","isArea","isAnyNull","setLocation","locIndex","locValue$1","isEqualOnSide","allPositionsEqual","loc","elt","onLoc","lbl","onLoc$1","onLoc$2","leftLoc","rightLoc","geomIndex$1","onLoc$3","leftLoc$1","rightLoc$1","Label","getGeometryCount","location$1","toLine","toLineLabel","label","lineLabel","_startDe","_maxNodeDegree","_edges","_pts","_label","_ring","_isHole","_geometryFactory","computePoints","computeRing","EdgeRing","isIsolated","getEdgeRing","getLabel","mergeLabel","addPoints","isFirstEdge","setEdgeRing","getNext","getLinearRing","computeMaxNodeDegree","getOutgoingDegree","degree","startIndex","edgePts","startIndex$1","isHole","containsPoint","addHole","isShell","getMaxNodeDegree","getShell","deLabel","deLabel$1","setShell","toPolygon","holeLR","EdgeRing$$1","MinimalEdgeRing","er","setMinEdgeRing","getNextMin","MaximalEdgeRing","buildMinimalRings","getMinEdgeRing","minEdgeRings","minEr","linkDirectedEdgesForMinimalEdgeRings","linkMinimalDirectedEdges","_isInResult","_isCovered","_isCoveredSet","_isVisited","GraphComponent","isInResult","isCovered","isCoveredSet","setLabel","setCovered","updateIM","im","computeIM","GraphComponent$$1","_coord","Node","isIncidentEdgeInResult","print","computeMergedLocation","label2","eltIndex","nLoc","argIndex","onLocation","thisLoc","insert","setNode","setLabelBoundary","nodeMap","nodeFact","NodeMap","find","addNode","createNode","node$1","getBoundaryNodes","bdyNodes","NE","NW","SW","SE","Quadrant","isNorthern","quad","isOpposite","quad1","quad2","commonHalfPlane","isInHalfPlane","halfPlane","quadrant","staticAccessors$21","_edge","_node","_p0","_p1","_dx","_dy","_quadrant","edge$1","edge$2","p0$1","label$1","EdgeEnd","compareDirection","getDy","className","lastIndexOf","lastDotPos","getDirectedCoordinate","getDx","getQuadrant","computeLabel","boundaryNodeRule","EdgeEnd$$1","_isForward","_sym","_next","_nextMin","_edgeRing","_minEdgeRing","_depth","computeDirectedLabel","DirectedEdge","depthVal","setNextMin","nextMin","getDepthDelta","minEdgeRing","isLineEdge","isExteriorIfArea0","isExteriorIfArea1","edgeRing","depthDelta","printEdge","printReverse","setSym","setVisitedEdge","directionFactor","delta","oppositePos","oppositeDepth","setNext","depthFactor","currLocation","nextLocation","NodeFactory","_edgeEndList","PlanarGraph","printEdges","eiList","getNodeIterator","linkResultDirectedEdges","nodeit","debugPrintln","isBoundaryNode","linkAllDirectedEdges","matchInSameDirection","ep0","ep1","getEdgeEnds","debugPrint","getEdgeIterator","findEdgeInSameDirection","eCoord","insertEdge","findEdgeEnd","ee","addEdges","edgesToAdd","de1","de2","nodes","_shellList","PolygonBuilder","sortShellsAndHoles","edgeRings","shellList","freeHoleList","computePolygons","resultPolyList","placeFreeHoles","findEdgeRingContaining","buildMinimalEdgeRings","maxEdgeRings","findShell","placePolygonHoles","buildMaximalEdgeRings","dirEdges","getPolygons","testEr","testRing","tryShell","tryRing","minShell","minEnv","tryEnv","testEnv","isContained","shellCount","Boundable","getBounds","_bounds","_item","bounds","ItemBoundable","getItem","_size","_items","PriorityQueue","poll","reorder","child","ItemVisitor","visitItem","SpatialIndex","itemEnv","query","_childBoundables","_level","level","AbstractNode","getLevel","getChildBoundables","addChildBoundable","childBoundable","computeBounds","staticAccessors$22","Collections","reverseOrder","alen","singletonList","_boundable1","_boundable2","_distance","_itemDistance","boundable1","boundable2","itemDistance","BoundablePair","expandToQueue","priQ","isComposite","isComp1","isComp2","expand","isLeaves","nd","bndComposite","bndOther","children","bp","getDistance","getBoundable","_root","_built","_itemBoundables","_nodeCapacity","AbstractSTRtree","DEFAULT_NODE_CAPACITY","nodeCapacity","nodeCapacity$1","IntersectsOp","getNodeCapacity","lastNode","build","removeItem","childToRemove","itemsTree","valuesTree","valuesTreeForChild","valuesTreeForNode","boundablesAtLevel","boundables","level$1","boundables$1","boundable","getIntersectsOp","searchBounds","searchBounds$1","visitor","childBoundables","searchBounds$2","visitor$1","childBoundables$1","childBoundable$1","searchBounds$3","matches$1","createHigherLevels","getRoot","item$1","childToPrune","boundablesOfALevel","createParentBoundables","parentBoundables","childDepth","maxChildDepth","newLevel","sortedChildBoundables","getComparator","compareDoubles","staticAccessors$23","ItemDistance","item1","item2","AbstractSTRtree$$1","STRtree","STRtreeNode","xComparator","yComparator","intersectsOp","createParentBoundablesFromVerticalSlices","verticalSlices","createParentBoundablesFromVerticalSlice","sliceCount","slices","boundablesAddedToSlice","sliceCapacity","searchEnv","searchEnv$1","minLeafCount","nearestNeighbour","itemDist","initBndPair","POSITIVE_INFINITY","tree","itemDist$1","bp$1","maxDistance","initBndPair$1","distanceLowerBound","bndPair","currentDistance","minPair","bnd","itemDist$2","bp$2","centreX","avg","centreY","aBounds","bBounds","AbstractNode$$1","SegmentPointComparator","relativeSign","octant","compareValue","xSign","ySign","compareSign0","compareSign1","_segString","_segmentOctant","_isInterior","segString","segmentOctant","SegmentNode","maxSegmentIndex","isInterior","_nodeMap","SegmentNodeList","getSplitCoordinates","addEndpoints","addEdgeCoordinates","eiPrev","ei","addCollapsedNodes","findCollapsesFromInsertedNodes","collapsedVertexIndexes","findCollapsesFromExistingVertices","vertexIndex","ei0","ei1","lastSegStartPt","useIntPt1","addSplitEdges","edgeList","createSplitEdge","newEdge","findCollapseIndex","collapsedVertexIndex","numVerticesBetween","maxSegIndex","ipt","getData","getSegmentOctant","eiNew","checkSplitEdgesCorrectness","splitEdges","split0","pt0","splitn","splitnPts","ptn","Octant","adx","ady","dx$1","dy$1","SegmentString","setData","NodableSegmentString","addIntersection","_nodeList","_data","NodedSegmentString","safeOctant","addIntersectionNode","intPt$1","li","segmentIndex$1","getNodeList","normalizedSegmentIndex","nextSegIndex","nextPt","addIntersections","getNodedSubstrings","segStrings","resultEdgelist","segStrings$1","ss","resultEdgelist$1","LineSegment","minX","seg","orient0","orient1","geomFactory","isVertical","project","projectionFactor","pf0","pf1","newp0","newp1","distancePerpendicular","minY","midPoint","closestPoints","closestPoint","close00","closestPt","close01","close10","close11","maxX","comp0","lineIntersection","maxY","pointAlongOffset","segmentLengthFraction","offsetDistance","ux","uy","segx","segy","setCoordinates","segmentFraction","inputPt","segFrac","isHorizontal","pointAlong","bits0","bits1","staticAccessors$24","tempEnv1","tempEnv2","_overlapSeg1","_overlapSeg2","MonotoneChainOverlapAction","overlap","mc1","getLineSegment","start1","mc2","start2","_start","_end","_context","_id","context","MonotoneChain","computeSelect","start0","end0","mcs","select","computeOverlaps","mc","mco","computeOverlapsInternal","setId","getEndIndex","getStartIndex","getContext","getId","end1","p00","p01","p10","p11","mid0","mid1","MonotoneChainBuilder","getChainStartIndices","startIndexList","findChainEnd","toIntArray","safeStart","chainQuad","getChains","pts$1","mcList","Noder","computeNodes","_segInt","setSegmentIntersector","segInt","SinglePassNoder","SinglePassNoder$$1","si","_monoChains","_index","_idCounter","_nodedSegStrings","_nOverlaps","MCIndexNoder","SegmentOverlapAction","getMonotoneChains","getIndex","segStr","segChains","inputSegStrings","intersectChains","queryChain","overlapChains","testChain","overlapAction","MonotoneChainOverlapAction$$1","_si","processIntersections","ss1","ss2","_quadrantSegments","BufferParameters","DEFAULT_QUADRANT_SEGMENTS","_endCapStyle","CAP_ROUND","_joinStyle","JOIN_ROUND","_mitreLimit","DEFAULT_MITRE_LIMIT","_isSingleSided","_simplifyFactor","DEFAULT_SIMPLIFY_FACTOR","setQuadrantSegments","quadrantSegments","quadrantSegments$1","setEndCapStyle","endCapStyle","quadrantSegments$2","endCapStyle$1","setJoinStyle","joinStyle","setMitreLimit","mitreLimit","CAP_FLAT","CAP_SQUARE","JOIN_MITRE","JOIN_BEVEL","getEndCapStyle","isSingleSided","quadSegs","getJoinStyle","setSimplifyFactor","simplifyFactor","getSimplifyFactor","getQuadrantSegments","getMitreLimit","setSingleSided","bufferDistanceError","alpha","staticAccessors$25","inputLine","_distanceTol","_isDeleted","_angleOrientation","_inputLine","INIT","DELETE","KEEP","NUM_PTS_TO_CHECK","BufferInputLineSimplifier","isDeletable","i0","distanceTol","isConcave","isShallow","isShallowSampled","deleteShallowConcavities","findNextNonDeletedIndex","midIndex","lastIndex","isMiddleVertexDeleted","isShallowConcavity","simplify","collapseLine","staticAccessors$26","_ptList","_minimimVertexDistance","COORDINATE_ARRAY_TYPE","OffsetSegmentString","addPt","bufPt","isRedundant","revere","addPts","lastPt","startPt","setMinimumVertexDistance","minimimVertexDistance","staticAccessors$28","PI_TIMES_2","PI_OVER_2","PI_OVER_4","Angle","toDegrees","isAcute","dx0","dy0","isObtuse","interiorAngle","angleNext","anglePrev","normalizePositive","angleBetween","tip1","tail","tip2","diff","a1","a2","ang1","ang2","delAngle","toRadians","angleDegrees","getTurn","crossproduct","angleBetweenOriented","angDel","staticAccessors$29","_maxCurveSegmentError","_filletAngleQuantum","_closingSegLengthFactor","_segList","_bufParams","_li","_s0","_s1","_s2","_seg0","_seg1","_offset0","_offset1","_side","_hasNarrowConcaveAngle","bufParams","OffsetSegmentGenerator","MAX_CLOSING_SEG_LEN_FACTOR","OFFSET_SEGMENT_SEPARATION_FACTOR","INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR","CURVE_VERTEX_SNAP_DISTANCE_FACTOR","addNextSegment","addStartPoint","computeOffsetSegment","addCollinear","outsideTurn","addOutsideTurn","addInsideTurn","addLineEndCap","offsetL","offsetR","addFilletArc","squareCapSideOffset","squareCapLOffset","squareCapROffset","addMitreJoin","offset0","offset1","isMitreWithinLimit","addLimitedMitreJoin","addFilletCorner","startAngle","endAngle","addBevelJoin","createSquare","addSegments","addFirstSegment","addLastSegment","initSideSegments","s1","s2","basePt","angDiff","ang0","angDiffHalf","midAng","mitreDist","bevelDelta","mitreMidAng","bevelMidX","bevelMidY","bevelMidPt","mitreMidLine","bevelHalfLen","bevelEndLeft","bevelEndRight","offset","sideSign","totalAngle","nSegs","initAngle","currAngle","currAngleInc","createCircle","hasNarrowConcaveAngle","staticAccessors$27","OffsetCurveBuilder","getOffsetCurve","inputPts","getSegGen","posDistance","computePointCurve","segGen","computeOffsetCurve","isRightSide","curvePts","computeSingleSidedBufferCurve","simplifyTolerance","distTol","simp2","simp1","computeRingBufferCurve","simp","computeLineBufferCurve","getLineCurve","getBufferParameters","bufDistance","getRingCurve","copyCoordinates","_subgraphs","_seg","_cga","subgraphs","DepthSegment","SubgraphDepthLocater","findStabbedSegments","bsg","stabbingRayLeftPt","stabbedSegments","stabbingRayLeftPt$1","stabbedSegments$1","ds","stabbingRayLeftPt$2","stabbedSegments$2","_leftDepth","staticAccessors$30","_upwardSeg","orientIndex","compareX","seg0","seg1","compare0","Triangle","interpolateZ","longestSideLength","circumcentre","area3D","inCentre","m00","m01","m10","m11","v0","lenAB","lenBC","maxLen","lenCA","cx","cy","ay","bx","by","perpendicularBisector","l1","l2","angleBisector","len0","frac","vz","uz","vy","vx","crossx","crossy","crossz","absSq","len1","circum","inCentreX","inCentreY","_inputGeom","_curveBuilder","_curveList","inputGeom","curveBuilder","OffsetCurveSetBuilder","addPoint","addCurve","curve","addPolygon","offsetSide","isErodedCompletely","shellCoord","addPolygonRing","holeCoord","isTriangleErodedCompletely","triangleCoord","bufferDistance","tri","addLineString","getCurves","cwLeftLoc","cwRightLoc","addCollection","ringCoord","envMinDimension","PointOnGeometryLocator","locate","_parent","_atStart","_max","_subcollectionIterator","GeometryCollectionIterator","isAtomic","SimplePointInAreaLocator","containsPointInPolygon","geomi","g2","_edgeMap","_edgeList","_ptInAreaLocation","EdgeEndStar","getNextCW","iNextCW","propagateSideLabels","startLoc","it$1","currLoc","isAreaLabelsConsistent","geomGraph","computeEdgeEndLabels","getBoundaryNodeRule","checkAreaLabelsConsistent","lastEdgeIndex","startLabel","findIndex","eSearch","getGeometry","computeLabelling","hasDimensionalCollapseEdge","geomi$1","getDegree","insertEdgeEnd","EdgeEndStar$$1","_resultAreaEdgeList","_SCANNING_FOR_INCOMING","_LINKING_TO_OUTGOING","DirectedEdgeStar","getResultAreaEdges","nextOut","firstOut","state","nextIn","incoming","de0","deLast","quad0","updateLabelling","nodeLabel","firstIn","prevOut","edgeIndex","startDepth","nextDepth","targetLastDepth","startDepth$1","endIndex","nextDe","currDepth","mergeSymLabels","degree$1","findCoveredLineEdges","nextOut$1","nextIn$1","eLabel","eLoc","NodeFactory$$1","OverlayNodeFactory","_orientation","OrientedCoordinateArray","compareOriented","oca","orientation1","orientation2","compPt","limit1","limit2","done1","done2","_ocaMap","EdgeList","edgeColl","findEdgeIndex","findEqualEdge","SegmentIntersector","e0","segIndex0","e1","segIndex1","_hasIntersection","_hasProper","_hasProperInterior","_hasInterior","_properIntersectionPoint","_isSelfIntersection","numIntersections","numInteriorIntersections","numProperIntersections","numTests","IntersectionAdder","isTrivialIntersection","isAdjacentSegments","getProperIntersectionPoint","hasProperInteriorIntersection","getLineIntersector","hasProperIntersection","hasInteriorIntersection","EdgeIntersection","getSegmentIndex","EdgeIntersectionList","MonotoneChainIndexer","env2","mcb","MonotoneChainEdge","chainIndex","computeIntersectsForChain","chainIndex0","mce","chainIndex1","mce$1","getStartIndexes","computeIntersects","Depth","NULL_VALUE","depthValue","minDepth","newValue","getDelta","depthAtLocation","staticAccessors$31","_mce","_isIsolated","_depthDelta","Edge","getCollapsedEdge","newPts","setIsolated","setName","isEqualForward","iRev","isEqualReverse","isCollapsed","getMaximumSegmentIndex","getMonotoneChainEdge","isPointwiseEqual","setDepthDelta","getEdgeIntersectionList","setAtLeastIfValid","_workingPrecisionModel","_workingNoder","_graph","BufferBuilder","setWorkingPrecisionModel","insertUniqueEdge","existingEdge","labelToMerge","existingLabel","existingDelta","mergeDelta","newDelta","buildSubgraphs","subgraphList","polyBuilder","subgraph","processedGraphs","locater","createSubgraphs","createEmptyResultGeometry","getNoder","noder","buffer","curveSetBuilder","bufferSegStrList","computeNodedEdges","nodedSegStrings","oldLabel","setNoder","lLoc","rLoc","convertSegStrings","_noder","_scaleFactor","_offsetX","_offsetY","_isScaled","scaleFactor","isIntegerPrecision","noder$1","scaleFactor$1","offsetX","offsetY","ScaledNoder","rescale","nodedSegmentStrings","roundPts","splitSS","intSegStrings","_segStrings","NodingValidator","checkEndPtVertexIntersections","ss$1","checkInteriorIntersections","ss0","ss0$1","ss1$1","pts0","checkValid","checkCollapses","checkCollapse","staticAccessors$33","_pt","_originalPt","_ptScaled","_p0Scaled","_p1Scaled","_corner","_safeEnv","initCorners","SAFE_ENV_EXPANSION_FACTOR","HotPixel","intersectsScaled","segMinx","segMaxx","segMiny","segMaxy","isOutsidePixelEnv","intersectsToleranceSquare","copyScaled","pScaled","getSafeEnvelope","safeTolerance","intersectsPixelClosure","intersectsLeft","intersectsBottom","addSnappedNode","segIndex","staticAccessors$34","selectedSegment","MonotoneChainSelectAction","HotPixelSnapAction","MCIndexPointSnapper","snap","hotPixel","hotPixel$1","parentEdge","hotPixelVertexIndex","pixelEnv","hotPixelSnapAction","isNodeAdded","staticAccessors$35","MonotoneChainSelectAction$$1","_hotPixel","_parentEdge","_hotPixelVertexIndex","_isNodeAdded","_interiorIntersections","InteriorIntersectionFinderAdder","getInteriorIntersections","_pm","_pointSnapper","MCIndexSnapRounder","checkCorrectness","inputSegmentStrings","resultSegStrings","nv","snapRound","findInteriorIntersections","computeIntersectionSnaps","intersections","computeVertexSnaps","intFinderAdder","edge0","snapPts","snapPt","_argGeom","_resultGeometry","_saveException","CAP_BUTT","MAX_PRECISION_DIGITS","BufferOp","bufferFixedPrecision","fixedPM","bufBuilder","bufferReducedPrecision","precDigits","precisionScaleFactor","precisionDigits","sizeBasedScaleFactor","computeGeometry","bufferOriginalPrecision","argPM","getResultGeometry","bufferOp","bufOp","distance$1","g$2","params","distance$2","g$3","bufOp$2","distance$3","maxPrecisionDigits","envMax","expandByDistance","bufEnvMax","bufEnvPrecisionDigits","minUnitLog10","staticAccessors$32","_isNull","PointPairDistance","setMinimum","ptDist","initialize","setMaximum","DistanceToPointFinder","computeDistance","tempSegment","pt$1","ptDist$1","pt$2","ptDist$2","segment","pt$3","ptDist$3","closestPt$1","_maxPtDist","MaxPointDistanceFilter","MaxMidpointDistanceFilter","BufferCurveMaximumDistanceFinder","computeMaxMidpointDistance","distFilter","getMaxPointDistance","computeMaxVertexDistance","findDistance","bufferCurve","getDistancePoints","staticAccessors$36","_minPtDist","midPt","comps","_comps","PolygonExtracter","_lines","_isForcedToLineString","lines$1","isForcedToLineString","LinearComponentExtracter","setForceToLineString","getLines","forceToLineString","geoms","geom$2","lines$2","geoms$1","lines$3","forceToLineString$1","geom$3","lines$4","forceToLineString$2","_boundaryRule","_isIn","_numBoundaries","boundaryRule","PointLocator","locateInternal","locateInPolygonRing","shellLoc","holeLoc","p$2","updateLocationInfo","computeLocation","ml","mpoly","_component","_segIndex","GeometryLocation","component","INSIDE_AREA","component$1","isInsideArea","getGeometryComponent","staticAccessors$38","PointExtracter","getPoints","_locations","locations","ConnectedElementLocationFilter","_terminateDistance","_ptLocator","_minDistanceLocation","_minDistance","g0","g1","g0$1","g1$1","terminateDistance","DistanceOp","computeContainmentDistance","locPtPoly","polyGeomIndex","locationsIndex","insideLocs","locPtPoly$1","locs","polys$1","locPtPoly$2","ptLoc","locPtPoly$3","computeMinDistanceLinesPoints","locGeom","computeMinDistance","computeFacetDistance","computeMinDistanceLines","lines0","lines1","updateMinDistance","computeMinDistancePoints","nearestLocations","nearestPoints","coord0","segClosestPoint","line0","line1","coord0$1","dist$1","locGeom$1","points0","points1","isWithinDistance","PointPairDistance$2","DistanceToPoint","_g0","_g1","_ptDist","_densifyFrac","MaxDensifiedByFractionDistanceFilter","DiscreteHausdorffDistance","setDensifyFraction","densifyFrac","compute","computeOrientedDistance","discreteGeom","fracFilter","orientedDistance","staticAccessors$39","_euclideanDist","MaxPointDistanceFilter$1","_numSubSegs","fraction","delx","dely","_minValidDistance","_maxValidDistance","_minDistanceFound","_maxDistanceFound","_isValid","_errMsg","_errorLocation","_errorIndicator","_input","_bufDistance","VERBOSE","MAX_DISTANCE_DIFF_FRAC","BufferDistanceValidator","checkMaximumDistance","bufCurve","maxDist","haus","distDelta","checkPositiveValid","checkNegativeValid","getPolygonLines","checkMinimumDistance","inputCurve","getErrorIndicator","distOp","getErrorLocation","lineExtracter","getErrorMessage","staticAccessors$37","_errorMsg","MAX_ENV_DIFF_FRAC","BufferResultValidator","checkPolygonal","checkExpectedEmpty","checkEnvelope","checkArea","checkDistance","padding","expectedEnv","bufEnv","report","distValid","inputArea","resultArea","checkName","isValidMsg","validator","staticAccessors$40","BasicSegmentString","_findAllIntersections","_isCheckEndSegmentsOnly","_interiorIntersection","_intSegments","_intersections","_intersectionCount","_keepIntersections","InteriorIntersectionFinder","getInteriorIntersection","setCheckEndSegmentsOnly","isCheckEndSegmentsOnly","getIntersectionSegments","getIntersections","setFindAllIntersections","findAllIntersections","setKeepIntersections","keepIntersections","isEndSegment","createAllIntersectionsFinder","finder","createAnyIntersectionFinder","createIntersectionCounter","FastNodingValidator","execute","intSegs","computeIntersections","_nv","EdgeNodingValidator","toSegmentStrings","mapOp","_mapOp","GeometryCollectionMapper","mapped","op","_op","_lineEdgesList","_resultLineList","ptLocator","LineBuilder","collectLines","opCode","getGraph","collectLineEdge","collectBoundaryTouchEdge","labelIsolatedLine","targetIndex","getArgGeometry","buildLines","isResultOfOp","isCoveredByA","labelIsolatedLines","edgesList","INTERSECTION","_resultPointList","PointBuilder","filterCoveredNodeToPoint","isCoveredByLA","extractNonCoveredResultNodes","_pruneEmptyGeometry","_preserveGeometryCollectionType","_preserveCollections","_preserveType","GeometryTransformer","transformPoint","transformCoordinates","transformPolygon","transformLinearRing","isAllValidLinearRings","createCoordinateSequence","getInputGeometry","transformMultiLineString","transformLineString","transformGeom","transGeomList","transformMultiPoint","transformMultiPolygon","transformGeometryCollection","transform","seqSize","_snapTolerance","_srcPts","_allowSnappingToSourceVertices","_isClosed","LineStringSnapper","srcLine","snapTolerance","srcPts","snapTolerance$1","snapVertices","srcCoords","findSnapForVertex","srcPt","snapVert","snapTo","snapSegments","distinctPtCount","findSegmentIndexToSnap","snapIndex","setAllowSnappingToSourceVertices","allowSnappingToSourceVertices","srcGeom","_srcGeom","SNAP_PRECISION_FACTOR","GeometrySnapper","snapGeom","extractTargetCoordinates","snapToSelf","cleanResult","snapTrans","snappedGeom","computeSnapTolerance","ringPts","computeMinimumSegmentLength","ptSet","segLen","minSegLen","snapper0","snapper1","computeOverlaySnapTolerance","computeSizeBasedSnapTolerance","fixedSnapTol","staticAccessors$41","GeometryTransformer$$1","isSelfSnap","_snapPts","_isSelfSnap","SnapTransformer","snapLine","snapper","_isFirst","_commonMantissaBitsCount","_commonBits","_commonSignExp","CommonBits","getCommon","numBits","signExpBits","numCommonMostSigMantissaBits","zeroLowerBits","bits","toBinaryString","numStr","padStr","bitStr","getBit","nBits","num1","num2","_commonCoord","_ccFilter","CommonCoordinateFilter","Translater","CommonBitsRemover","addCommonBits","trans","removeCommonBits","invCoord","getCommonCoordinate","staticAccessors$42","_commonBitsX","_commonBitsY","xp","yp","_cbr","SnapOverlayOp","selfSnap","remGeom","prepareResult","overlayOp","prepGeom","union","UNION","symDifference","SYMDIFFERENCE","difference","DIFFERENCE","SnapIfNeededOverlayOp","isSuccess","savedException","MonotoneChain$2","_xValue","_eventType","_insertEvent","_deleteEventIndex","_obj","SweepLineEvent","insertEvent","INSERT","isDelete","setDeleteEventIndex","deleteEventIndex","getObject","pe","getInsertEvent","isInsert","isSameLabel","ev","getDeleteEventIndex","staticAccessors$43","EdgeSetIntersector","_includeProper","_recordIsolated","_numIntersections","_bdyNodes","_isDone","_isDoneWhenProperInt","includeProper","recordIsolated","SegmentIntersector$2","setIsDoneIfProperInt","isDoneWhenProperInt","isBoundaryPointInternal","isBoundaryPoint","setBoundaryNodes","bdyNodes0","bdyNodes1","EdgeSetIntersector$$1","events","nOverlaps","SimpleMCSweepLineIntersector","prepareEvents","processOverlaps","edges0","edges1","si$1","testAllSegments","si$2","addEdge","edgeSet","ev0","ev1","mc0","edges$1","_min","NEGATIVE_INFINITY","NodeComparator","IntervalRTreeNode","getMin","queryMin","queryMax","getMax","staticAccessors$45","mid2","IntervalRTreeNode$$1","IntervalRTreeLeafNode","_node1","_node2","buildExtent","IntervalRTreeBranchNode","_leaves","SortedPackedIntervalRTree","buildTree","buildLevel","buildRoot","printNode","ArrayListVisitor","getItems","SegmentVisitor","IntervalIndexedGeometry","IndexedPointInAreaLocator","rcc","staticAccessors$44","_counter","addLine","PlanarGraph$$1","_parentGeom","_lineEdgeMap","_boundaryNodeRule","_useBoundaryDeterminationRule","_argIndex","_boundaryNodes","_hasTooFewPoints","_invalidPoint","_areaPtLocator","parentGeom","argIndex$1","parentGeom$1","boundaryNodeRule$1","GeometryGraph","insertBoundaryPoint","determineBoundary","computeSelfNodes","computeRingSelfNodes","li$1","isDoneIfProperInt","createEdgeSetIntersector","computeRingSelfNodes$1","isRings","esi","computeAllSegments","addSelfIntersectionNodes","computeSplitEdges","edgelist","computeEdgeIntersections","hasTooFewPoints","insertPoint","getInvalidPoint","getBoundaryPoints","addSelfIntersectionNode","cwLeft","cwRight","eiIt","_resultPrecisionModel","_arg","setComputationPrecision","g0$2","GeometryGraphOp","GeometryMapper","MapOp","op$1","gr","mapped$1","_resultGeom","_resultPolyList","cancelDuplicateResultEdges","resultPointList","resultLineList","opcode","createEmptyResult","replaceCollapsedEdges","newEdges","updateNodeLabelling","overlayOpCode","computeOverlay","insertUniqueEdges","copyPoints","baseSplitEdges","computeLabelsFromDepths","labelIncompleteNodes","findResultAreaEdges","lineBuilder","pointBuilder","labelIncompleteNode","graphNode","ni","resultDimension","dim0","dim1","geomFact","loc0","loc1","loc0$1","loc1$1","_g","_boundaryDistanceTolerance","_linework","boundaryDistanceTolerance","extractLinework","FuzzyPointLocator","isWithinToleranceOfBoundary","extracter","getLinework","linework","PolygonalLineworkExtracter","_doLeft","_doRight","OffsetPointGenerator","extractPoints","offsetPts","computeOffsetPoints","setSidesToGenerate","doLeft","doRight","midX","midY","offsetLeft","offsetRight","_locFinder","_location","_invalidLocation","OverlayResultValidator","TOLERANCE","_testCoords","computeBoundaryDistanceTolerance","reportResult","expectedInterior","addTestPts","hasLocation","isValidResult","overlayOp$1","ptGen","resultInInterior","getInvalidLocation","staticAccessors$46","_geomFactory","_skipEmpty","_inputGeoms","GeometryCombiner","extractFactory","extractElements","elems","elemGeom","combine","createList","obj0","obj1","list$1","obj0$1","obj1$1","obj2","_inputPolys","STRTREE_NODE_CAPACITY","CascadedPolygonUnion","reduceToGeometries","geomTree","unionTree","extractByEnvelope","disjointGeoms","elem","intersectingGeoms","unionOptimized","g0Env","g1Env","unionActual","unionUsingEnvelopeIntersection","commonEnv","itemTree","binaryUnion","unionSafe","repeatedUnion","restrictToPolygons","common","disjointPolys","g0Int","g1Int","bufferUnion","staticAccessors$47","p02","p03","p04","p05","p06","p07","p08","p09","p12","p13","p14","p15","p16","p17","p18","p19","p20","p21","p22","p23","p24","p25","p26","p27","p28","p29","p30","p31","p32","p33","p34","p35","p36","p37","p38","p39","IsolineCalc","_getPointGrid","multiLineStringFeatures","_getLines","polylines","_transformMultiToArray","multiPolygonFeature","_getPolygons","multi","v","propertyName","_getFlatArray","flatBounds","inputPoints","_getMinAndMax","_pointsToFeatureCollection","interpolateCellSize","prop","self","addEventListener","startAt","Date","isolineCalc","computedData","calcIsolines","postMessage","error"],"mappings":"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"}